Terminals unused in grammar

   FOR_EXPRESSION
   PROGRAM
   VAR
   THEN
   ELSE
   DO
   DOT
   COLON
   BANG
   IF_EXPRESSION
   MULOP


State 17 conflicts: 3 shift/reduce
State 24 conflicts: 5 shift/reduce
State 38 conflicts: 1 shift/reduce
State 78 conflicts: 1 shift/reduce
State 111 conflicts: 5 shift/reduce
State 136 conflicts: 5 shift/reduce


Grammar

    0 $accept: program $end

    1 identifier_list: vars_decl

    2 $@1: %empty

    3 identifier_list: identifier_list COMMA $@1 vars_decl

    4 vars_decl: var_decl

    5 $@2: %empty

    6 vars_decl: vars_decl COMMA $@2 var_decl

    7 $@3: %empty

    8 var_decl: ID $@3 assign_var
    9         | %empty

   10 $@4: %empty

   11 assign_var: ASSIGNOP $@4 math_var
   12           | %empty

   13 math_var: item_var

   14 $@5: %empty

   15 math_var: math_var ADDOP $@5 item_var

   16 item_var: ID
   17         | REALNO
   18         | INT
   19         | FUNC

   20 $@6: %empty

   21 declarations: declarations type $@6 identifier_list SEMICOLON

   22 $@7: %empty

   23 declarations: type $@7 identifier_list SEMICOLON
   24             | %empty

   25 type: INTEGER
   26     | REAL
   27     | STRING

   28 $@8: %empty

   29 $@9: %empty

   30 program: $@8 includes BEGINT $@9 states END

   31 includes: include
   32         | includes include

   33 include: INCLUDE

   34 states: state
   35       | states state

   36 $@10: %empty

   37 $@11: %empty

   38 state: STATE_DEC ID $@10 ROBRK declarations $@11 optional_statements TRANSITION trans_state SEMICOLON RCBRK

   39 trans_state: ID

   40 optional_statements: optional_statements statement_list
   41                    | statement_list
   42                    | %empty

   43 statement_list: statement
   44               | statement_list SEMICOLON statement

   45 statement: operations

   46 $@12: %empty

   47 $@13: %empty

   48 $@14: %empty

   49 statement: FOR ROPAR ID ASSIGNOP $@12 item SEMICOLON ID RELOP $@13 item SEMICOLON ID PPMM $@14 RCPAR ROBRK optional_statements RCBRK

   50 $@15: %empty

   51 $@16: %empty

   52 statement: IF ROPAR $@15 comparison_list RCPAR ROBRK $@16 optional_statements RCBRK

   53 $@17: %empty

   54 statement: PRINTF $@17 ROPAR printf RCPAR SEMICOLON
   55          | INSERT_C

   56 $@18: %empty

   57 printf: QUOTE COMMA $@18 vars_print
   58       | QUOTE

   59 vars_print: var_print

   60 $@19: %empty

   61 vars_print: vars_print COMMA $@19 var_print

   62 $@20: %empty

   63 var_print: ID $@20 assign

   64 $@21: %empty

   65 assign: ASSIGNOP $@21 math
   66       | %empty

   67 $@22: %empty

   68 operations: ID ASSIGNOP $@22 math SEMICOLON

   69 math: item

   70 $@23: %empty

   71 math: math ADDOP $@23 item

   72 item: ID
   73     | REALNO
   74     | INT
   75     | FUNC

   76 comparison_list: comparison

   77 $@24: %empty

   78 comparison_list: comparison_list AND $@24 comparison

   79 $@25: %empty

   80 comparison_list: comparison_list OR $@25 comparison

   81 comparison: ID RELOP INT
   82           | ID RELOP ID
   83           | ID RELOP FUNC


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 18 74 81
REALNO (259) 17 73
ID (260) 8 16 38 39 49 63 68 72 81 82 83
FOR_EXPRESSION (261)
INSERT_C (262) 55
FUNC (263) 19 75 83
RELOP (264) 49 81 82 83
PRINTF (265) 54
QUOTE (266) 57 58
INCLUDE (267) 33
PPMM (268) 49
PROGRAM (269)
INTEGER (270) 25
REAL (271) 26
VAR (272)
BEGINT (273) 30
END (274) 30
STATE_DEC (275) 38
IF (276) 52
FOR (277) 49
THEN (278)
ELSE (279)
DO (280)
ROPAR (281) 49 52 54
RCPAR (282) 49 52 54
ROBRK (283) 38 49 52
RCBRK (284) 38 49 52
DOT (285)
SEMICOLON (286) 21 23 38 44 49 54 68
COMMA (287) 3 6 57 61
COLON (288)
TRANSITION (289) 38
ASSIGNOP (290) 11 49 65 68
AND (291) 78
OR (292) 80
STRING (293) 27
BANG (294)
IF_EXPRESSION (295)
MULOP (296)
ADDOP (297) 15 71


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
identifier_list (44)
    on left: 1 3, on right: 3 21 23
$@1 (45)
    on left: 2, on right: 3
vars_decl (46)
    on left: 4 6, on right: 1 3 6
$@2 (47)
    on left: 5, on right: 6
var_decl (48)
    on left: 8 9, on right: 4 6
$@3 (49)
    on left: 7, on right: 8
assign_var (50)
    on left: 11 12, on right: 8
$@4 (51)
    on left: 10, on right: 11
math_var (52)
    on left: 13 15, on right: 11 15
$@5 (53)
    on left: 14, on right: 15
item_var (54)
    on left: 16 17 18 19, on right: 13 15
declarations (55)
    on left: 21 23 24, on right: 21 38
$@6 (56)
    on left: 20, on right: 21
$@7 (57)
    on left: 22, on right: 23
type (58)
    on left: 25 26 27, on right: 21 23
program (59)
    on left: 30, on right: 0
$@8 (60)
    on left: 28, on right: 30
$@9 (61)
    on left: 29, on right: 30
includes (62)
    on left: 31 32, on right: 30 32
include (63)
    on left: 33, on right: 31 32
states (64)
    on left: 34 35, on right: 30 35
state (65)
    on left: 38, on right: 34 35
$@10 (66)
    on left: 36, on right: 38
$@11 (67)
    on left: 37, on right: 38
trans_state (68)
    on left: 39, on right: 38
optional_statements (69)
    on left: 40 41 42, on right: 38 40 49 52
statement_list (70)
    on left: 43 44, on right: 40 41 44
statement (71)
    on left: 45 49 52 54 55, on right: 43 44
$@12 (72)
    on left: 46, on right: 49
$@13 (73)
    on left: 47, on right: 49
$@14 (74)
    on left: 48, on right: 49
$@15 (75)
    on left: 50, on right: 52
$@16 (76)
    on left: 51, on right: 52
$@17 (77)
    on left: 53, on right: 54
printf (78)
    on left: 57 58, on right: 54
$@18 (79)
    on left: 56, on right: 57
vars_print (80)
    on left: 59 61, on right: 57 61
$@19 (81)
    on left: 60, on right: 61
var_print (82)
    on left: 63, on right: 59 61
$@20 (83)
    on left: 62, on right: 63
assign (84)
    on left: 65 66, on right: 63
$@21 (85)
    on left: 64, on right: 65
operations (86)
    on left: 68, on right: 45
$@22 (87)
    on left: 67, on right: 68
math (88)
    on left: 69 71, on right: 65 68 71
$@23 (89)
    on left: 70, on right: 71
item (90)
    on left: 72 73 74 75, on right: 49 69 71
comparison_list (91)
    on left: 76 78 80, on right: 52 78 80
$@24 (92)
    on left: 77, on right: 78
$@25 (93)
    on left: 79, on right: 80
comparison (94)
    on left: 81 82 83, on right: 76 78 80


State 0

    0 $accept: . program $end

    $default  reduce using rule 28 ($@8)

    program  go to state 1
    $@8      go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

   30 program: $@8 . includes BEGINT $@9 states END

    INCLUDE  shift, and go to state 4

    includes  go to state 5
    include   go to state 6


State 3

    0 $accept: program $end .

    $default  accept


State 4

   33 include: INCLUDE .

    $default  reduce using rule 33 (include)


State 5

   30 program: $@8 includes . BEGINT $@9 states END
   32 includes: includes . include

    INCLUDE  shift, and go to state 4
    BEGINT   shift, and go to state 7

    include  go to state 8


State 6

   31 includes: include .

    $default  reduce using rule 31 (includes)


State 7

   30 program: $@8 includes BEGINT . $@9 states END

    $default  reduce using rule 29 ($@9)

    $@9  go to state 9


State 8

   32 includes: includes include .

    $default  reduce using rule 32 (includes)


State 9

   30 program: $@8 includes BEGINT $@9 . states END

    STATE_DEC  shift, and go to state 10

    states  go to state 11
    state   go to state 12


State 10

   38 state: STATE_DEC . ID $@10 ROBRK declarations $@11 optional_statements TRANSITION trans_state SEMICOLON RCBRK

    ID  shift, and go to state 13


State 11

   30 program: $@8 includes BEGINT $@9 states . END
   35 states: states . state

    END        shift, and go to state 14
    STATE_DEC  shift, and go to state 10

    state  go to state 15


State 12

   34 states: state .

    $default  reduce using rule 34 (states)


State 13

   38 state: STATE_DEC ID . $@10 ROBRK declarations $@11 optional_statements TRANSITION trans_state SEMICOLON RCBRK

    $default  reduce using rule 36 ($@10)

    $@10  go to state 16


State 14

   30 program: $@8 includes BEGINT $@9 states END .

    $default  reduce using rule 30 (program)


State 15

   35 states: states state .

    $default  reduce using rule 35 (states)


State 16

   38 state: STATE_DEC ID $@10 . ROBRK declarations $@11 optional_statements TRANSITION trans_state SEMICOLON RCBRK

    ROBRK  shift, and go to state 17


State 17

   38 state: STATE_DEC ID $@10 ROBRK . declarations $@11 optional_statements TRANSITION trans_state SEMICOLON RCBRK

    INTEGER  shift, and go to state 18
    REAL     shift, and go to state 19
    STRING   shift, and go to state 20

    INTEGER   [reduce using rule 24 (declarations)]
    REAL      [reduce using rule 24 (declarations)]
    STRING    [reduce using rule 24 (declarations)]
    $default  reduce using rule 24 (declarations)

    declarations  go to state 21
    type          go to state 22


State 18

   25 type: INTEGER .

    $default  reduce using rule 25 (type)


State 19

   26 type: REAL .

    $default  reduce using rule 26 (type)


State 20

   27 type: STRING .

    $default  reduce using rule 27 (type)


State 21

   21 declarations: declarations . type $@6 identifier_list SEMICOLON
   38 state: STATE_DEC ID $@10 ROBRK declarations . $@11 optional_statements TRANSITION trans_state SEMICOLON RCBRK

    INTEGER  shift, and go to state 18
    REAL     shift, and go to state 19
    STRING   shift, and go to state 20

    $default  reduce using rule 37 ($@11)

    type  go to state 23
    $@11  go to state 24


State 22

   23 declarations: type . $@7 identifier_list SEMICOLON

    $default  reduce using rule 22 ($@7)

    $@7  go to state 25


State 23

   21 declarations: declarations type . $@6 identifier_list SEMICOLON

    $default  reduce using rule 20 ($@6)

    $@6  go to state 26


State 24

   38 state: STATE_DEC ID $@10 ROBRK declarations $@11 . optional_statements TRANSITION trans_state SEMICOLON RCBRK

    ID        shift, and go to state 27
    INSERT_C  shift, and go to state 28
    PRINTF    shift, and go to state 29
    IF        shift, and go to state 30
    FOR       shift, and go to state 31

    ID        [reduce using rule 42 (optional_statements)]
    INSERT_C  [reduce using rule 42 (optional_statements)]
    PRINTF    [reduce using rule 42 (optional_statements)]
    IF        [reduce using rule 42 (optional_statements)]
    FOR       [reduce using rule 42 (optional_statements)]
    $default  reduce using rule 42 (optional_statements)

    optional_statements  go to state 32
    statement_list       go to state 33
    statement            go to state 34
    operations           go to state 35


State 25

   23 declarations: type $@7 . identifier_list SEMICOLON

    ID  shift, and go to state 36

    $default  reduce using rule 9 (var_decl)

    identifier_list  go to state 37
    vars_decl        go to state 38
    var_decl         go to state 39


State 26

   21 declarations: declarations type $@6 . identifier_list SEMICOLON

    ID  shift, and go to state 36

    $default  reduce using rule 9 (var_decl)

    identifier_list  go to state 40
    vars_decl        go to state 38
    var_decl         go to state 39


State 27

   68 operations: ID . ASSIGNOP $@22 math SEMICOLON

    ASSIGNOP  shift, and go to state 41


State 28

   55 statement: INSERT_C .

    $default  reduce using rule 55 (statement)


State 29

   54 statement: PRINTF . $@17 ROPAR printf RCPAR SEMICOLON

    $default  reduce using rule 53 ($@17)

    $@17  go to state 42


State 30

   52 statement: IF . ROPAR $@15 comparison_list RCPAR ROBRK $@16 optional_statements RCBRK

    ROPAR  shift, and go to state 43


State 31

   49 statement: FOR . ROPAR ID ASSIGNOP $@12 item SEMICOLON ID RELOP $@13 item SEMICOLON ID PPMM $@14 RCPAR ROBRK optional_statements RCBRK

    ROPAR  shift, and go to state 44


State 32

   38 state: STATE_DEC ID $@10 ROBRK declarations $@11 optional_statements . TRANSITION trans_state SEMICOLON RCBRK
   40 optional_statements: optional_statements . statement_list

    ID          shift, and go to state 27
    INSERT_C    shift, and go to state 28
    PRINTF      shift, and go to state 29
    IF          shift, and go to state 30
    FOR         shift, and go to state 31
    TRANSITION  shift, and go to state 45

    statement_list  go to state 46
    statement       go to state 34
    operations      go to state 35


State 33

   41 optional_statements: statement_list .
   44 statement_list: statement_list . SEMICOLON statement

    SEMICOLON  shift, and go to state 47

    $default  reduce using rule 41 (optional_statements)


State 34

   43 statement_list: statement .

    $default  reduce using rule 43 (statement_list)


State 35

   45 statement: operations .

    $default  reduce using rule 45 (statement)


State 36

    8 var_decl: ID . $@3 assign_var

    $default  reduce using rule 7 ($@3)

    $@3  go to state 48


State 37

    3 identifier_list: identifier_list . COMMA $@1 vars_decl
   23 declarations: type $@7 identifier_list . SEMICOLON

    SEMICOLON  shift, and go to state 49
    COMMA      shift, and go to state 50


State 38

    1 identifier_list: vars_decl .
    6 vars_decl: vars_decl . COMMA $@2 var_decl

    COMMA  shift, and go to state 51

    COMMA     [reduce using rule 1 (identifier_list)]
    $default  reduce using rule 1 (identifier_list)


State 39

    4 vars_decl: var_decl .

    $default  reduce using rule 4 (vars_decl)


State 40

    3 identifier_list: identifier_list . COMMA $@1 vars_decl
   21 declarations: declarations type $@6 identifier_list . SEMICOLON

    SEMICOLON  shift, and go to state 52
    COMMA      shift, and go to state 50


State 41

   68 operations: ID ASSIGNOP . $@22 math SEMICOLON

    $default  reduce using rule 67 ($@22)

    $@22  go to state 53


State 42

   54 statement: PRINTF $@17 . ROPAR printf RCPAR SEMICOLON

    ROPAR  shift, and go to state 54


State 43

   52 statement: IF ROPAR . $@15 comparison_list RCPAR ROBRK $@16 optional_statements RCBRK

    $default  reduce using rule 50 ($@15)

    $@15  go to state 55


State 44

   49 statement: FOR ROPAR . ID ASSIGNOP $@12 item SEMICOLON ID RELOP $@13 item SEMICOLON ID PPMM $@14 RCPAR ROBRK optional_statements RCBRK

    ID  shift, and go to state 56


State 45

   38 state: STATE_DEC ID $@10 ROBRK declarations $@11 optional_statements TRANSITION . trans_state SEMICOLON RCBRK

    ID  shift, and go to state 57

    trans_state  go to state 58


State 46

   40 optional_statements: optional_statements statement_list .
   44 statement_list: statement_list . SEMICOLON statement

    SEMICOLON  shift, and go to state 47

    $default  reduce using rule 40 (optional_statements)


State 47

   44 statement_list: statement_list SEMICOLON . statement

    ID        shift, and go to state 27
    INSERT_C  shift, and go to state 28
    PRINTF    shift, and go to state 29
    IF        shift, and go to state 30
    FOR       shift, and go to state 31

    statement   go to state 59
    operations  go to state 35


State 48

    8 var_decl: ID $@3 . assign_var

    ASSIGNOP  shift, and go to state 60

    $default  reduce using rule 12 (assign_var)

    assign_var  go to state 61


State 49

   23 declarations: type $@7 identifier_list SEMICOLON .

    $default  reduce using rule 23 (declarations)


State 50

    3 identifier_list: identifier_list COMMA . $@1 vars_decl

    $default  reduce using rule 2 ($@1)

    $@1  go to state 62


State 51

    6 vars_decl: vars_decl COMMA . $@2 var_decl

    $default  reduce using rule 5 ($@2)

    $@2  go to state 63


State 52

   21 declarations: declarations type $@6 identifier_list SEMICOLON .

    $default  reduce using rule 21 (declarations)


State 53

   68 operations: ID ASSIGNOP $@22 . math SEMICOLON

    INT     shift, and go to state 64
    REALNO  shift, and go to state 65
    ID      shift, and go to state 66
    FUNC    shift, and go to state 67

    math  go to state 68
    item  go to state 69


State 54

   54 statement: PRINTF $@17 ROPAR . printf RCPAR SEMICOLON

    QUOTE  shift, and go to state 70

    printf  go to state 71


State 55

   52 statement: IF ROPAR $@15 . comparison_list RCPAR ROBRK $@16 optional_statements RCBRK

    ID  shift, and go to state 72

    comparison_list  go to state 73
    comparison       go to state 74


State 56

   49 statement: FOR ROPAR ID . ASSIGNOP $@12 item SEMICOLON ID RELOP $@13 item SEMICOLON ID PPMM $@14 RCPAR ROBRK optional_statements RCBRK

    ASSIGNOP  shift, and go to state 75


State 57

   39 trans_state: ID .

    $default  reduce using rule 39 (trans_state)


State 58

   38 state: STATE_DEC ID $@10 ROBRK declarations $@11 optional_statements TRANSITION trans_state . SEMICOLON RCBRK

    SEMICOLON  shift, and go to state 76


State 59

   44 statement_list: statement_list SEMICOLON statement .

    $default  reduce using rule 44 (statement_list)


State 60

   11 assign_var: ASSIGNOP . $@4 math_var

    $default  reduce using rule 10 ($@4)

    $@4  go to state 77


State 61

    8 var_decl: ID $@3 assign_var .

    $default  reduce using rule 8 (var_decl)


State 62

    3 identifier_list: identifier_list COMMA $@1 . vars_decl

    ID  shift, and go to state 36

    $default  reduce using rule 9 (var_decl)

    vars_decl  go to state 78
    var_decl   go to state 39


State 63

    6 vars_decl: vars_decl COMMA $@2 . var_decl

    ID  shift, and go to state 36

    $default  reduce using rule 9 (var_decl)

    var_decl  go to state 79


State 64

   74 item: INT .

    $default  reduce using rule 74 (item)


State 65

   73 item: REALNO .

    $default  reduce using rule 73 (item)


State 66

   72 item: ID .

    $default  reduce using rule 72 (item)


State 67

   75 item: FUNC .

    $default  reduce using rule 75 (item)


State 68

   68 operations: ID ASSIGNOP $@22 math . SEMICOLON
   71 math: math . ADDOP $@23 item

    SEMICOLON  shift, and go to state 80
    ADDOP      shift, and go to state 81


State 69

   69 math: item .

    $default  reduce using rule 69 (math)


State 70

   57 printf: QUOTE . COMMA $@18 vars_print
   58       | QUOTE .

    COMMA  shift, and go to state 82

    $default  reduce using rule 58 (printf)


State 71

   54 statement: PRINTF $@17 ROPAR printf . RCPAR SEMICOLON

    RCPAR  shift, and go to state 83


State 72

   81 comparison: ID . RELOP INT
   82           | ID . RELOP ID
   83           | ID . RELOP FUNC

    RELOP  shift, and go to state 84


State 73

   52 statement: IF ROPAR $@15 comparison_list . RCPAR ROBRK $@16 optional_statements RCBRK
   78 comparison_list: comparison_list . AND $@24 comparison
   80                | comparison_list . OR $@25 comparison

    RCPAR  shift, and go to state 85
    AND    shift, and go to state 86
    OR     shift, and go to state 87


State 74

   76 comparison_list: comparison .

    $default  reduce using rule 76 (comparison_list)


State 75

   49 statement: FOR ROPAR ID ASSIGNOP . $@12 item SEMICOLON ID RELOP $@13 item SEMICOLON ID PPMM $@14 RCPAR ROBRK optional_statements RCBRK

    $default  reduce using rule 46 ($@12)

    $@12  go to state 88


State 76

   38 state: STATE_DEC ID $@10 ROBRK declarations $@11 optional_statements TRANSITION trans_state SEMICOLON . RCBRK

    RCBRK  shift, and go to state 89


State 77

   11 assign_var: ASSIGNOP $@4 . math_var

    INT     shift, and go to state 90
    REALNO  shift, and go to state 91
    ID      shift, and go to state 92
    FUNC    shift, and go to state 93

    math_var  go to state 94
    item_var  go to state 95


State 78

    3 identifier_list: identifier_list COMMA $@1 vars_decl .
    6 vars_decl: vars_decl . COMMA $@2 var_decl

    COMMA  shift, and go to state 51

    COMMA     [reduce using rule 3 (identifier_list)]
    $default  reduce using rule 3 (identifier_list)


State 79

    6 vars_decl: vars_decl COMMA $@2 var_decl .

    $default  reduce using rule 6 (vars_decl)


State 80

   68 operations: ID ASSIGNOP $@22 math SEMICOLON .

    $default  reduce using rule 68 (operations)


State 81

   71 math: math ADDOP . $@23 item

    $default  reduce using rule 70 ($@23)

    $@23  go to state 96


State 82

   57 printf: QUOTE COMMA . $@18 vars_print

    $default  reduce using rule 56 ($@18)

    $@18  go to state 97


State 83

   54 statement: PRINTF $@17 ROPAR printf RCPAR . SEMICOLON

    SEMICOLON  shift, and go to state 98


State 84

   81 comparison: ID RELOP . INT
   82           | ID RELOP . ID
   83           | ID RELOP . FUNC

    INT   shift, and go to state 99
    ID    shift, and go to state 100
    FUNC  shift, and go to state 101


State 85

   52 statement: IF ROPAR $@15 comparison_list RCPAR . ROBRK $@16 optional_statements RCBRK

    ROBRK  shift, and go to state 102


State 86

   78 comparison_list: comparison_list AND . $@24 comparison

    $default  reduce using rule 77 ($@24)

    $@24  go to state 103


State 87

   80 comparison_list: comparison_list OR . $@25 comparison

    $default  reduce using rule 79 ($@25)

    $@25  go to state 104


State 88

   49 statement: FOR ROPAR ID ASSIGNOP $@12 . item SEMICOLON ID RELOP $@13 item SEMICOLON ID PPMM $@14 RCPAR ROBRK optional_statements RCBRK

    INT     shift, and go to state 64
    REALNO  shift, and go to state 65
    ID      shift, and go to state 66
    FUNC    shift, and go to state 67

    item  go to state 105


State 89

   38 state: STATE_DEC ID $@10 ROBRK declarations $@11 optional_statements TRANSITION trans_state SEMICOLON RCBRK .

    $default  reduce using rule 38 (state)


State 90

   18 item_var: INT .

    $default  reduce using rule 18 (item_var)


State 91

   17 item_var: REALNO .

    $default  reduce using rule 17 (item_var)


State 92

   16 item_var: ID .

    $default  reduce using rule 16 (item_var)


State 93

   19 item_var: FUNC .

    $default  reduce using rule 19 (item_var)


State 94

   11 assign_var: ASSIGNOP $@4 math_var .
   15 math_var: math_var . ADDOP $@5 item_var

    ADDOP  shift, and go to state 106

    $default  reduce using rule 11 (assign_var)


State 95

   13 math_var: item_var .

    $default  reduce using rule 13 (math_var)


State 96

   71 math: math ADDOP $@23 . item

    INT     shift, and go to state 64
    REALNO  shift, and go to state 65
    ID      shift, and go to state 66
    FUNC    shift, and go to state 67

    item  go to state 107


State 97

   57 printf: QUOTE COMMA $@18 . vars_print

    ID  shift, and go to state 108

    vars_print  go to state 109
    var_print   go to state 110


State 98

   54 statement: PRINTF $@17 ROPAR printf RCPAR SEMICOLON .

    $default  reduce using rule 54 (statement)


State 99

   81 comparison: ID RELOP INT .

    $default  reduce using rule 81 (comparison)


State 100

   82 comparison: ID RELOP ID .

    $default  reduce using rule 82 (comparison)


State 101

   83 comparison: ID RELOP FUNC .

    $default  reduce using rule 83 (comparison)


State 102

   52 statement: IF ROPAR $@15 comparison_list RCPAR ROBRK . $@16 optional_statements RCBRK

    $default  reduce using rule 51 ($@16)

    $@16  go to state 111


State 103

   78 comparison_list: comparison_list AND $@24 . comparison

    ID  shift, and go to state 72

    comparison  go to state 112


State 104

   80 comparison_list: comparison_list OR $@25 . comparison

    ID  shift, and go to state 72

    comparison  go to state 113


State 105

   49 statement: FOR ROPAR ID ASSIGNOP $@12 item . SEMICOLON ID RELOP $@13 item SEMICOLON ID PPMM $@14 RCPAR ROBRK optional_statements RCBRK

    SEMICOLON  shift, and go to state 114


State 106

   15 math_var: math_var ADDOP . $@5 item_var

    $default  reduce using rule 14 ($@5)

    $@5  go to state 115


State 107

   71 math: math ADDOP $@23 item .

    $default  reduce using rule 71 (math)


State 108

   63 var_print: ID . $@20 assign

    $default  reduce using rule 62 ($@20)

    $@20  go to state 116


State 109

   57 printf: QUOTE COMMA $@18 vars_print .
   61 vars_print: vars_print . COMMA $@19 var_print

    COMMA  shift, and go to state 117

    $default  reduce using rule 57 (printf)


State 110

   59 vars_print: var_print .

    $default  reduce using rule 59 (vars_print)


State 111

   52 statement: IF ROPAR $@15 comparison_list RCPAR ROBRK $@16 . optional_statements RCBRK

    ID        shift, and go to state 27
    INSERT_C  shift, and go to state 28
    PRINTF    shift, and go to state 29
    IF        shift, and go to state 30
    FOR       shift, and go to state 31

    ID        [reduce using rule 42 (optional_statements)]
    INSERT_C  [reduce using rule 42 (optional_statements)]
    PRINTF    [reduce using rule 42 (optional_statements)]
    IF        [reduce using rule 42 (optional_statements)]
    FOR       [reduce using rule 42 (optional_statements)]
    $default  reduce using rule 42 (optional_statements)

    optional_statements  go to state 118
    statement_list       go to state 33
    statement            go to state 34
    operations           go to state 35


State 112

   78 comparison_list: comparison_list AND $@24 comparison .

    $default  reduce using rule 78 (comparison_list)


State 113

   80 comparison_list: comparison_list OR $@25 comparison .

    $default  reduce using rule 80 (comparison_list)


State 114

   49 statement: FOR ROPAR ID ASSIGNOP $@12 item SEMICOLON . ID RELOP $@13 item SEMICOLON ID PPMM $@14 RCPAR ROBRK optional_statements RCBRK

    ID  shift, and go to state 119


State 115

   15 math_var: math_var ADDOP $@5 . item_var

    INT     shift, and go to state 90
    REALNO  shift, and go to state 91
    ID      shift, and go to state 92
    FUNC    shift, and go to state 93

    item_var  go to state 120


State 116

   63 var_print: ID $@20 . assign

    ASSIGNOP  shift, and go to state 121

    $default  reduce using rule 66 (assign)

    assign  go to state 122


State 117

   61 vars_print: vars_print COMMA . $@19 var_print

    $default  reduce using rule 60 ($@19)

    $@19  go to state 123


State 118

   40 optional_statements: optional_statements . statement_list
   52 statement: IF ROPAR $@15 comparison_list RCPAR ROBRK $@16 optional_statements . RCBRK

    ID        shift, and go to state 27
    INSERT_C  shift, and go to state 28
    PRINTF    shift, and go to state 29
    IF        shift, and go to state 30
    FOR       shift, and go to state 31
    RCBRK     shift, and go to state 124

    statement_list  go to state 46
    statement       go to state 34
    operations      go to state 35


State 119

   49 statement: FOR ROPAR ID ASSIGNOP $@12 item SEMICOLON ID . RELOP $@13 item SEMICOLON ID PPMM $@14 RCPAR ROBRK optional_statements RCBRK

    RELOP  shift, and go to state 125


State 120

   15 math_var: math_var ADDOP $@5 item_var .

    $default  reduce using rule 15 (math_var)


State 121

   65 assign: ASSIGNOP . $@21 math

    $default  reduce using rule 64 ($@21)

    $@21  go to state 126


State 122

   63 var_print: ID $@20 assign .

    $default  reduce using rule 63 (var_print)


State 123

   61 vars_print: vars_print COMMA $@19 . var_print

    ID  shift, and go to state 108

    var_print  go to state 127


State 124

   52 statement: IF ROPAR $@15 comparison_list RCPAR ROBRK $@16 optional_statements RCBRK .

    $default  reduce using rule 52 (statement)


State 125

   49 statement: FOR ROPAR ID ASSIGNOP $@12 item SEMICOLON ID RELOP . $@13 item SEMICOLON ID PPMM $@14 RCPAR ROBRK optional_statements RCBRK

    $default  reduce using rule 47 ($@13)

    $@13  go to state 128


State 126

   65 assign: ASSIGNOP $@21 . math

    INT     shift, and go to state 64
    REALNO  shift, and go to state 65
    ID      shift, and go to state 66
    FUNC    shift, and go to state 67

    math  go to state 129
    item  go to state 69


State 127

   61 vars_print: vars_print COMMA $@19 var_print .

    $default  reduce using rule 61 (vars_print)


State 128

   49 statement: FOR ROPAR ID ASSIGNOP $@12 item SEMICOLON ID RELOP $@13 . item SEMICOLON ID PPMM $@14 RCPAR ROBRK optional_statements RCBRK

    INT     shift, and go to state 64
    REALNO  shift, and go to state 65
    ID      shift, and go to state 66
    FUNC    shift, and go to state 67

    item  go to state 130


State 129

   65 assign: ASSIGNOP $@21 math .
   71 math: math . ADDOP $@23 item

    ADDOP  shift, and go to state 81

    $default  reduce using rule 65 (assign)


State 130

   49 statement: FOR ROPAR ID ASSIGNOP $@12 item SEMICOLON ID RELOP $@13 item . SEMICOLON ID PPMM $@14 RCPAR ROBRK optional_statements RCBRK

    SEMICOLON  shift, and go to state 131


State 131

   49 statement: FOR ROPAR ID ASSIGNOP $@12 item SEMICOLON ID RELOP $@13 item SEMICOLON . ID PPMM $@14 RCPAR ROBRK optional_statements RCBRK

    ID  shift, and go to state 132


State 132

   49 statement: FOR ROPAR ID ASSIGNOP $@12 item SEMICOLON ID RELOP $@13 item SEMICOLON ID . PPMM $@14 RCPAR ROBRK optional_statements RCBRK

    PPMM  shift, and go to state 133


State 133

   49 statement: FOR ROPAR ID ASSIGNOP $@12 item SEMICOLON ID RELOP $@13 item SEMICOLON ID PPMM . $@14 RCPAR ROBRK optional_statements RCBRK

    $default  reduce using rule 48 ($@14)

    $@14  go to state 134


State 134

   49 statement: FOR ROPAR ID ASSIGNOP $@12 item SEMICOLON ID RELOP $@13 item SEMICOLON ID PPMM $@14 . RCPAR ROBRK optional_statements RCBRK

    RCPAR  shift, and go to state 135


State 135

   49 statement: FOR ROPAR ID ASSIGNOP $@12 item SEMICOLON ID RELOP $@13 item SEMICOLON ID PPMM $@14 RCPAR . ROBRK optional_statements RCBRK

    ROBRK  shift, and go to state 136


State 136

   49 statement: FOR ROPAR ID ASSIGNOP $@12 item SEMICOLON ID RELOP $@13 item SEMICOLON ID PPMM $@14 RCPAR ROBRK . optional_statements RCBRK

    ID        shift, and go to state 27
    INSERT_C  shift, and go to state 28
    PRINTF    shift, and go to state 29
    IF        shift, and go to state 30
    FOR       shift, and go to state 31

    ID        [reduce using rule 42 (optional_statements)]
    INSERT_C  [reduce using rule 42 (optional_statements)]
    PRINTF    [reduce using rule 42 (optional_statements)]
    IF        [reduce using rule 42 (optional_statements)]
    FOR       [reduce using rule 42 (optional_statements)]
    $default  reduce using rule 42 (optional_statements)

    optional_statements  go to state 137
    statement_list       go to state 33
    statement            go to state 34
    operations           go to state 35


State 137

   40 optional_statements: optional_statements . statement_list
   49 statement: FOR ROPAR ID ASSIGNOP $@12 item SEMICOLON ID RELOP $@13 item SEMICOLON ID PPMM $@14 RCPAR ROBRK optional_statements . RCBRK

    ID        shift, and go to state 27
    INSERT_C  shift, and go to state 28
    PRINTF    shift, and go to state 29
    IF        shift, and go to state 30
    FOR       shift, and go to state 31
    RCBRK     shift, and go to state 138

    statement_list  go to state 46
    statement       go to state 34
    operations      go to state 35


State 138

   49 statement: FOR ROPAR ID ASSIGNOP $@12 item SEMICOLON ID RELOP $@13 item SEMICOLON ID PPMM $@14 RCPAR ROBRK optional_statements RCBRK .

    $default  reduce using rule 49 (statement)
