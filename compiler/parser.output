Nonterminals useless in grammar

   transition


Terminals unused in grammar

   FOR_EXPRESSION
   PROGRAM
   VAR
   GLOBALD
   THEN
   ELSE
   DO
   DOT
   COLON
   BANG
   IF_EXPRESSION
   MULOP


Rules useless in grammar

  103 transition: TRANSITION trans_state


State 11 conflicts: 3 shift/reduce
State 24 conflicts: 1 shift/reduce
State 44 conflicts: 1 shift/reduce
State 53 conflicts: 3 shift/reduce
State 59 conflicts: 5 shift/reduce
State 74 conflicts: 1 shift/reduce
State 112 conflicts: 1 shift/reduce
State 139 conflicts: 5 shift/reduce
State 162 conflicts: 5 shift/reduce


Grammar

    0 $accept: program $end

    1 G_identifier_list: G_vars_decl

    2 $@1: %empty

    3 G_identifier_list: G_identifier_list COMMA $@1 G_vars_decl

    4 G_vars_decl: G_var_decl

    5 $@2: %empty

    6 G_vars_decl: G_vars_decl COMMA $@2 G_var_decl

    7 $@3: %empty

    8 G_var_decl: ID $@3 assign_var
    9           | %empty

   10 identifier_list: vars_decl

   11 $@4: %empty

   12 identifier_list: identifier_list COMMA $@4 vars_decl

   13 vars_decl: var_decl

   14 $@5: %empty

   15 vars_decl: vars_decl COMMA $@5 var_decl

   16 $@6: %empty

   17 var_decl: ID $@6 assign_var
   18         | %empty

   19 $@7: %empty

   20 assign_var: ASSIGNOP $@7 math_var
   21           | %empty

   22 math_var: item_var

   23 $@8: %empty

   24 math_var: math_var ADDOP $@8 item_var

   25 item_var: ID
   26         | REALNO
   27         | INT
   28         | FUNC

   29 $@9: %empty

   30 declarations: declarations type $@9 identifier_list SEMICOLON

   31 $@10: %empty

   32 declarations: type $@10 identifier_list SEMICOLON
   33             | %empty

   34 $@11: %empty

   35 G_declarations: G_declarations type $@11 G_identifier_list SEMICOLON

   36 $@12: %empty

   37 G_declarations: type $@12 G_identifier_list SEMICOLON
   38               | %empty

   39 type: INTEGER
   40     | REAL
   41     | STRING

   42 $@13: %empty

   43 $@14: %empty

   44 $@15: %empty

   45 $@16: %empty

   46 program: $@13 includes start_state $@14 G_declarations $@15 BEGINT $@16 states END

   47 start_state: START_STATE ID
   48            | %empty

   49 includes: include
   50         | includes include

   51 include: INCLUDE

   52 states: state
   53       | states state

   54 $@17: %empty

   55 $@18: %empty

   56 $@19: %empty

   57 state: STATE_DEC ID $@17 ROBRK declarations $@18 optional_statements $@19 TRANSITION trans_state SEMICOLON RCBRK

   58 trans_state: ID

   59 optional_statements: optional_statements statement_list
   60                    | statement_list
   61                    | %empty

   62 statement_list: statement
   63               | statement_list SEMICOLON statement

   64 statement: operations

   65 $@20: %empty

   66 $@21: %empty

   67 $@22: %empty

   68 statement: FOR ROPAR ID ASSIGNOP $@20 item SEMICOLON ID RELOP $@21 item SEMICOLON ID PPMM $@22 RCPAR ROBRK optional_statements RCBRK

   69 $@23: %empty

   70 $@24: %empty

   71 statement: IF ROPAR $@23 comparison_list RCPAR ROBRK $@24 optional_statements RCBRK

   72 $@25: %empty

   73 statement: PRINTF $@25 ROPAR printf RCPAR SEMICOLON
   74          | INSERT_C

   75 $@26: %empty

   76 printf: QUOTE COMMA $@26 vars_print
   77       | QUOTE

   78 vars_print: var_print

   79 $@27: %empty

   80 vars_print: vars_print COMMA $@27 var_print

   81 $@28: %empty

   82 var_print: ID $@28 assign

   83 $@29: %empty

   84 assign: ASSIGNOP $@29 math
   85       | %empty

   86 $@30: %empty

   87 operations: ID ASSIGNOP $@30 math SEMICOLON

   88 math: item

   89 $@31: %empty

   90 math: math ADDOP $@31 item

   91 item: ID
   92     | REALNO
   93     | INT
   94     | FUNC

   95 comparison_list: comparison

   96 $@32: %empty

   97 comparison_list: comparison_list AND $@32 comparison

   98 $@33: %empty

   99 comparison_list: comparison_list OR $@33 comparison

  100 comparison: ID RELOP INT
  101           | ID RELOP ID
  102           | ID RELOP FUNC


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 27 93 100
REALNO (259) 26 92
ID (260) 8 17 25 47 57 58 68 82 87 91 100 101 102
FOR_EXPRESSION (261)
INSERT_C (262) 74
FUNC (263) 28 94 102
RELOP (264) 68 100 101 102
PRINTF (265) 73
QUOTE (266) 76 77
INCLUDE (267) 51
PPMM (268) 68
PROGRAM (269)
INTEGER (270) 39
REAL (271) 40
VAR (272)
GLOBALD (273)
START_STATE (274) 47
BEGINT (275) 46
END (276) 46
STATE_DEC (277) 57
IF (278) 71
FOR (279) 68
THEN (280)
ELSE (281)
DO (282)
ROPAR (283) 68 71 73
RCPAR (284) 68 71 73
ROBRK (285) 57 68 71
RCBRK (286) 57 68 71
DOT (287)
SEMICOLON (288) 30 32 35 37 57 63 68 73 87
COMMA (289) 3 6 12 15 76 80
COLON (290)
TRANSITION (291) 57
ASSIGNOP (292) 20 68 84 87
AND (293) 97
OR (294) 99
STRING (295) 41
BANG (296)
IF_EXPRESSION (297)
MULOP (298)
ADDOP (299) 24 90


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
G_identifier_list (46)
    on left: 1 3, on right: 3 35 37
$@1 (47)
    on left: 2, on right: 3
G_vars_decl (48)
    on left: 4 6, on right: 1 3 6
$@2 (49)
    on left: 5, on right: 6
G_var_decl (50)
    on left: 8 9, on right: 4 6
$@3 (51)
    on left: 7, on right: 8
identifier_list (52)
    on left: 10 12, on right: 12 30 32
$@4 (53)
    on left: 11, on right: 12
vars_decl (54)
    on left: 13 15, on right: 10 12 15
$@5 (55)
    on left: 14, on right: 15
var_decl (56)
    on left: 17 18, on right: 13 15
$@6 (57)
    on left: 16, on right: 17
assign_var (58)
    on left: 20 21, on right: 8 17
$@7 (59)
    on left: 19, on right: 20
math_var (60)
    on left: 22 24, on right: 20 24
$@8 (61)
    on left: 23, on right: 24
item_var (62)
    on left: 25 26 27 28, on right: 22 24
declarations (63)
    on left: 30 32 33, on right: 30 57
$@9 (64)
    on left: 29, on right: 30
$@10 (65)
    on left: 31, on right: 32
G_declarations (66)
    on left: 35 37 38, on right: 35 46
$@11 (67)
    on left: 34, on right: 35
$@12 (68)
    on left: 36, on right: 37
type (69)
    on left: 39 40 41, on right: 30 32 35 37
program (70)
    on left: 46, on right: 0
$@13 (71)
    on left: 42, on right: 46
$@14 (72)
    on left: 43, on right: 46
$@15 (73)
    on left: 44, on right: 46
$@16 (74)
    on left: 45, on right: 46
start_state (75)
    on left: 47 48, on right: 46
includes (76)
    on left: 49 50, on right: 46 50
include (77)
    on left: 51, on right: 49 50
states (78)
    on left: 52 53, on right: 46 53
state (79)
    on left: 57, on right: 52 53
$@17 (80)
    on left: 54, on right: 57
$@18 (81)
    on left: 55, on right: 57
$@19 (82)
    on left: 56, on right: 57
trans_state (83)
    on left: 58, on right: 57
optional_statements (84)
    on left: 59 60 61, on right: 57 59 68 71
statement_list (85)
    on left: 62 63, on right: 59 60 63
statement (86)
    on left: 64 68 71 73 74, on right: 62 63
$@20 (87)
    on left: 65, on right: 68
$@21 (88)
    on left: 66, on right: 68
$@22 (89)
    on left: 67, on right: 68
$@23 (90)
    on left: 69, on right: 71
$@24 (91)
    on left: 70, on right: 71
$@25 (92)
    on left: 72, on right: 73
printf (93)
    on left: 76 77, on right: 73
$@26 (94)
    on left: 75, on right: 76
vars_print (95)
    on left: 78 80, on right: 76 80
$@27 (96)
    on left: 79, on right: 80
var_print (97)
    on left: 82, on right: 78 80
$@28 (98)
    on left: 81, on right: 82
assign (99)
    on left: 84 85, on right: 82
$@29 (100)
    on left: 83, on right: 84
operations (101)
    on left: 87, on right: 64
$@30 (102)
    on left: 86, on right: 87
math (103)
    on left: 88 90, on right: 84 87 90
$@31 (104)
    on left: 89, on right: 90
item (105)
    on left: 91 92 93 94, on right: 68 88 90
comparison_list (106)
    on left: 95 97 99, on right: 71 97 99
$@32 (107)
    on left: 96, on right: 97
$@33 (108)
    on left: 98, on right: 99
comparison (109)
    on left: 100 101 102, on right: 95 97 99


State 0

    0 $accept: . program $end

    $default  reduce using rule 42 ($@13)

    program  go to state 1
    $@13     go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

   46 program: $@13 . includes start_state $@14 G_declarations $@15 BEGINT $@16 states END

    INCLUDE  shift, and go to state 4

    includes  go to state 5
    include   go to state 6


State 3

    0 $accept: program $end .

    $default  accept


State 4

   51 include: INCLUDE .

    $default  reduce using rule 51 (include)


State 5

   46 program: $@13 includes . start_state $@14 G_declarations $@15 BEGINT $@16 states END
   50 includes: includes . include

    INCLUDE      shift, and go to state 4
    START_STATE  shift, and go to state 7

    $default  reduce using rule 48 (start_state)

    start_state  go to state 8
    include      go to state 9


State 6

   49 includes: include .

    $default  reduce using rule 49 (includes)


State 7

   47 start_state: START_STATE . ID

    ID  shift, and go to state 10


State 8

   46 program: $@13 includes start_state . $@14 G_declarations $@15 BEGINT $@16 states END

    $default  reduce using rule 43 ($@14)

    $@14  go to state 11


State 9

   50 includes: includes include .

    $default  reduce using rule 50 (includes)


State 10

   47 start_state: START_STATE ID .

    $default  reduce using rule 47 (start_state)


State 11

   46 program: $@13 includes start_state $@14 . G_declarations $@15 BEGINT $@16 states END

    INTEGER  shift, and go to state 12
    REAL     shift, and go to state 13
    STRING   shift, and go to state 14

    INTEGER   [reduce using rule 38 (G_declarations)]
    REAL      [reduce using rule 38 (G_declarations)]
    STRING    [reduce using rule 38 (G_declarations)]
    $default  reduce using rule 38 (G_declarations)

    G_declarations  go to state 15
    type            go to state 16


State 12

   39 type: INTEGER .

    $default  reduce using rule 39 (type)


State 13

   40 type: REAL .

    $default  reduce using rule 40 (type)


State 14

   41 type: STRING .

    $default  reduce using rule 41 (type)


State 15

   35 G_declarations: G_declarations . type $@11 G_identifier_list SEMICOLON
   46 program: $@13 includes start_state $@14 G_declarations . $@15 BEGINT $@16 states END

    INTEGER  shift, and go to state 12
    REAL     shift, and go to state 13
    STRING   shift, and go to state 14

    $default  reduce using rule 44 ($@15)

    type  go to state 17
    $@15  go to state 18


State 16

   37 G_declarations: type . $@12 G_identifier_list SEMICOLON

    $default  reduce using rule 36 ($@12)

    $@12  go to state 19


State 17

   35 G_declarations: G_declarations type . $@11 G_identifier_list SEMICOLON

    $default  reduce using rule 34 ($@11)

    $@11  go to state 20


State 18

   46 program: $@13 includes start_state $@14 G_declarations $@15 . BEGINT $@16 states END

    BEGINT  shift, and go to state 21


State 19

   37 G_declarations: type $@12 . G_identifier_list SEMICOLON

    ID  shift, and go to state 22

    $default  reduce using rule 9 (G_var_decl)

    G_identifier_list  go to state 23
    G_vars_decl        go to state 24
    G_var_decl         go to state 25


State 20

   35 G_declarations: G_declarations type $@11 . G_identifier_list SEMICOLON

    ID  shift, and go to state 22

    $default  reduce using rule 9 (G_var_decl)

    G_identifier_list  go to state 26
    G_vars_decl        go to state 24
    G_var_decl         go to state 25


State 21

   46 program: $@13 includes start_state $@14 G_declarations $@15 BEGINT . $@16 states END

    $default  reduce using rule 45 ($@16)

    $@16  go to state 27


State 22

    8 G_var_decl: ID . $@3 assign_var

    $default  reduce using rule 7 ($@3)

    $@3  go to state 28


State 23

    3 G_identifier_list: G_identifier_list . COMMA $@1 G_vars_decl
   37 G_declarations: type $@12 G_identifier_list . SEMICOLON

    SEMICOLON  shift, and go to state 29
    COMMA      shift, and go to state 30


State 24

    1 G_identifier_list: G_vars_decl .
    6 G_vars_decl: G_vars_decl . COMMA $@2 G_var_decl

    COMMA  shift, and go to state 31

    COMMA     [reduce using rule 1 (G_identifier_list)]
    $default  reduce using rule 1 (G_identifier_list)


State 25

    4 G_vars_decl: G_var_decl .

    $default  reduce using rule 4 (G_vars_decl)


State 26

    3 G_identifier_list: G_identifier_list . COMMA $@1 G_vars_decl
   35 G_declarations: G_declarations type $@11 G_identifier_list . SEMICOLON

    SEMICOLON  shift, and go to state 32
    COMMA      shift, and go to state 30


State 27

   46 program: $@13 includes start_state $@14 G_declarations $@15 BEGINT $@16 . states END

    STATE_DEC  shift, and go to state 33

    states  go to state 34
    state   go to state 35


State 28

    8 G_var_decl: ID $@3 . assign_var

    ASSIGNOP  shift, and go to state 36

    $default  reduce using rule 21 (assign_var)

    assign_var  go to state 37


State 29

   37 G_declarations: type $@12 G_identifier_list SEMICOLON .

    $default  reduce using rule 37 (G_declarations)


State 30

    3 G_identifier_list: G_identifier_list COMMA . $@1 G_vars_decl

    $default  reduce using rule 2 ($@1)

    $@1  go to state 38


State 31

    6 G_vars_decl: G_vars_decl COMMA . $@2 G_var_decl

    $default  reduce using rule 5 ($@2)

    $@2  go to state 39


State 32

   35 G_declarations: G_declarations type $@11 G_identifier_list SEMICOLON .

    $default  reduce using rule 35 (G_declarations)


State 33

   57 state: STATE_DEC . ID $@17 ROBRK declarations $@18 optional_statements $@19 TRANSITION trans_state SEMICOLON RCBRK

    ID  shift, and go to state 40


State 34

   46 program: $@13 includes start_state $@14 G_declarations $@15 BEGINT $@16 states . END
   53 states: states . state

    END        shift, and go to state 41
    STATE_DEC  shift, and go to state 33

    state  go to state 42


State 35

   52 states: state .

    $default  reduce using rule 52 (states)


State 36

   20 assign_var: ASSIGNOP . $@7 math_var

    $default  reduce using rule 19 ($@7)

    $@7  go to state 43


State 37

    8 G_var_decl: ID $@3 assign_var .

    $default  reduce using rule 8 (G_var_decl)


State 38

    3 G_identifier_list: G_identifier_list COMMA $@1 . G_vars_decl

    ID  shift, and go to state 22

    $default  reduce using rule 9 (G_var_decl)

    G_vars_decl  go to state 44
    G_var_decl   go to state 25


State 39

    6 G_vars_decl: G_vars_decl COMMA $@2 . G_var_decl

    ID  shift, and go to state 22

    $default  reduce using rule 9 (G_var_decl)

    G_var_decl  go to state 45


State 40

   57 state: STATE_DEC ID . $@17 ROBRK declarations $@18 optional_statements $@19 TRANSITION trans_state SEMICOLON RCBRK

    $default  reduce using rule 54 ($@17)

    $@17  go to state 46


State 41

   46 program: $@13 includes start_state $@14 G_declarations $@15 BEGINT $@16 states END .

    $default  reduce using rule 46 (program)


State 42

   53 states: states state .

    $default  reduce using rule 53 (states)


State 43

   20 assign_var: ASSIGNOP $@7 . math_var

    INT     shift, and go to state 47
    REALNO  shift, and go to state 48
    ID      shift, and go to state 49
    FUNC    shift, and go to state 50

    math_var  go to state 51
    item_var  go to state 52


State 44

    3 G_identifier_list: G_identifier_list COMMA $@1 G_vars_decl .
    6 G_vars_decl: G_vars_decl . COMMA $@2 G_var_decl

    COMMA  shift, and go to state 31

    COMMA     [reduce using rule 3 (G_identifier_list)]
    $default  reduce using rule 3 (G_identifier_list)


State 45

    6 G_vars_decl: G_vars_decl COMMA $@2 G_var_decl .

    $default  reduce using rule 6 (G_vars_decl)


State 46

   57 state: STATE_DEC ID $@17 . ROBRK declarations $@18 optional_statements $@19 TRANSITION trans_state SEMICOLON RCBRK

    ROBRK  shift, and go to state 53


State 47

   27 item_var: INT .

    $default  reduce using rule 27 (item_var)


State 48

   26 item_var: REALNO .

    $default  reduce using rule 26 (item_var)


State 49

   25 item_var: ID .

    $default  reduce using rule 25 (item_var)


State 50

   28 item_var: FUNC .

    $default  reduce using rule 28 (item_var)


State 51

   20 assign_var: ASSIGNOP $@7 math_var .
   24 math_var: math_var . ADDOP $@8 item_var

    ADDOP  shift, and go to state 54

    $default  reduce using rule 20 (assign_var)


State 52

   22 math_var: item_var .

    $default  reduce using rule 22 (math_var)


State 53

   57 state: STATE_DEC ID $@17 ROBRK . declarations $@18 optional_statements $@19 TRANSITION trans_state SEMICOLON RCBRK

    INTEGER  shift, and go to state 12
    REAL     shift, and go to state 13
    STRING   shift, and go to state 14

    INTEGER   [reduce using rule 33 (declarations)]
    REAL      [reduce using rule 33 (declarations)]
    STRING    [reduce using rule 33 (declarations)]
    $default  reduce using rule 33 (declarations)

    declarations  go to state 55
    type          go to state 56


State 54

   24 math_var: math_var ADDOP . $@8 item_var

    $default  reduce using rule 23 ($@8)

    $@8  go to state 57


State 55

   30 declarations: declarations . type $@9 identifier_list SEMICOLON
   57 state: STATE_DEC ID $@17 ROBRK declarations . $@18 optional_statements $@19 TRANSITION trans_state SEMICOLON RCBRK

    INTEGER  shift, and go to state 12
    REAL     shift, and go to state 13
    STRING   shift, and go to state 14

    $default  reduce using rule 55 ($@18)

    type  go to state 58
    $@18  go to state 59


State 56

   32 declarations: type . $@10 identifier_list SEMICOLON

    $default  reduce using rule 31 ($@10)

    $@10  go to state 60


State 57

   24 math_var: math_var ADDOP $@8 . item_var

    INT     shift, and go to state 47
    REALNO  shift, and go to state 48
    ID      shift, and go to state 49
    FUNC    shift, and go to state 50

    item_var  go to state 61


State 58

   30 declarations: declarations type . $@9 identifier_list SEMICOLON

    $default  reduce using rule 29 ($@9)

    $@9  go to state 62


State 59

   57 state: STATE_DEC ID $@17 ROBRK declarations $@18 . optional_statements $@19 TRANSITION trans_state SEMICOLON RCBRK

    ID        shift, and go to state 63
    INSERT_C  shift, and go to state 64
    PRINTF    shift, and go to state 65
    IF        shift, and go to state 66
    FOR       shift, and go to state 67

    ID        [reduce using rule 61 (optional_statements)]
    INSERT_C  [reduce using rule 61 (optional_statements)]
    PRINTF    [reduce using rule 61 (optional_statements)]
    IF        [reduce using rule 61 (optional_statements)]
    FOR       [reduce using rule 61 (optional_statements)]
    $default  reduce using rule 61 (optional_statements)

    optional_statements  go to state 68
    statement_list       go to state 69
    statement            go to state 70
    operations           go to state 71


State 60

   32 declarations: type $@10 . identifier_list SEMICOLON

    ID  shift, and go to state 72

    $default  reduce using rule 18 (var_decl)

    identifier_list  go to state 73
    vars_decl        go to state 74
    var_decl         go to state 75


State 61

   24 math_var: math_var ADDOP $@8 item_var .

    $default  reduce using rule 24 (math_var)


State 62

   30 declarations: declarations type $@9 . identifier_list SEMICOLON

    ID  shift, and go to state 72

    $default  reduce using rule 18 (var_decl)

    identifier_list  go to state 76
    vars_decl        go to state 74
    var_decl         go to state 75


State 63

   87 operations: ID . ASSIGNOP $@30 math SEMICOLON

    ASSIGNOP  shift, and go to state 77


State 64

   74 statement: INSERT_C .

    $default  reduce using rule 74 (statement)


State 65

   73 statement: PRINTF . $@25 ROPAR printf RCPAR SEMICOLON

    $default  reduce using rule 72 ($@25)

    $@25  go to state 78


State 66

   71 statement: IF . ROPAR $@23 comparison_list RCPAR ROBRK $@24 optional_statements RCBRK

    ROPAR  shift, and go to state 79


State 67

   68 statement: FOR . ROPAR ID ASSIGNOP $@20 item SEMICOLON ID RELOP $@21 item SEMICOLON ID PPMM $@22 RCPAR ROBRK optional_statements RCBRK

    ROPAR  shift, and go to state 80


State 68

   57 state: STATE_DEC ID $@17 ROBRK declarations $@18 optional_statements . $@19 TRANSITION trans_state SEMICOLON RCBRK
   59 optional_statements: optional_statements . statement_list

    ID        shift, and go to state 63
    INSERT_C  shift, and go to state 64
    PRINTF    shift, and go to state 65
    IF        shift, and go to state 66
    FOR       shift, and go to state 67

    $default  reduce using rule 56 ($@19)

    $@19            go to state 81
    statement_list  go to state 82
    statement       go to state 70
    operations      go to state 71


State 69

   60 optional_statements: statement_list .
   63 statement_list: statement_list . SEMICOLON statement

    SEMICOLON  shift, and go to state 83

    $default  reduce using rule 60 (optional_statements)


State 70

   62 statement_list: statement .

    $default  reduce using rule 62 (statement_list)


State 71

   64 statement: operations .

    $default  reduce using rule 64 (statement)


State 72

   17 var_decl: ID . $@6 assign_var

    $default  reduce using rule 16 ($@6)

    $@6  go to state 84


State 73

   12 identifier_list: identifier_list . COMMA $@4 vars_decl
   32 declarations: type $@10 identifier_list . SEMICOLON

    SEMICOLON  shift, and go to state 85
    COMMA      shift, and go to state 86


State 74

   10 identifier_list: vars_decl .
   15 vars_decl: vars_decl . COMMA $@5 var_decl

    COMMA  shift, and go to state 87

    COMMA     [reduce using rule 10 (identifier_list)]
    $default  reduce using rule 10 (identifier_list)


State 75

   13 vars_decl: var_decl .

    $default  reduce using rule 13 (vars_decl)


State 76

   12 identifier_list: identifier_list . COMMA $@4 vars_decl
   30 declarations: declarations type $@9 identifier_list . SEMICOLON

    SEMICOLON  shift, and go to state 88
    COMMA      shift, and go to state 86


State 77

   87 operations: ID ASSIGNOP . $@30 math SEMICOLON

    $default  reduce using rule 86 ($@30)

    $@30  go to state 89


State 78

   73 statement: PRINTF $@25 . ROPAR printf RCPAR SEMICOLON

    ROPAR  shift, and go to state 90


State 79

   71 statement: IF ROPAR . $@23 comparison_list RCPAR ROBRK $@24 optional_statements RCBRK

    $default  reduce using rule 69 ($@23)

    $@23  go to state 91


State 80

   68 statement: FOR ROPAR . ID ASSIGNOP $@20 item SEMICOLON ID RELOP $@21 item SEMICOLON ID PPMM $@22 RCPAR ROBRK optional_statements RCBRK

    ID  shift, and go to state 92


State 81

   57 state: STATE_DEC ID $@17 ROBRK declarations $@18 optional_statements $@19 . TRANSITION trans_state SEMICOLON RCBRK

    TRANSITION  shift, and go to state 93


State 82

   59 optional_statements: optional_statements statement_list .
   63 statement_list: statement_list . SEMICOLON statement

    SEMICOLON  shift, and go to state 83

    $default  reduce using rule 59 (optional_statements)


State 83

   63 statement_list: statement_list SEMICOLON . statement

    ID        shift, and go to state 63
    INSERT_C  shift, and go to state 64
    PRINTF    shift, and go to state 65
    IF        shift, and go to state 66
    FOR       shift, and go to state 67

    statement   go to state 94
    operations  go to state 71


State 84

   17 var_decl: ID $@6 . assign_var

    ASSIGNOP  shift, and go to state 36

    $default  reduce using rule 21 (assign_var)

    assign_var  go to state 95


State 85

   32 declarations: type $@10 identifier_list SEMICOLON .

    $default  reduce using rule 32 (declarations)


State 86

   12 identifier_list: identifier_list COMMA . $@4 vars_decl

    $default  reduce using rule 11 ($@4)

    $@4  go to state 96


State 87

   15 vars_decl: vars_decl COMMA . $@5 var_decl

    $default  reduce using rule 14 ($@5)

    $@5  go to state 97


State 88

   30 declarations: declarations type $@9 identifier_list SEMICOLON .

    $default  reduce using rule 30 (declarations)


State 89

   87 operations: ID ASSIGNOP $@30 . math SEMICOLON

    INT     shift, and go to state 98
    REALNO  shift, and go to state 99
    ID      shift, and go to state 100
    FUNC    shift, and go to state 101

    math  go to state 102
    item  go to state 103


State 90

   73 statement: PRINTF $@25 ROPAR . printf RCPAR SEMICOLON

    QUOTE  shift, and go to state 104

    printf  go to state 105


State 91

   71 statement: IF ROPAR $@23 . comparison_list RCPAR ROBRK $@24 optional_statements RCBRK

    ID  shift, and go to state 106

    comparison_list  go to state 107
    comparison       go to state 108


State 92

   68 statement: FOR ROPAR ID . ASSIGNOP $@20 item SEMICOLON ID RELOP $@21 item SEMICOLON ID PPMM $@22 RCPAR ROBRK optional_statements RCBRK

    ASSIGNOP  shift, and go to state 109


State 93

   57 state: STATE_DEC ID $@17 ROBRK declarations $@18 optional_statements $@19 TRANSITION . trans_state SEMICOLON RCBRK

    ID  shift, and go to state 110

    trans_state  go to state 111


State 94

   63 statement_list: statement_list SEMICOLON statement .

    $default  reduce using rule 63 (statement_list)


State 95

   17 var_decl: ID $@6 assign_var .

    $default  reduce using rule 17 (var_decl)


State 96

   12 identifier_list: identifier_list COMMA $@4 . vars_decl

    ID  shift, and go to state 72

    $default  reduce using rule 18 (var_decl)

    vars_decl  go to state 112
    var_decl   go to state 75


State 97

   15 vars_decl: vars_decl COMMA $@5 . var_decl

    ID  shift, and go to state 72

    $default  reduce using rule 18 (var_decl)

    var_decl  go to state 113


State 98

   93 item: INT .

    $default  reduce using rule 93 (item)


State 99

   92 item: REALNO .

    $default  reduce using rule 92 (item)


State 100

   91 item: ID .

    $default  reduce using rule 91 (item)


State 101

   94 item: FUNC .

    $default  reduce using rule 94 (item)


State 102

   87 operations: ID ASSIGNOP $@30 math . SEMICOLON
   90 math: math . ADDOP $@31 item

    SEMICOLON  shift, and go to state 114
    ADDOP      shift, and go to state 115


State 103

   88 math: item .

    $default  reduce using rule 88 (math)


State 104

   76 printf: QUOTE . COMMA $@26 vars_print
   77       | QUOTE .

    COMMA  shift, and go to state 116

    $default  reduce using rule 77 (printf)


State 105

   73 statement: PRINTF $@25 ROPAR printf . RCPAR SEMICOLON

    RCPAR  shift, and go to state 117


State 106

  100 comparison: ID . RELOP INT
  101           | ID . RELOP ID
  102           | ID . RELOP FUNC

    RELOP  shift, and go to state 118


State 107

   71 statement: IF ROPAR $@23 comparison_list . RCPAR ROBRK $@24 optional_statements RCBRK
   97 comparison_list: comparison_list . AND $@32 comparison
   99                | comparison_list . OR $@33 comparison

    RCPAR  shift, and go to state 119
    AND    shift, and go to state 120
    OR     shift, and go to state 121


State 108

   95 comparison_list: comparison .

    $default  reduce using rule 95 (comparison_list)


State 109

   68 statement: FOR ROPAR ID ASSIGNOP . $@20 item SEMICOLON ID RELOP $@21 item SEMICOLON ID PPMM $@22 RCPAR ROBRK optional_statements RCBRK

    $default  reduce using rule 65 ($@20)

    $@20  go to state 122


State 110

   58 trans_state: ID .

    $default  reduce using rule 58 (trans_state)


State 111

   57 state: STATE_DEC ID $@17 ROBRK declarations $@18 optional_statements $@19 TRANSITION trans_state . SEMICOLON RCBRK

    SEMICOLON  shift, and go to state 123


State 112

   12 identifier_list: identifier_list COMMA $@4 vars_decl .
   15 vars_decl: vars_decl . COMMA $@5 var_decl

    COMMA  shift, and go to state 87

    COMMA     [reduce using rule 12 (identifier_list)]
    $default  reduce using rule 12 (identifier_list)


State 113

   15 vars_decl: vars_decl COMMA $@5 var_decl .

    $default  reduce using rule 15 (vars_decl)


State 114

   87 operations: ID ASSIGNOP $@30 math SEMICOLON .

    $default  reduce using rule 87 (operations)


State 115

   90 math: math ADDOP . $@31 item

    $default  reduce using rule 89 ($@31)

    $@31  go to state 124


State 116

   76 printf: QUOTE COMMA . $@26 vars_print

    $default  reduce using rule 75 ($@26)

    $@26  go to state 125


State 117

   73 statement: PRINTF $@25 ROPAR printf RCPAR . SEMICOLON

    SEMICOLON  shift, and go to state 126


State 118

  100 comparison: ID RELOP . INT
  101           | ID RELOP . ID
  102           | ID RELOP . FUNC

    INT   shift, and go to state 127
    ID    shift, and go to state 128
    FUNC  shift, and go to state 129


State 119

   71 statement: IF ROPAR $@23 comparison_list RCPAR . ROBRK $@24 optional_statements RCBRK

    ROBRK  shift, and go to state 130


State 120

   97 comparison_list: comparison_list AND . $@32 comparison

    $default  reduce using rule 96 ($@32)

    $@32  go to state 131


State 121

   99 comparison_list: comparison_list OR . $@33 comparison

    $default  reduce using rule 98 ($@33)

    $@33  go to state 132


State 122

   68 statement: FOR ROPAR ID ASSIGNOP $@20 . item SEMICOLON ID RELOP $@21 item SEMICOLON ID PPMM $@22 RCPAR ROBRK optional_statements RCBRK

    INT     shift, and go to state 98
    REALNO  shift, and go to state 99
    ID      shift, and go to state 100
    FUNC    shift, and go to state 101

    item  go to state 133


State 123

   57 state: STATE_DEC ID $@17 ROBRK declarations $@18 optional_statements $@19 TRANSITION trans_state SEMICOLON . RCBRK

    RCBRK  shift, and go to state 134


State 124

   90 math: math ADDOP $@31 . item

    INT     shift, and go to state 98
    REALNO  shift, and go to state 99
    ID      shift, and go to state 100
    FUNC    shift, and go to state 101

    item  go to state 135


State 125

   76 printf: QUOTE COMMA $@26 . vars_print

    ID  shift, and go to state 136

    vars_print  go to state 137
    var_print   go to state 138


State 126

   73 statement: PRINTF $@25 ROPAR printf RCPAR SEMICOLON .

    $default  reduce using rule 73 (statement)


State 127

  100 comparison: ID RELOP INT .

    $default  reduce using rule 100 (comparison)


State 128

  101 comparison: ID RELOP ID .

    $default  reduce using rule 101 (comparison)


State 129

  102 comparison: ID RELOP FUNC .

    $default  reduce using rule 102 (comparison)


State 130

   71 statement: IF ROPAR $@23 comparison_list RCPAR ROBRK . $@24 optional_statements RCBRK

    $default  reduce using rule 70 ($@24)

    $@24  go to state 139


State 131

   97 comparison_list: comparison_list AND $@32 . comparison

    ID  shift, and go to state 106

    comparison  go to state 140


State 132

   99 comparison_list: comparison_list OR $@33 . comparison

    ID  shift, and go to state 106

    comparison  go to state 141


State 133

   68 statement: FOR ROPAR ID ASSIGNOP $@20 item . SEMICOLON ID RELOP $@21 item SEMICOLON ID PPMM $@22 RCPAR ROBRK optional_statements RCBRK

    SEMICOLON  shift, and go to state 142


State 134

   57 state: STATE_DEC ID $@17 ROBRK declarations $@18 optional_statements $@19 TRANSITION trans_state SEMICOLON RCBRK .

    $default  reduce using rule 57 (state)


State 135

   90 math: math ADDOP $@31 item .

    $default  reduce using rule 90 (math)


State 136

   82 var_print: ID . $@28 assign

    $default  reduce using rule 81 ($@28)

    $@28  go to state 143


State 137

   76 printf: QUOTE COMMA $@26 vars_print .
   80 vars_print: vars_print . COMMA $@27 var_print

    COMMA  shift, and go to state 144

    $default  reduce using rule 76 (printf)


State 138

   78 vars_print: var_print .

    $default  reduce using rule 78 (vars_print)


State 139

   71 statement: IF ROPAR $@23 comparison_list RCPAR ROBRK $@24 . optional_statements RCBRK

    ID        shift, and go to state 63
    INSERT_C  shift, and go to state 64
    PRINTF    shift, and go to state 65
    IF        shift, and go to state 66
    FOR       shift, and go to state 67

    ID        [reduce using rule 61 (optional_statements)]
    INSERT_C  [reduce using rule 61 (optional_statements)]
    PRINTF    [reduce using rule 61 (optional_statements)]
    IF        [reduce using rule 61 (optional_statements)]
    FOR       [reduce using rule 61 (optional_statements)]
    $default  reduce using rule 61 (optional_statements)

    optional_statements  go to state 145
    statement_list       go to state 69
    statement            go to state 70
    operations           go to state 71


State 140

   97 comparison_list: comparison_list AND $@32 comparison .

    $default  reduce using rule 97 (comparison_list)


State 141

   99 comparison_list: comparison_list OR $@33 comparison .

    $default  reduce using rule 99 (comparison_list)


State 142

   68 statement: FOR ROPAR ID ASSIGNOP $@20 item SEMICOLON . ID RELOP $@21 item SEMICOLON ID PPMM $@22 RCPAR ROBRK optional_statements RCBRK

    ID  shift, and go to state 146


State 143

   82 var_print: ID $@28 . assign

    ASSIGNOP  shift, and go to state 147

    $default  reduce using rule 85 (assign)

    assign  go to state 148


State 144

   80 vars_print: vars_print COMMA . $@27 var_print

    $default  reduce using rule 79 ($@27)

    $@27  go to state 149


State 145

   59 optional_statements: optional_statements . statement_list
   71 statement: IF ROPAR $@23 comparison_list RCPAR ROBRK $@24 optional_statements . RCBRK

    ID        shift, and go to state 63
    INSERT_C  shift, and go to state 64
    PRINTF    shift, and go to state 65
    IF        shift, and go to state 66
    FOR       shift, and go to state 67
    RCBRK     shift, and go to state 150

    statement_list  go to state 82
    statement       go to state 70
    operations      go to state 71


State 146

   68 statement: FOR ROPAR ID ASSIGNOP $@20 item SEMICOLON ID . RELOP $@21 item SEMICOLON ID PPMM $@22 RCPAR ROBRK optional_statements RCBRK

    RELOP  shift, and go to state 151


State 147

   84 assign: ASSIGNOP . $@29 math

    $default  reduce using rule 83 ($@29)

    $@29  go to state 152


State 148

   82 var_print: ID $@28 assign .

    $default  reduce using rule 82 (var_print)


State 149

   80 vars_print: vars_print COMMA $@27 . var_print

    ID  shift, and go to state 136

    var_print  go to state 153


State 150

   71 statement: IF ROPAR $@23 comparison_list RCPAR ROBRK $@24 optional_statements RCBRK .

    $default  reduce using rule 71 (statement)


State 151

   68 statement: FOR ROPAR ID ASSIGNOP $@20 item SEMICOLON ID RELOP . $@21 item SEMICOLON ID PPMM $@22 RCPAR ROBRK optional_statements RCBRK

    $default  reduce using rule 66 ($@21)

    $@21  go to state 154


State 152

   84 assign: ASSIGNOP $@29 . math

    INT     shift, and go to state 98
    REALNO  shift, and go to state 99
    ID      shift, and go to state 100
    FUNC    shift, and go to state 101

    math  go to state 155
    item  go to state 103


State 153

   80 vars_print: vars_print COMMA $@27 var_print .

    $default  reduce using rule 80 (vars_print)


State 154

   68 statement: FOR ROPAR ID ASSIGNOP $@20 item SEMICOLON ID RELOP $@21 . item SEMICOLON ID PPMM $@22 RCPAR ROBRK optional_statements RCBRK

    INT     shift, and go to state 98
    REALNO  shift, and go to state 99
    ID      shift, and go to state 100
    FUNC    shift, and go to state 101

    item  go to state 156


State 155

   84 assign: ASSIGNOP $@29 math .
   90 math: math . ADDOP $@31 item

    ADDOP  shift, and go to state 115

    $default  reduce using rule 84 (assign)


State 156

   68 statement: FOR ROPAR ID ASSIGNOP $@20 item SEMICOLON ID RELOP $@21 item . SEMICOLON ID PPMM $@22 RCPAR ROBRK optional_statements RCBRK

    SEMICOLON  shift, and go to state 157


State 157

   68 statement: FOR ROPAR ID ASSIGNOP $@20 item SEMICOLON ID RELOP $@21 item SEMICOLON . ID PPMM $@22 RCPAR ROBRK optional_statements RCBRK

    ID  shift, and go to state 158


State 158

   68 statement: FOR ROPAR ID ASSIGNOP $@20 item SEMICOLON ID RELOP $@21 item SEMICOLON ID . PPMM $@22 RCPAR ROBRK optional_statements RCBRK

    PPMM  shift, and go to state 159


State 159

   68 statement: FOR ROPAR ID ASSIGNOP $@20 item SEMICOLON ID RELOP $@21 item SEMICOLON ID PPMM . $@22 RCPAR ROBRK optional_statements RCBRK

    $default  reduce using rule 67 ($@22)

    $@22  go to state 160


State 160

   68 statement: FOR ROPAR ID ASSIGNOP $@20 item SEMICOLON ID RELOP $@21 item SEMICOLON ID PPMM $@22 . RCPAR ROBRK optional_statements RCBRK

    RCPAR  shift, and go to state 161


State 161

   68 statement: FOR ROPAR ID ASSIGNOP $@20 item SEMICOLON ID RELOP $@21 item SEMICOLON ID PPMM $@22 RCPAR . ROBRK optional_statements RCBRK

    ROBRK  shift, and go to state 162


State 162

   68 statement: FOR ROPAR ID ASSIGNOP $@20 item SEMICOLON ID RELOP $@21 item SEMICOLON ID PPMM $@22 RCPAR ROBRK . optional_statements RCBRK

    ID        shift, and go to state 63
    INSERT_C  shift, and go to state 64
    PRINTF    shift, and go to state 65
    IF        shift, and go to state 66
    FOR       shift, and go to state 67

    ID        [reduce using rule 61 (optional_statements)]
    INSERT_C  [reduce using rule 61 (optional_statements)]
    PRINTF    [reduce using rule 61 (optional_statements)]
    IF        [reduce using rule 61 (optional_statements)]
    FOR       [reduce using rule 61 (optional_statements)]
    $default  reduce using rule 61 (optional_statements)

    optional_statements  go to state 163
    statement_list       go to state 69
    statement            go to state 70
    operations           go to state 71


State 163

   59 optional_statements: optional_statements . statement_list
   68 statement: FOR ROPAR ID ASSIGNOP $@20 item SEMICOLON ID RELOP $@21 item SEMICOLON ID PPMM $@22 RCPAR ROBRK optional_statements . RCBRK

    ID        shift, and go to state 63
    INSERT_C  shift, and go to state 64
    PRINTF    shift, and go to state 65
    IF        shift, and go to state 66
    FOR       shift, and go to state 67
    RCBRK     shift, and go to state 164

    statement_list  go to state 82
    statement       go to state 70
    operations      go to state 71


State 164

   68 statement: FOR ROPAR ID ASSIGNOP $@20 item SEMICOLON ID RELOP $@21 item SEMICOLON ID PPMM $@22 RCPAR ROBRK optional_statements RCBRK .

    $default  reduce using rule 68 (statement)
