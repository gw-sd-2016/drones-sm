Terminals unused in grammar

   FOR_EXPRESSION
   SLEEP
   PROGRAM
   VAR
   GLOBALD
   THEN
   ELSE
   DO
   DOT
   COLON
   BANG
   IF_EXPRESSION
   MULOP


State 13 conflicts: 5 shift/reduce
State 36 conflicts: 1 shift/reduce
State 66 conflicts: 1 shift/reduce
State 75 conflicts: 3 shift/reduce
State 81 conflicts: 16 shift/reduce, 1 reduce/reduce
State 105 conflicts: 1 shift/reduce
State 108 conflicts: 1 shift/reduce
State 162 conflicts: 1 shift/reduce
State 190 conflicts: 16 shift/reduce, 1 reduce/reduce
State 213 conflicts: 16 shift/reduce, 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 G_identifier_list: G_vars_decl

    2 $@1: %empty

    3 G_identifier_list: G_identifier_list COMMA $@1 G_vars_decl

    4 G_vars_decl: G_var_decl

    5 $@2: %empty

    6 G_vars_decl: G_vars_decl COMMA $@2 G_var_decl

    7 $@3: %empty

    8 G_var_decl: ID $@3 assign_var
    9           | %empty

   10 identifier_list: vars_decl

   11 $@4: %empty

   12 identifier_list: identifier_list COMMA $@4 vars_decl

   13 vars_decl: var_decl

   14 $@5: %empty

   15 vars_decl: vars_decl COMMA $@5 var_decl

   16 $@6: %empty

   17 var_decl: ID $@6 assign_var
   18         | %empty

   19 $@7: %empty

   20 assign_var: ASSIGNOP $@7 math_var
   21           | %empty

   22 math_var: item_var

   23 $@8: %empty

   24 math_var: math_var ADDOP $@8 item_var

   25 item_var: ID
   26         | REALNO
   27         | INT
   28         | FUNC

   29 $@9: %empty

   30 declarations: declarations type $@9 identifier_list SEMICOLON

   31 $@10: %empty

   32 declarations: type $@10 identifier_list SEMICOLON
   33             | %empty

   34 $@11: %empty

   35 G_declarations: G_declarations type $@11 G_identifier_list SEMICOLON

   36 $@12: %empty

   37 G_declarations: type $@12 G_identifier_list SEMICOLON

   38 $@13: %empty

   39 G_declarations: G_declarations VOLATILE type $@13 G_identifier_list SEMICOLON

   40 $@14: %empty

   41 G_declarations: VOLATILE type $@14 G_identifier_list SEMICOLON

   42 $@15: %empty

   43 G_declarations: G_declarations NOBACKUP type $@15 G_identifier_list SEMICOLON

   44 $@16: %empty

   45 G_declarations: NOBACKUP type $@16 G_identifier_list SEMICOLON
   46               | %empty

   47 type: INTEGER
   48     | REAL
   49     | STRING

   50 $@17: %empty

   51 $@18: %empty

   52 $@19: %empty

   53 $@20: %empty

   54 program: $@17 includes inc_drone start_state $@18 G_declarations $@19 BEGINT $@20 states END

   55 inc_drone: INC_DRONE
   56          | %empty

   57 start_state: START_STATE ID
   58            | %empty

   59 includes: include
   60         | includes include

   61 include: INCLUDE

   62 states: state
   63       | states state

   64 $@21: %empty

   65 $@22: %empty

   66 $@23: %empty

   67 state: STATE_DEC ID $@21 ROBRK declarations $@22 optional_statements $@23 RCBRK

   68 trans_state: ID

   69 optional_statements: optional_statements statement_list
   70                    | statement_list
   71                    | %empty

   72 statement_list: statement
   73               | statement_list SEMICOLON statement

   74 statement: operations

   75 $@24: %empty

   76 statement: $@24 transition_statement
   77          | DRONE_LEFT SEMICOLON
   78          | DRONE_RIGHT
   79          | DRONE_UP SEMICOLON
   80          | DRONE_DOWN SEMICOLON
   81          | DRONE_BACK SEMICOLON
   82          | DRONE_FORWARD SEMICOLON
   83          | DRONE_CLOCKWISE SEMICOLON
   84          | DRONE_CCLOCKWISE SEMICOLON
   85          | DRONE_FLIPLEFT SEMICOLON
   86          | DRONE_SANDL SEMICOLON
   87          | DRONE_TAKEOFF SEMICOLON

   88 $@25: %empty

   89 $@26: %empty

   90 $@27: %empty

   91 statement: FOR ROPAR ID ASSIGNOP $@25 item SEMICOLON ID RELOP $@26 item SEMICOLON ID PPMM $@27 RCPAR ROBRK optional_statements RCBRK

   92 $@28: %empty

   93 $@29: %empty

   94 statement: IF ROPAR $@28 comparison_list RCPAR ROBRK $@29 optional_statements RCBRK

   95 $@30: %empty

   96 statement: PRINTF $@30 ROPAR printf RCPAR SEMICOLON
   97          | INSERT_C

   98 $@31: %empty

   99 transition_statement: $@31 TRANSITION trans_state SEMICOLON

  100 $@32: %empty

  101 printf: QUOTE COMMA $@32 vars_print
  102       | QUOTE

  103 vars_print: var_print

  104 $@33: %empty

  105 vars_print: vars_print COMMA $@33 var_print

  106 $@34: %empty

  107 var_print: ID $@34 assign

  108 $@35: %empty

  109 assign: ASSIGNOP $@35 math
  110       | %empty

  111 $@36: %empty

  112 operations: ID ASSIGNOP $@36 math SEMICOLON

  113 $@37: %empty

  114 operations: operations ID ASSIGNOP $@37 math SEMICOLON

  115 math: item

  116 $@38: %empty

  117 math: math ADDOP $@38 item

  118 item: ID
  119     | REALNO
  120     | INT
  121     | FUNC

  122 comparison_list: comparison

  123 $@39: %empty

  124 comparison_list: comparison_list AND $@39 comparison

  125 $@40: %empty

  126 comparison_list: comparison_list OR $@40 comparison

  127 comparison: ID RELOP INT
  128           | ID RELOP ID
  129           | ID RELOP FUNC


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 27 120 127
REALNO (259) 26 119
ID (260) 8 17 25 57 67 68 91 107 112 114 118 127 128 129
FOR_EXPRESSION (261)
INSERT_C (262) 97
SLEEP (263)
FUNC (264) 28 121 129
RELOP (265) 91 127 128 129
PRINTF (266) 96
QUOTE (267) 101 102
INCLUDE (268) 61
PPMM (269) 91
PROGRAM (270)
NOBACKUP (271) 43 45
VOLATILE (272) 39 41
INTEGER (273) 47
REAL (274) 48
VAR (275)
GLOBALD (276)
START_STATE (277) 57
INC_DRONE (278) 55
BEGINT (279) 54
END (280) 54
STATE_DEC (281) 67
IF (282) 94
FOR (283) 91
THEN (284)
ELSE (285)
DO (286)
DRONE_LEFT (287) 77
DRONE_RIGHT (288) 78
DRONE_TAKEOFF (289) 87
DRONE_SANDL (290) 86
DRONE_UP (291) 79
DRONE_DOWN (292) 80
DRONE_CCLOCKWISE (293) 84
DRONE_FLIPLEFT (294) 85
DRONE_CLOCKWISE (295) 83
DRONE_BACK (296) 81
DRONE_FORWARD (297) 82
ROPAR (298) 91 94 96
RCPAR (299) 91 94 96
ROBRK (300) 67 91 94
RCBRK (301) 67 91 94
DOT (302)
SEMICOLON (303) 30 32 35 37 39 41 43 45 73 77 79 80 81 82 83 84 85
    86 87 91 96 99 112 114
COMMA (304) 3 6 12 15 101 105
COLON (305)
TRANSITION (306) 99
ASSIGNOP (307) 20 91 109 112 114
AND (308) 124
OR (309) 126
STRING (310) 49
BANG (311)
IF_EXPRESSION (312)
MULOP (313)
ADDOP (314) 24 117


Nonterminals, with rules where they appear

$accept (60)
    on left: 0
G_identifier_list (61)
    on left: 1 3, on right: 3 35 37 39 41 43 45
$@1 (62)
    on left: 2, on right: 3
G_vars_decl (63)
    on left: 4 6, on right: 1 3 6
$@2 (64)
    on left: 5, on right: 6
G_var_decl (65)
    on left: 8 9, on right: 4 6
$@3 (66)
    on left: 7, on right: 8
identifier_list (67)
    on left: 10 12, on right: 12 30 32
$@4 (68)
    on left: 11, on right: 12
vars_decl (69)
    on left: 13 15, on right: 10 12 15
$@5 (70)
    on left: 14, on right: 15
var_decl (71)
    on left: 17 18, on right: 13 15
$@6 (72)
    on left: 16, on right: 17
assign_var (73)
    on left: 20 21, on right: 8 17
$@7 (74)
    on left: 19, on right: 20
math_var (75)
    on left: 22 24, on right: 20 24
$@8 (76)
    on left: 23, on right: 24
item_var (77)
    on left: 25 26 27 28, on right: 22 24
declarations (78)
    on left: 30 32 33, on right: 30 67
$@9 (79)
    on left: 29, on right: 30
$@10 (80)
    on left: 31, on right: 32
G_declarations (81)
    on left: 35 37 39 41 43 45 46, on right: 35 39 43 54
$@11 (82)
    on left: 34, on right: 35
$@12 (83)
    on left: 36, on right: 37
$@13 (84)
    on left: 38, on right: 39
$@14 (85)
    on left: 40, on right: 41
$@15 (86)
    on left: 42, on right: 43
$@16 (87)
    on left: 44, on right: 45
type (88)
    on left: 47 48 49, on right: 30 32 35 37 39 41 43 45
program (89)
    on left: 54, on right: 0
$@17 (90)
    on left: 50, on right: 54
$@18 (91)
    on left: 51, on right: 54
$@19 (92)
    on left: 52, on right: 54
$@20 (93)
    on left: 53, on right: 54
inc_drone (94)
    on left: 55 56, on right: 54
start_state (95)
    on left: 57 58, on right: 54
includes (96)
    on left: 59 60, on right: 54 60
include (97)
    on left: 61, on right: 59 60
states (98)
    on left: 62 63, on right: 54 63
state (99)
    on left: 67, on right: 62 63
$@21 (100)
    on left: 64, on right: 67
$@22 (101)
    on left: 65, on right: 67
$@23 (102)
    on left: 66, on right: 67
trans_state (103)
    on left: 68, on right: 99
optional_statements (104)
    on left: 69 70 71, on right: 67 69 91 94
statement_list (105)
    on left: 72 73, on right: 69 70 73
statement (106)
    on left: 74 76 77 78 79 80 81 82 83 84 85 86 87 91 94 96 97, on right:
    72 73
$@24 (107)
    on left: 75, on right: 76
$@25 (108)
    on left: 88, on right: 91
$@26 (109)
    on left: 89, on right: 91
$@27 (110)
    on left: 90, on right: 91
$@28 (111)
    on left: 92, on right: 94
$@29 (112)
    on left: 93, on right: 94
$@30 (113)
    on left: 95, on right: 96
transition_statement (114)
    on left: 99, on right: 76
$@31 (115)
    on left: 98, on right: 99
printf (116)
    on left: 101 102, on right: 96
$@32 (117)
    on left: 100, on right: 101
vars_print (118)
    on left: 103 105, on right: 101 105
$@33 (119)
    on left: 104, on right: 105
var_print (120)
    on left: 107, on right: 103 105
$@34 (121)
    on left: 106, on right: 107
assign (122)
    on left: 109 110, on right: 107
$@35 (123)
    on left: 108, on right: 109
operations (124)
    on left: 112 114, on right: 74 114
$@36 (125)
    on left: 111, on right: 112
$@37 (126)
    on left: 113, on right: 114
math (127)
    on left: 115 117, on right: 109 112 114 117
$@38 (128)
    on left: 116, on right: 117
item (129)
    on left: 118 119 120 121, on right: 91 115 117
comparison_list (130)
    on left: 122 124 126, on right: 94 124 126
$@39 (131)
    on left: 123, on right: 124
$@40 (132)
    on left: 125, on right: 126
comparison (133)
    on left: 127 128 129, on right: 122 124 126


State 0

    0 $accept: . program $end

    $default  reduce using rule 50 ($@17)

    program  go to state 1
    $@17     go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

   54 program: $@17 . includes inc_drone start_state $@18 G_declarations $@19 BEGINT $@20 states END

    INCLUDE  shift, and go to state 4

    includes  go to state 5
    include   go to state 6


State 3

    0 $accept: program $end .

    $default  accept


State 4

   61 include: INCLUDE .

    $default  reduce using rule 61 (include)


State 5

   54 program: $@17 includes . inc_drone start_state $@18 G_declarations $@19 BEGINT $@20 states END
   60 includes: includes . include

    INCLUDE    shift, and go to state 4
    INC_DRONE  shift, and go to state 7

    $default  reduce using rule 56 (inc_drone)

    inc_drone  go to state 8
    include    go to state 9


State 6

   59 includes: include .

    $default  reduce using rule 59 (includes)


State 7

   55 inc_drone: INC_DRONE .

    $default  reduce using rule 55 (inc_drone)


State 8

   54 program: $@17 includes inc_drone . start_state $@18 G_declarations $@19 BEGINT $@20 states END

    START_STATE  shift, and go to state 10

    $default  reduce using rule 58 (start_state)

    start_state  go to state 11


State 9

   60 includes: includes include .

    $default  reduce using rule 60 (includes)


State 10

   57 start_state: START_STATE . ID

    ID  shift, and go to state 12


State 11

   54 program: $@17 includes inc_drone start_state . $@18 G_declarations $@19 BEGINT $@20 states END

    $default  reduce using rule 51 ($@18)

    $@18  go to state 13


State 12

   57 start_state: START_STATE ID .

    $default  reduce using rule 57 (start_state)


State 13

   54 program: $@17 includes inc_drone start_state $@18 . G_declarations $@19 BEGINT $@20 states END

    NOBACKUP  shift, and go to state 14
    VOLATILE  shift, and go to state 15
    INTEGER   shift, and go to state 16
    REAL      shift, and go to state 17
    STRING    shift, and go to state 18

    NOBACKUP  [reduce using rule 46 (G_declarations)]
    VOLATILE  [reduce using rule 46 (G_declarations)]
    INTEGER   [reduce using rule 46 (G_declarations)]
    REAL      [reduce using rule 46 (G_declarations)]
    STRING    [reduce using rule 46 (G_declarations)]
    $default  reduce using rule 46 (G_declarations)

    G_declarations  go to state 19
    type            go to state 20


State 14

   45 G_declarations: NOBACKUP . type $@16 G_identifier_list SEMICOLON

    INTEGER  shift, and go to state 16
    REAL     shift, and go to state 17
    STRING   shift, and go to state 18

    type  go to state 21


State 15

   41 G_declarations: VOLATILE . type $@14 G_identifier_list SEMICOLON

    INTEGER  shift, and go to state 16
    REAL     shift, and go to state 17
    STRING   shift, and go to state 18

    type  go to state 22


State 16

   47 type: INTEGER .

    $default  reduce using rule 47 (type)


State 17

   48 type: REAL .

    $default  reduce using rule 48 (type)


State 18

   49 type: STRING .

    $default  reduce using rule 49 (type)


State 19

   35 G_declarations: G_declarations . type $@11 G_identifier_list SEMICOLON
   39               | G_declarations . VOLATILE type $@13 G_identifier_list SEMICOLON
   43               | G_declarations . NOBACKUP type $@15 G_identifier_list SEMICOLON
   54 program: $@17 includes inc_drone start_state $@18 G_declarations . $@19 BEGINT $@20 states END

    NOBACKUP  shift, and go to state 23
    VOLATILE  shift, and go to state 24
    INTEGER   shift, and go to state 16
    REAL      shift, and go to state 17
    STRING    shift, and go to state 18

    $default  reduce using rule 52 ($@19)

    type  go to state 25
    $@19  go to state 26


State 20

   37 G_declarations: type . $@12 G_identifier_list SEMICOLON

    $default  reduce using rule 36 ($@12)

    $@12  go to state 27


State 21

   45 G_declarations: NOBACKUP type . $@16 G_identifier_list SEMICOLON

    $default  reduce using rule 44 ($@16)

    $@16  go to state 28


State 22

   41 G_declarations: VOLATILE type . $@14 G_identifier_list SEMICOLON

    $default  reduce using rule 40 ($@14)

    $@14  go to state 29


State 23

   43 G_declarations: G_declarations NOBACKUP . type $@15 G_identifier_list SEMICOLON

    INTEGER  shift, and go to state 16
    REAL     shift, and go to state 17
    STRING   shift, and go to state 18

    type  go to state 30


State 24

   39 G_declarations: G_declarations VOLATILE . type $@13 G_identifier_list SEMICOLON

    INTEGER  shift, and go to state 16
    REAL     shift, and go to state 17
    STRING   shift, and go to state 18

    type  go to state 31


State 25

   35 G_declarations: G_declarations type . $@11 G_identifier_list SEMICOLON

    $default  reduce using rule 34 ($@11)

    $@11  go to state 32


State 26

   54 program: $@17 includes inc_drone start_state $@18 G_declarations $@19 . BEGINT $@20 states END

    BEGINT  shift, and go to state 33


State 27

   37 G_declarations: type $@12 . G_identifier_list SEMICOLON

    ID  shift, and go to state 34

    $default  reduce using rule 9 (G_var_decl)

    G_identifier_list  go to state 35
    G_vars_decl        go to state 36
    G_var_decl         go to state 37


State 28

   45 G_declarations: NOBACKUP type $@16 . G_identifier_list SEMICOLON

    ID  shift, and go to state 34

    $default  reduce using rule 9 (G_var_decl)

    G_identifier_list  go to state 38
    G_vars_decl        go to state 36
    G_var_decl         go to state 37


State 29

   41 G_declarations: VOLATILE type $@14 . G_identifier_list SEMICOLON

    ID  shift, and go to state 34

    $default  reduce using rule 9 (G_var_decl)

    G_identifier_list  go to state 39
    G_vars_decl        go to state 36
    G_var_decl         go to state 37


State 30

   43 G_declarations: G_declarations NOBACKUP type . $@15 G_identifier_list SEMICOLON

    $default  reduce using rule 42 ($@15)

    $@15  go to state 40


State 31

   39 G_declarations: G_declarations VOLATILE type . $@13 G_identifier_list SEMICOLON

    $default  reduce using rule 38 ($@13)

    $@13  go to state 41


State 32

   35 G_declarations: G_declarations type $@11 . G_identifier_list SEMICOLON

    ID  shift, and go to state 34

    $default  reduce using rule 9 (G_var_decl)

    G_identifier_list  go to state 42
    G_vars_decl        go to state 36
    G_var_decl         go to state 37


State 33

   54 program: $@17 includes inc_drone start_state $@18 G_declarations $@19 BEGINT . $@20 states END

    $default  reduce using rule 53 ($@20)

    $@20  go to state 43


State 34

    8 G_var_decl: ID . $@3 assign_var

    $default  reduce using rule 7 ($@3)

    $@3  go to state 44


State 35

    3 G_identifier_list: G_identifier_list . COMMA $@1 G_vars_decl
   37 G_declarations: type $@12 G_identifier_list . SEMICOLON

    SEMICOLON  shift, and go to state 45
    COMMA      shift, and go to state 46


State 36

    1 G_identifier_list: G_vars_decl .
    6 G_vars_decl: G_vars_decl . COMMA $@2 G_var_decl

    COMMA  shift, and go to state 47

    COMMA     [reduce using rule 1 (G_identifier_list)]
    $default  reduce using rule 1 (G_identifier_list)


State 37

    4 G_vars_decl: G_var_decl .

    $default  reduce using rule 4 (G_vars_decl)


State 38

    3 G_identifier_list: G_identifier_list . COMMA $@1 G_vars_decl
   45 G_declarations: NOBACKUP type $@16 G_identifier_list . SEMICOLON

    SEMICOLON  shift, and go to state 48
    COMMA      shift, and go to state 46


State 39

    3 G_identifier_list: G_identifier_list . COMMA $@1 G_vars_decl
   41 G_declarations: VOLATILE type $@14 G_identifier_list . SEMICOLON

    SEMICOLON  shift, and go to state 49
    COMMA      shift, and go to state 46


State 40

   43 G_declarations: G_declarations NOBACKUP type $@15 . G_identifier_list SEMICOLON

    ID  shift, and go to state 34

    $default  reduce using rule 9 (G_var_decl)

    G_identifier_list  go to state 50
    G_vars_decl        go to state 36
    G_var_decl         go to state 37


State 41

   39 G_declarations: G_declarations VOLATILE type $@13 . G_identifier_list SEMICOLON

    ID  shift, and go to state 34

    $default  reduce using rule 9 (G_var_decl)

    G_identifier_list  go to state 51
    G_vars_decl        go to state 36
    G_var_decl         go to state 37


State 42

    3 G_identifier_list: G_identifier_list . COMMA $@1 G_vars_decl
   35 G_declarations: G_declarations type $@11 G_identifier_list . SEMICOLON

    SEMICOLON  shift, and go to state 52
    COMMA      shift, and go to state 46


State 43

   54 program: $@17 includes inc_drone start_state $@18 G_declarations $@19 BEGINT $@20 . states END

    STATE_DEC  shift, and go to state 53

    states  go to state 54
    state   go to state 55


State 44

    8 G_var_decl: ID $@3 . assign_var

    ASSIGNOP  shift, and go to state 56

    $default  reduce using rule 21 (assign_var)

    assign_var  go to state 57


State 45

   37 G_declarations: type $@12 G_identifier_list SEMICOLON .

    $default  reduce using rule 37 (G_declarations)


State 46

    3 G_identifier_list: G_identifier_list COMMA . $@1 G_vars_decl

    $default  reduce using rule 2 ($@1)

    $@1  go to state 58


State 47

    6 G_vars_decl: G_vars_decl COMMA . $@2 G_var_decl

    $default  reduce using rule 5 ($@2)

    $@2  go to state 59


State 48

   45 G_declarations: NOBACKUP type $@16 G_identifier_list SEMICOLON .

    $default  reduce using rule 45 (G_declarations)


State 49

   41 G_declarations: VOLATILE type $@14 G_identifier_list SEMICOLON .

    $default  reduce using rule 41 (G_declarations)


State 50

    3 G_identifier_list: G_identifier_list . COMMA $@1 G_vars_decl
   43 G_declarations: G_declarations NOBACKUP type $@15 G_identifier_list . SEMICOLON

    SEMICOLON  shift, and go to state 60
    COMMA      shift, and go to state 46


State 51

    3 G_identifier_list: G_identifier_list . COMMA $@1 G_vars_decl
   39 G_declarations: G_declarations VOLATILE type $@13 G_identifier_list . SEMICOLON

    SEMICOLON  shift, and go to state 61
    COMMA      shift, and go to state 46


State 52

   35 G_declarations: G_declarations type $@11 G_identifier_list SEMICOLON .

    $default  reduce using rule 35 (G_declarations)


State 53

   67 state: STATE_DEC . ID $@21 ROBRK declarations $@22 optional_statements $@23 RCBRK

    ID  shift, and go to state 62


State 54

   54 program: $@17 includes inc_drone start_state $@18 G_declarations $@19 BEGINT $@20 states . END
   63 states: states . state

    END        shift, and go to state 63
    STATE_DEC  shift, and go to state 53

    state  go to state 64


State 55

   62 states: state .

    $default  reduce using rule 62 (states)


State 56

   20 assign_var: ASSIGNOP . $@7 math_var

    $default  reduce using rule 19 ($@7)

    $@7  go to state 65


State 57

    8 G_var_decl: ID $@3 assign_var .

    $default  reduce using rule 8 (G_var_decl)


State 58

    3 G_identifier_list: G_identifier_list COMMA $@1 . G_vars_decl

    ID  shift, and go to state 34

    $default  reduce using rule 9 (G_var_decl)

    G_vars_decl  go to state 66
    G_var_decl   go to state 37


State 59

    6 G_vars_decl: G_vars_decl COMMA $@2 . G_var_decl

    ID  shift, and go to state 34

    $default  reduce using rule 9 (G_var_decl)

    G_var_decl  go to state 67


State 60

   43 G_declarations: G_declarations NOBACKUP type $@15 G_identifier_list SEMICOLON .

    $default  reduce using rule 43 (G_declarations)


State 61

   39 G_declarations: G_declarations VOLATILE type $@13 G_identifier_list SEMICOLON .

    $default  reduce using rule 39 (G_declarations)


State 62

   67 state: STATE_DEC ID . $@21 ROBRK declarations $@22 optional_statements $@23 RCBRK

    $default  reduce using rule 64 ($@21)

    $@21  go to state 68


State 63

   54 program: $@17 includes inc_drone start_state $@18 G_declarations $@19 BEGINT $@20 states END .

    $default  reduce using rule 54 (program)


State 64

   63 states: states state .

    $default  reduce using rule 63 (states)


State 65

   20 assign_var: ASSIGNOP $@7 . math_var

    INT     shift, and go to state 69
    REALNO  shift, and go to state 70
    ID      shift, and go to state 71
    FUNC    shift, and go to state 72

    math_var  go to state 73
    item_var  go to state 74


State 66

    3 G_identifier_list: G_identifier_list COMMA $@1 G_vars_decl .
    6 G_vars_decl: G_vars_decl . COMMA $@2 G_var_decl

    COMMA  shift, and go to state 47

    COMMA     [reduce using rule 3 (G_identifier_list)]
    $default  reduce using rule 3 (G_identifier_list)


State 67

    6 G_vars_decl: G_vars_decl COMMA $@2 G_var_decl .

    $default  reduce using rule 6 (G_vars_decl)


State 68

   67 state: STATE_DEC ID $@21 . ROBRK declarations $@22 optional_statements $@23 RCBRK

    ROBRK  shift, and go to state 75


State 69

   27 item_var: INT .

    $default  reduce using rule 27 (item_var)


State 70

   26 item_var: REALNO .

    $default  reduce using rule 26 (item_var)


State 71

   25 item_var: ID .

    $default  reduce using rule 25 (item_var)


State 72

   28 item_var: FUNC .

    $default  reduce using rule 28 (item_var)


State 73

   20 assign_var: ASSIGNOP $@7 math_var .
   24 math_var: math_var . ADDOP $@8 item_var

    ADDOP  shift, and go to state 76

    $default  reduce using rule 20 (assign_var)


State 74

   22 math_var: item_var .

    $default  reduce using rule 22 (math_var)


State 75

   67 state: STATE_DEC ID $@21 ROBRK . declarations $@22 optional_statements $@23 RCBRK

    INTEGER  shift, and go to state 16
    REAL     shift, and go to state 17
    STRING   shift, and go to state 18

    INTEGER   [reduce using rule 33 (declarations)]
    REAL      [reduce using rule 33 (declarations)]
    STRING    [reduce using rule 33 (declarations)]
    $default  reduce using rule 33 (declarations)

    declarations  go to state 77
    type          go to state 78


State 76

   24 math_var: math_var ADDOP . $@8 item_var

    $default  reduce using rule 23 ($@8)

    $@8  go to state 79


State 77

   30 declarations: declarations . type $@9 identifier_list SEMICOLON
   67 state: STATE_DEC ID $@21 ROBRK declarations . $@22 optional_statements $@23 RCBRK

    INTEGER  shift, and go to state 16
    REAL     shift, and go to state 17
    STRING   shift, and go to state 18

    $default  reduce using rule 65 ($@22)

    type  go to state 80
    $@22  go to state 81


State 78

   32 declarations: type . $@10 identifier_list SEMICOLON

    $default  reduce using rule 31 ($@10)

    $@10  go to state 82


State 79

   24 math_var: math_var ADDOP $@8 . item_var

    INT     shift, and go to state 69
    REALNO  shift, and go to state 70
    ID      shift, and go to state 71
    FUNC    shift, and go to state 72

    item_var  go to state 83


State 80

   30 declarations: declarations type . $@9 identifier_list SEMICOLON

    $default  reduce using rule 29 ($@9)

    $@9  go to state 84


State 81

   67 state: STATE_DEC ID $@21 ROBRK declarations $@22 . optional_statements $@23 RCBRK

    ID                shift, and go to state 85
    INSERT_C          shift, and go to state 86
    PRINTF            shift, and go to state 87
    IF                shift, and go to state 88
    FOR               shift, and go to state 89
    DRONE_LEFT        shift, and go to state 90
    DRONE_RIGHT       shift, and go to state 91
    DRONE_TAKEOFF     shift, and go to state 92
    DRONE_SANDL       shift, and go to state 93
    DRONE_UP          shift, and go to state 94
    DRONE_DOWN        shift, and go to state 95
    DRONE_CCLOCKWISE  shift, and go to state 96
    DRONE_FLIPLEFT    shift, and go to state 97
    DRONE_CLOCKWISE   shift, and go to state 98
    DRONE_BACK        shift, and go to state 99
    DRONE_FORWARD     shift, and go to state 100

    ID                [reduce using rule 71 (optional_statements)]
    INSERT_C          [reduce using rule 71 (optional_statements)]
    PRINTF            [reduce using rule 71 (optional_statements)]
    IF                [reduce using rule 71 (optional_statements)]
    FOR               [reduce using rule 71 (optional_statements)]
    DRONE_LEFT        [reduce using rule 71 (optional_statements)]
    DRONE_RIGHT       [reduce using rule 71 (optional_statements)]
    DRONE_TAKEOFF     [reduce using rule 71 (optional_statements)]
    DRONE_SANDL       [reduce using rule 71 (optional_statements)]
    DRONE_UP          [reduce using rule 71 (optional_statements)]
    DRONE_DOWN        [reduce using rule 71 (optional_statements)]
    DRONE_CCLOCKWISE  [reduce using rule 71 (optional_statements)]
    DRONE_FLIPLEFT    [reduce using rule 71 (optional_statements)]
    DRONE_CLOCKWISE   [reduce using rule 71 (optional_statements)]
    DRONE_BACK        [reduce using rule 71 (optional_statements)]
    DRONE_FORWARD     [reduce using rule 71 (optional_statements)]
    TRANSITION        reduce using rule 71 (optional_statements)
    TRANSITION        [reduce using rule 75 ($@24)]
    $default          reduce using rule 71 (optional_statements)

    optional_statements  go to state 101
    statement_list       go to state 102
    statement            go to state 103
    $@24                 go to state 104
    operations           go to state 105


State 82

   32 declarations: type $@10 . identifier_list SEMICOLON

    ID  shift, and go to state 106

    $default  reduce using rule 18 (var_decl)

    identifier_list  go to state 107
    vars_decl        go to state 108
    var_decl         go to state 109


State 83

   24 math_var: math_var ADDOP $@8 item_var .

    $default  reduce using rule 24 (math_var)


State 84

   30 declarations: declarations type $@9 . identifier_list SEMICOLON

    ID  shift, and go to state 106

    $default  reduce using rule 18 (var_decl)

    identifier_list  go to state 110
    vars_decl        go to state 108
    var_decl         go to state 109


State 85

  112 operations: ID . ASSIGNOP $@36 math SEMICOLON

    ASSIGNOP  shift, and go to state 111


State 86

   97 statement: INSERT_C .

    $default  reduce using rule 97 (statement)


State 87

   96 statement: PRINTF . $@30 ROPAR printf RCPAR SEMICOLON

    $default  reduce using rule 95 ($@30)

    $@30  go to state 112


State 88

   94 statement: IF . ROPAR $@28 comparison_list RCPAR ROBRK $@29 optional_statements RCBRK

    ROPAR  shift, and go to state 113


State 89

   91 statement: FOR . ROPAR ID ASSIGNOP $@25 item SEMICOLON ID RELOP $@26 item SEMICOLON ID PPMM $@27 RCPAR ROBRK optional_statements RCBRK

    ROPAR  shift, and go to state 114


State 90

   77 statement: DRONE_LEFT . SEMICOLON

    SEMICOLON  shift, and go to state 115


State 91

   78 statement: DRONE_RIGHT .

    $default  reduce using rule 78 (statement)


State 92

   87 statement: DRONE_TAKEOFF . SEMICOLON

    SEMICOLON  shift, and go to state 116


State 93

   86 statement: DRONE_SANDL . SEMICOLON

    SEMICOLON  shift, and go to state 117


State 94

   79 statement: DRONE_UP . SEMICOLON

    SEMICOLON  shift, and go to state 118


State 95

   80 statement: DRONE_DOWN . SEMICOLON

    SEMICOLON  shift, and go to state 119


State 96

   84 statement: DRONE_CCLOCKWISE . SEMICOLON

    SEMICOLON  shift, and go to state 120


State 97

   85 statement: DRONE_FLIPLEFT . SEMICOLON

    SEMICOLON  shift, and go to state 121


State 98

   83 statement: DRONE_CLOCKWISE . SEMICOLON

    SEMICOLON  shift, and go to state 122


State 99

   81 statement: DRONE_BACK . SEMICOLON

    SEMICOLON  shift, and go to state 123


State 100

   82 statement: DRONE_FORWARD . SEMICOLON

    SEMICOLON  shift, and go to state 124


State 101

   67 state: STATE_DEC ID $@21 ROBRK declarations $@22 optional_statements . $@23 RCBRK
   69 optional_statements: optional_statements . statement_list

    ID                shift, and go to state 85
    INSERT_C          shift, and go to state 86
    PRINTF            shift, and go to state 87
    IF                shift, and go to state 88
    FOR               shift, and go to state 89
    DRONE_LEFT        shift, and go to state 90
    DRONE_RIGHT       shift, and go to state 91
    DRONE_TAKEOFF     shift, and go to state 92
    DRONE_SANDL       shift, and go to state 93
    DRONE_UP          shift, and go to state 94
    DRONE_DOWN        shift, and go to state 95
    DRONE_CCLOCKWISE  shift, and go to state 96
    DRONE_FLIPLEFT    shift, and go to state 97
    DRONE_CLOCKWISE   shift, and go to state 98
    DRONE_BACK        shift, and go to state 99
    DRONE_FORWARD     shift, and go to state 100

    TRANSITION  reduce using rule 75 ($@24)
    $default    reduce using rule 66 ($@23)

    $@23            go to state 125
    statement_list  go to state 126
    statement       go to state 103
    $@24            go to state 104
    operations      go to state 105


State 102

   70 optional_statements: statement_list .
   73 statement_list: statement_list . SEMICOLON statement

    SEMICOLON  shift, and go to state 127

    $default  reduce using rule 70 (optional_statements)


State 103

   72 statement_list: statement .

    $default  reduce using rule 72 (statement_list)


State 104

   76 statement: $@24 . transition_statement

    $default  reduce using rule 98 ($@31)

    transition_statement  go to state 128
    $@31                  go to state 129


State 105

   74 statement: operations .
  114 operations: operations . ID ASSIGNOP $@37 math SEMICOLON

    ID  shift, and go to state 130

    ID        [reduce using rule 74 (statement)]
    $default  reduce using rule 74 (statement)


State 106

   17 var_decl: ID . $@6 assign_var

    $default  reduce using rule 16 ($@6)

    $@6  go to state 131


State 107

   12 identifier_list: identifier_list . COMMA $@4 vars_decl
   32 declarations: type $@10 identifier_list . SEMICOLON

    SEMICOLON  shift, and go to state 132
    COMMA      shift, and go to state 133


State 108

   10 identifier_list: vars_decl .
   15 vars_decl: vars_decl . COMMA $@5 var_decl

    COMMA  shift, and go to state 134

    COMMA     [reduce using rule 10 (identifier_list)]
    $default  reduce using rule 10 (identifier_list)


State 109

   13 vars_decl: var_decl .

    $default  reduce using rule 13 (vars_decl)


State 110

   12 identifier_list: identifier_list . COMMA $@4 vars_decl
   30 declarations: declarations type $@9 identifier_list . SEMICOLON

    SEMICOLON  shift, and go to state 135
    COMMA      shift, and go to state 133


State 111

  112 operations: ID ASSIGNOP . $@36 math SEMICOLON

    $default  reduce using rule 111 ($@36)

    $@36  go to state 136


State 112

   96 statement: PRINTF $@30 . ROPAR printf RCPAR SEMICOLON

    ROPAR  shift, and go to state 137


State 113

   94 statement: IF ROPAR . $@28 comparison_list RCPAR ROBRK $@29 optional_statements RCBRK

    $default  reduce using rule 92 ($@28)

    $@28  go to state 138


State 114

   91 statement: FOR ROPAR . ID ASSIGNOP $@25 item SEMICOLON ID RELOP $@26 item SEMICOLON ID PPMM $@27 RCPAR ROBRK optional_statements RCBRK

    ID  shift, and go to state 139


State 115

   77 statement: DRONE_LEFT SEMICOLON .

    $default  reduce using rule 77 (statement)


State 116

   87 statement: DRONE_TAKEOFF SEMICOLON .

    $default  reduce using rule 87 (statement)


State 117

   86 statement: DRONE_SANDL SEMICOLON .

    $default  reduce using rule 86 (statement)


State 118

   79 statement: DRONE_UP SEMICOLON .

    $default  reduce using rule 79 (statement)


State 119

   80 statement: DRONE_DOWN SEMICOLON .

    $default  reduce using rule 80 (statement)


State 120

   84 statement: DRONE_CCLOCKWISE SEMICOLON .

    $default  reduce using rule 84 (statement)


State 121

   85 statement: DRONE_FLIPLEFT SEMICOLON .

    $default  reduce using rule 85 (statement)


State 122

   83 statement: DRONE_CLOCKWISE SEMICOLON .

    $default  reduce using rule 83 (statement)


State 123

   81 statement: DRONE_BACK SEMICOLON .

    $default  reduce using rule 81 (statement)


State 124

   82 statement: DRONE_FORWARD SEMICOLON .

    $default  reduce using rule 82 (statement)


State 125

   67 state: STATE_DEC ID $@21 ROBRK declarations $@22 optional_statements $@23 . RCBRK

    RCBRK  shift, and go to state 140


State 126

   69 optional_statements: optional_statements statement_list .
   73 statement_list: statement_list . SEMICOLON statement

    SEMICOLON  shift, and go to state 127

    $default  reduce using rule 69 (optional_statements)


State 127

   73 statement_list: statement_list SEMICOLON . statement

    ID                shift, and go to state 85
    INSERT_C          shift, and go to state 86
    PRINTF            shift, and go to state 87
    IF                shift, and go to state 88
    FOR               shift, and go to state 89
    DRONE_LEFT        shift, and go to state 90
    DRONE_RIGHT       shift, and go to state 91
    DRONE_TAKEOFF     shift, and go to state 92
    DRONE_SANDL       shift, and go to state 93
    DRONE_UP          shift, and go to state 94
    DRONE_DOWN        shift, and go to state 95
    DRONE_CCLOCKWISE  shift, and go to state 96
    DRONE_FLIPLEFT    shift, and go to state 97
    DRONE_CLOCKWISE   shift, and go to state 98
    DRONE_BACK        shift, and go to state 99
    DRONE_FORWARD     shift, and go to state 100

    $default  reduce using rule 75 ($@24)

    statement   go to state 141
    $@24        go to state 104
    operations  go to state 105


State 128

   76 statement: $@24 transition_statement .

    $default  reduce using rule 76 (statement)


State 129

   99 transition_statement: $@31 . TRANSITION trans_state SEMICOLON

    TRANSITION  shift, and go to state 142


State 130

  114 operations: operations ID . ASSIGNOP $@37 math SEMICOLON

    ASSIGNOP  shift, and go to state 143


State 131

   17 var_decl: ID $@6 . assign_var

    ASSIGNOP  shift, and go to state 56

    $default  reduce using rule 21 (assign_var)

    assign_var  go to state 144


State 132

   32 declarations: type $@10 identifier_list SEMICOLON .

    $default  reduce using rule 32 (declarations)


State 133

   12 identifier_list: identifier_list COMMA . $@4 vars_decl

    $default  reduce using rule 11 ($@4)

    $@4  go to state 145


State 134

   15 vars_decl: vars_decl COMMA . $@5 var_decl

    $default  reduce using rule 14 ($@5)

    $@5  go to state 146


State 135

   30 declarations: declarations type $@9 identifier_list SEMICOLON .

    $default  reduce using rule 30 (declarations)


State 136

  112 operations: ID ASSIGNOP $@36 . math SEMICOLON

    INT     shift, and go to state 147
    REALNO  shift, and go to state 148
    ID      shift, and go to state 149
    FUNC    shift, and go to state 150

    math  go to state 151
    item  go to state 152


State 137

   96 statement: PRINTF $@30 ROPAR . printf RCPAR SEMICOLON

    QUOTE  shift, and go to state 153

    printf  go to state 154


State 138

   94 statement: IF ROPAR $@28 . comparison_list RCPAR ROBRK $@29 optional_statements RCBRK

    ID  shift, and go to state 155

    comparison_list  go to state 156
    comparison       go to state 157


State 139

   91 statement: FOR ROPAR ID . ASSIGNOP $@25 item SEMICOLON ID RELOP $@26 item SEMICOLON ID PPMM $@27 RCPAR ROBRK optional_statements RCBRK

    ASSIGNOP  shift, and go to state 158


State 140

   67 state: STATE_DEC ID $@21 ROBRK declarations $@22 optional_statements $@23 RCBRK .

    $default  reduce using rule 67 (state)


State 141

   73 statement_list: statement_list SEMICOLON statement .

    $default  reduce using rule 73 (statement_list)


State 142

   99 transition_statement: $@31 TRANSITION . trans_state SEMICOLON

    ID  shift, and go to state 159

    trans_state  go to state 160


State 143

  114 operations: operations ID ASSIGNOP . $@37 math SEMICOLON

    $default  reduce using rule 113 ($@37)

    $@37  go to state 161


State 144

   17 var_decl: ID $@6 assign_var .

    $default  reduce using rule 17 (var_decl)


State 145

   12 identifier_list: identifier_list COMMA $@4 . vars_decl

    ID  shift, and go to state 106

    $default  reduce using rule 18 (var_decl)

    vars_decl  go to state 162
    var_decl   go to state 109


State 146

   15 vars_decl: vars_decl COMMA $@5 . var_decl

    ID  shift, and go to state 106

    $default  reduce using rule 18 (var_decl)

    var_decl  go to state 163


State 147

  120 item: INT .

    $default  reduce using rule 120 (item)


State 148

  119 item: REALNO .

    $default  reduce using rule 119 (item)


State 149

  118 item: ID .

    $default  reduce using rule 118 (item)


State 150

  121 item: FUNC .

    $default  reduce using rule 121 (item)


State 151

  112 operations: ID ASSIGNOP $@36 math . SEMICOLON
  117 math: math . ADDOP $@38 item

    SEMICOLON  shift, and go to state 164
    ADDOP      shift, and go to state 165


State 152

  115 math: item .

    $default  reduce using rule 115 (math)


State 153

  101 printf: QUOTE . COMMA $@32 vars_print
  102       | QUOTE .

    COMMA  shift, and go to state 166

    $default  reduce using rule 102 (printf)


State 154

   96 statement: PRINTF $@30 ROPAR printf . RCPAR SEMICOLON

    RCPAR  shift, and go to state 167


State 155

  127 comparison: ID . RELOP INT
  128           | ID . RELOP ID
  129           | ID . RELOP FUNC

    RELOP  shift, and go to state 168


State 156

   94 statement: IF ROPAR $@28 comparison_list . RCPAR ROBRK $@29 optional_statements RCBRK
  124 comparison_list: comparison_list . AND $@39 comparison
  126                | comparison_list . OR $@40 comparison

    RCPAR  shift, and go to state 169
    AND    shift, and go to state 170
    OR     shift, and go to state 171


State 157

  122 comparison_list: comparison .

    $default  reduce using rule 122 (comparison_list)


State 158

   91 statement: FOR ROPAR ID ASSIGNOP . $@25 item SEMICOLON ID RELOP $@26 item SEMICOLON ID PPMM $@27 RCPAR ROBRK optional_statements RCBRK

    $default  reduce using rule 88 ($@25)

    $@25  go to state 172


State 159

   68 trans_state: ID .

    $default  reduce using rule 68 (trans_state)


State 160

   99 transition_statement: $@31 TRANSITION trans_state . SEMICOLON

    SEMICOLON  shift, and go to state 173


State 161

  114 operations: operations ID ASSIGNOP $@37 . math SEMICOLON

    INT     shift, and go to state 147
    REALNO  shift, and go to state 148
    ID      shift, and go to state 149
    FUNC    shift, and go to state 150

    math  go to state 174
    item  go to state 152


State 162

   12 identifier_list: identifier_list COMMA $@4 vars_decl .
   15 vars_decl: vars_decl . COMMA $@5 var_decl

    COMMA  shift, and go to state 134

    COMMA     [reduce using rule 12 (identifier_list)]
    $default  reduce using rule 12 (identifier_list)


State 163

   15 vars_decl: vars_decl COMMA $@5 var_decl .

    $default  reduce using rule 15 (vars_decl)


State 164

  112 operations: ID ASSIGNOP $@36 math SEMICOLON .

    $default  reduce using rule 112 (operations)


State 165

  117 math: math ADDOP . $@38 item

    $default  reduce using rule 116 ($@38)

    $@38  go to state 175


State 166

  101 printf: QUOTE COMMA . $@32 vars_print

    $default  reduce using rule 100 ($@32)

    $@32  go to state 176


State 167

   96 statement: PRINTF $@30 ROPAR printf RCPAR . SEMICOLON

    SEMICOLON  shift, and go to state 177


State 168

  127 comparison: ID RELOP . INT
  128           | ID RELOP . ID
  129           | ID RELOP . FUNC

    INT   shift, and go to state 178
    ID    shift, and go to state 179
    FUNC  shift, and go to state 180


State 169

   94 statement: IF ROPAR $@28 comparison_list RCPAR . ROBRK $@29 optional_statements RCBRK

    ROBRK  shift, and go to state 181


State 170

  124 comparison_list: comparison_list AND . $@39 comparison

    $default  reduce using rule 123 ($@39)

    $@39  go to state 182


State 171

  126 comparison_list: comparison_list OR . $@40 comparison

    $default  reduce using rule 125 ($@40)

    $@40  go to state 183


State 172

   91 statement: FOR ROPAR ID ASSIGNOP $@25 . item SEMICOLON ID RELOP $@26 item SEMICOLON ID PPMM $@27 RCPAR ROBRK optional_statements RCBRK

    INT     shift, and go to state 147
    REALNO  shift, and go to state 148
    ID      shift, and go to state 149
    FUNC    shift, and go to state 150

    item  go to state 184


State 173

   99 transition_statement: $@31 TRANSITION trans_state SEMICOLON .

    $default  reduce using rule 99 (transition_statement)


State 174

  114 operations: operations ID ASSIGNOP $@37 math . SEMICOLON
  117 math: math . ADDOP $@38 item

    SEMICOLON  shift, and go to state 185
    ADDOP      shift, and go to state 165


State 175

  117 math: math ADDOP $@38 . item

    INT     shift, and go to state 147
    REALNO  shift, and go to state 148
    ID      shift, and go to state 149
    FUNC    shift, and go to state 150

    item  go to state 186


State 176

  101 printf: QUOTE COMMA $@32 . vars_print

    ID  shift, and go to state 187

    vars_print  go to state 188
    var_print   go to state 189


State 177

   96 statement: PRINTF $@30 ROPAR printf RCPAR SEMICOLON .

    $default  reduce using rule 96 (statement)


State 178

  127 comparison: ID RELOP INT .

    $default  reduce using rule 127 (comparison)


State 179

  128 comparison: ID RELOP ID .

    $default  reduce using rule 128 (comparison)


State 180

  129 comparison: ID RELOP FUNC .

    $default  reduce using rule 129 (comparison)


State 181

   94 statement: IF ROPAR $@28 comparison_list RCPAR ROBRK . $@29 optional_statements RCBRK

    $default  reduce using rule 93 ($@29)

    $@29  go to state 190


State 182

  124 comparison_list: comparison_list AND $@39 . comparison

    ID  shift, and go to state 155

    comparison  go to state 191


State 183

  126 comparison_list: comparison_list OR $@40 . comparison

    ID  shift, and go to state 155

    comparison  go to state 192


State 184

   91 statement: FOR ROPAR ID ASSIGNOP $@25 item . SEMICOLON ID RELOP $@26 item SEMICOLON ID PPMM $@27 RCPAR ROBRK optional_statements RCBRK

    SEMICOLON  shift, and go to state 193


State 185

  114 operations: operations ID ASSIGNOP $@37 math SEMICOLON .

    $default  reduce using rule 114 (operations)


State 186

  117 math: math ADDOP $@38 item .

    $default  reduce using rule 117 (math)


State 187

  107 var_print: ID . $@34 assign

    $default  reduce using rule 106 ($@34)

    $@34  go to state 194


State 188

  101 printf: QUOTE COMMA $@32 vars_print .
  105 vars_print: vars_print . COMMA $@33 var_print

    COMMA  shift, and go to state 195

    $default  reduce using rule 101 (printf)


State 189

  103 vars_print: var_print .

    $default  reduce using rule 103 (vars_print)


State 190

   94 statement: IF ROPAR $@28 comparison_list RCPAR ROBRK $@29 . optional_statements RCBRK

    ID                shift, and go to state 85
    INSERT_C          shift, and go to state 86
    PRINTF            shift, and go to state 87
    IF                shift, and go to state 88
    FOR               shift, and go to state 89
    DRONE_LEFT        shift, and go to state 90
    DRONE_RIGHT       shift, and go to state 91
    DRONE_TAKEOFF     shift, and go to state 92
    DRONE_SANDL       shift, and go to state 93
    DRONE_UP          shift, and go to state 94
    DRONE_DOWN        shift, and go to state 95
    DRONE_CCLOCKWISE  shift, and go to state 96
    DRONE_FLIPLEFT    shift, and go to state 97
    DRONE_CLOCKWISE   shift, and go to state 98
    DRONE_BACK        shift, and go to state 99
    DRONE_FORWARD     shift, and go to state 100

    ID                [reduce using rule 71 (optional_statements)]
    INSERT_C          [reduce using rule 71 (optional_statements)]
    PRINTF            [reduce using rule 71 (optional_statements)]
    IF                [reduce using rule 71 (optional_statements)]
    FOR               [reduce using rule 71 (optional_statements)]
    DRONE_LEFT        [reduce using rule 71 (optional_statements)]
    DRONE_RIGHT       [reduce using rule 71 (optional_statements)]
    DRONE_TAKEOFF     [reduce using rule 71 (optional_statements)]
    DRONE_SANDL       [reduce using rule 71 (optional_statements)]
    DRONE_UP          [reduce using rule 71 (optional_statements)]
    DRONE_DOWN        [reduce using rule 71 (optional_statements)]
    DRONE_CCLOCKWISE  [reduce using rule 71 (optional_statements)]
    DRONE_FLIPLEFT    [reduce using rule 71 (optional_statements)]
    DRONE_CLOCKWISE   [reduce using rule 71 (optional_statements)]
    DRONE_BACK        [reduce using rule 71 (optional_statements)]
    DRONE_FORWARD     [reduce using rule 71 (optional_statements)]
    TRANSITION        reduce using rule 71 (optional_statements)
    TRANSITION        [reduce using rule 75 ($@24)]
    $default          reduce using rule 71 (optional_statements)

    optional_statements  go to state 196
    statement_list       go to state 102
    statement            go to state 103
    $@24                 go to state 104
    operations           go to state 105


State 191

  124 comparison_list: comparison_list AND $@39 comparison .

    $default  reduce using rule 124 (comparison_list)


State 192

  126 comparison_list: comparison_list OR $@40 comparison .

    $default  reduce using rule 126 (comparison_list)


State 193

   91 statement: FOR ROPAR ID ASSIGNOP $@25 item SEMICOLON . ID RELOP $@26 item SEMICOLON ID PPMM $@27 RCPAR ROBRK optional_statements RCBRK

    ID  shift, and go to state 197


State 194

  107 var_print: ID $@34 . assign

    ASSIGNOP  shift, and go to state 198

    $default  reduce using rule 110 (assign)

    assign  go to state 199


State 195

  105 vars_print: vars_print COMMA . $@33 var_print

    $default  reduce using rule 104 ($@33)

    $@33  go to state 200


State 196

   69 optional_statements: optional_statements . statement_list
   94 statement: IF ROPAR $@28 comparison_list RCPAR ROBRK $@29 optional_statements . RCBRK

    ID                shift, and go to state 85
    INSERT_C          shift, and go to state 86
    PRINTF            shift, and go to state 87
    IF                shift, and go to state 88
    FOR               shift, and go to state 89
    DRONE_LEFT        shift, and go to state 90
    DRONE_RIGHT       shift, and go to state 91
    DRONE_TAKEOFF     shift, and go to state 92
    DRONE_SANDL       shift, and go to state 93
    DRONE_UP          shift, and go to state 94
    DRONE_DOWN        shift, and go to state 95
    DRONE_CCLOCKWISE  shift, and go to state 96
    DRONE_FLIPLEFT    shift, and go to state 97
    DRONE_CLOCKWISE   shift, and go to state 98
    DRONE_BACK        shift, and go to state 99
    DRONE_FORWARD     shift, and go to state 100
    RCBRK             shift, and go to state 201

    $default  reduce using rule 75 ($@24)

    statement_list  go to state 126
    statement       go to state 103
    $@24            go to state 104
    operations      go to state 105


State 197

   91 statement: FOR ROPAR ID ASSIGNOP $@25 item SEMICOLON ID . RELOP $@26 item SEMICOLON ID PPMM $@27 RCPAR ROBRK optional_statements RCBRK

    RELOP  shift, and go to state 202


State 198

  109 assign: ASSIGNOP . $@35 math

    $default  reduce using rule 108 ($@35)

    $@35  go to state 203


State 199

  107 var_print: ID $@34 assign .

    $default  reduce using rule 107 (var_print)


State 200

  105 vars_print: vars_print COMMA $@33 . var_print

    ID  shift, and go to state 187

    var_print  go to state 204


State 201

   94 statement: IF ROPAR $@28 comparison_list RCPAR ROBRK $@29 optional_statements RCBRK .

    $default  reduce using rule 94 (statement)


State 202

   91 statement: FOR ROPAR ID ASSIGNOP $@25 item SEMICOLON ID RELOP . $@26 item SEMICOLON ID PPMM $@27 RCPAR ROBRK optional_statements RCBRK

    $default  reduce using rule 89 ($@26)

    $@26  go to state 205


State 203

  109 assign: ASSIGNOP $@35 . math

    INT     shift, and go to state 147
    REALNO  shift, and go to state 148
    ID      shift, and go to state 149
    FUNC    shift, and go to state 150

    math  go to state 206
    item  go to state 152


State 204

  105 vars_print: vars_print COMMA $@33 var_print .

    $default  reduce using rule 105 (vars_print)


State 205

   91 statement: FOR ROPAR ID ASSIGNOP $@25 item SEMICOLON ID RELOP $@26 . item SEMICOLON ID PPMM $@27 RCPAR ROBRK optional_statements RCBRK

    INT     shift, and go to state 147
    REALNO  shift, and go to state 148
    ID      shift, and go to state 149
    FUNC    shift, and go to state 150

    item  go to state 207


State 206

  109 assign: ASSIGNOP $@35 math .
  117 math: math . ADDOP $@38 item

    ADDOP  shift, and go to state 165

    $default  reduce using rule 109 (assign)


State 207

   91 statement: FOR ROPAR ID ASSIGNOP $@25 item SEMICOLON ID RELOP $@26 item . SEMICOLON ID PPMM $@27 RCPAR ROBRK optional_statements RCBRK

    SEMICOLON  shift, and go to state 208


State 208

   91 statement: FOR ROPAR ID ASSIGNOP $@25 item SEMICOLON ID RELOP $@26 item SEMICOLON . ID PPMM $@27 RCPAR ROBRK optional_statements RCBRK

    ID  shift, and go to state 209


State 209

   91 statement: FOR ROPAR ID ASSIGNOP $@25 item SEMICOLON ID RELOP $@26 item SEMICOLON ID . PPMM $@27 RCPAR ROBRK optional_statements RCBRK

    PPMM  shift, and go to state 210


State 210

   91 statement: FOR ROPAR ID ASSIGNOP $@25 item SEMICOLON ID RELOP $@26 item SEMICOLON ID PPMM . $@27 RCPAR ROBRK optional_statements RCBRK

    $default  reduce using rule 90 ($@27)

    $@27  go to state 211


State 211

   91 statement: FOR ROPAR ID ASSIGNOP $@25 item SEMICOLON ID RELOP $@26 item SEMICOLON ID PPMM $@27 . RCPAR ROBRK optional_statements RCBRK

    RCPAR  shift, and go to state 212


State 212

   91 statement: FOR ROPAR ID ASSIGNOP $@25 item SEMICOLON ID RELOP $@26 item SEMICOLON ID PPMM $@27 RCPAR . ROBRK optional_statements RCBRK

    ROBRK  shift, and go to state 213


State 213

   91 statement: FOR ROPAR ID ASSIGNOP $@25 item SEMICOLON ID RELOP $@26 item SEMICOLON ID PPMM $@27 RCPAR ROBRK . optional_statements RCBRK

    ID                shift, and go to state 85
    INSERT_C          shift, and go to state 86
    PRINTF            shift, and go to state 87
    IF                shift, and go to state 88
    FOR               shift, and go to state 89
    DRONE_LEFT        shift, and go to state 90
    DRONE_RIGHT       shift, and go to state 91
    DRONE_TAKEOFF     shift, and go to state 92
    DRONE_SANDL       shift, and go to state 93
    DRONE_UP          shift, and go to state 94
    DRONE_DOWN        shift, and go to state 95
    DRONE_CCLOCKWISE  shift, and go to state 96
    DRONE_FLIPLEFT    shift, and go to state 97
    DRONE_CLOCKWISE   shift, and go to state 98
    DRONE_BACK        shift, and go to state 99
    DRONE_FORWARD     shift, and go to state 100

    ID                [reduce using rule 71 (optional_statements)]
    INSERT_C          [reduce using rule 71 (optional_statements)]
    PRINTF            [reduce using rule 71 (optional_statements)]
    IF                [reduce using rule 71 (optional_statements)]
    FOR               [reduce using rule 71 (optional_statements)]
    DRONE_LEFT        [reduce using rule 71 (optional_statements)]
    DRONE_RIGHT       [reduce using rule 71 (optional_statements)]
    DRONE_TAKEOFF     [reduce using rule 71 (optional_statements)]
    DRONE_SANDL       [reduce using rule 71 (optional_statements)]
    DRONE_UP          [reduce using rule 71 (optional_statements)]
    DRONE_DOWN        [reduce using rule 71 (optional_statements)]
    DRONE_CCLOCKWISE  [reduce using rule 71 (optional_statements)]
    DRONE_FLIPLEFT    [reduce using rule 71 (optional_statements)]
    DRONE_CLOCKWISE   [reduce using rule 71 (optional_statements)]
    DRONE_BACK        [reduce using rule 71 (optional_statements)]
    DRONE_FORWARD     [reduce using rule 71 (optional_statements)]
    TRANSITION        reduce using rule 71 (optional_statements)
    TRANSITION        [reduce using rule 75 ($@24)]
    $default          reduce using rule 71 (optional_statements)

    optional_statements  go to state 214
    statement_list       go to state 102
    statement            go to state 103
    $@24                 go to state 104
    operations           go to state 105


State 214

   69 optional_statements: optional_statements . statement_list
   91 statement: FOR ROPAR ID ASSIGNOP $@25 item SEMICOLON ID RELOP $@26 item SEMICOLON ID PPMM $@27 RCPAR ROBRK optional_statements . RCBRK

    ID                shift, and go to state 85
    INSERT_C          shift, and go to state 86
    PRINTF            shift, and go to state 87
    IF                shift, and go to state 88
    FOR               shift, and go to state 89
    DRONE_LEFT        shift, and go to state 90
    DRONE_RIGHT       shift, and go to state 91
    DRONE_TAKEOFF     shift, and go to state 92
    DRONE_SANDL       shift, and go to state 93
    DRONE_UP          shift, and go to state 94
    DRONE_DOWN        shift, and go to state 95
    DRONE_CCLOCKWISE  shift, and go to state 96
    DRONE_FLIPLEFT    shift, and go to state 97
    DRONE_CLOCKWISE   shift, and go to state 98
    DRONE_BACK        shift, and go to state 99
    DRONE_FORWARD     shift, and go to state 100
    RCBRK             shift, and go to state 215

    $default  reduce using rule 75 ($@24)

    statement_list  go to state 126
    statement       go to state 103
    $@24            go to state 104
    operations      go to state 105


State 215

   91 statement: FOR ROPAR ID ASSIGNOP $@25 item SEMICOLON ID RELOP $@26 item SEMICOLON ID PPMM $@27 RCPAR ROBRK optional_statements RCBRK .

    $default  reduce using rule 91 (statement)
