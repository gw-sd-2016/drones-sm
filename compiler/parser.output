Terminals unused in grammar

   PROGRAM
   VAR
   THEN
   ELSE
   DO
   DOT
   COLON
   BANG
   IF_EXPRESSION
   MULOP


State 17 conflicts: 3 shift/reduce
State 24 conflicts: 5 shift/reduce
State 38 conflicts: 1 shift/reduce
State 78 conflicts: 1 shift/reduce
State 100 conflicts: 5 shift/reduce
State 105 conflicts: 5 shift/reduce


Grammar

    0 $accept: program $end

    1 identifier_list: vars_decl

    2 $@1: %empty

    3 identifier_list: identifier_list COMMA $@1 vars_decl

    4 vars_decl: var_decl

    5 $@2: %empty

    6 vars_decl: vars_decl COMMA $@2 var_decl

    7 $@3: %empty

    8 var_decl: ID $@3 assign
    9         | %empty

   10 $@4: %empty

   11 declarations: declarations type $@4 identifier_list SEMICOLON

   12 $@5: %empty

   13 declarations: type $@5 identifier_list SEMICOLON
   14             | %empty

   15 type: INTEGER
   16     | REAL
   17     | STRING

   18 $@6: %empty

   19 $@7: %empty

   20 program: $@6 includes BEGINT $@7 states END

   21 includes: include
   22         | includes include

   23 include: INCLUDE

   24 states: state
   25       | states state

   26 $@8: %empty

   27 $@9: %empty

   28 state: STATE_DEC ID $@8 ROBRK declarations $@9 optional_statements TRANSITION trans_state SEMICOLON RCBRK

   29 trans_state: ID

   30 optional_statements: optional_statements statement_list
   31                    | statement_list
   32                    | %empty

   33 statement_list: statement
   34               | statement_list SEMICOLON statement

   35 statement: operations

   36 $@10: %empty

   37 statement: FOR ROPAR FOR_EXPRESSION $@10 RCPAR ROBRK optional_statements RCBRK

   38 $@11: %empty

   39 $@12: %empty

   40 statement: IF ROPAR $@11 comparison_list RCPAR ROBRK $@12 optional_statements RCBRK

   41 $@13: %empty

   42 statement: PRINTF $@13 ROPAR printf RCPAR SEMICOLON
   43          | INSERT_C

   44 $@14: %empty

   45 printf: QUOTE COMMA $@14 vars
   46       | QUOTE

   47 vars: var

   48 $@15: %empty

   49 vars: vars COMMA $@15 var

   50 $@16: %empty

   51 var: ID $@16 assign

   52 $@17: %empty

   53 assign: ASSIGNOP $@17 math
   54       | %empty

   55 $@18: %empty

   56 operations: ID ASSIGNOP $@18 math SEMICOLON

   57 math: item

   58 $@19: %empty

   59 math: math ADDOP $@19 item

   60 item: ID
   61     | REALNO
   62     | INT
   63     | FUNC

   64 comparison_list: comparison

   65 $@20: %empty

   66 comparison_list: comparison_list AND $@20 comparison

   67 $@21: %empty

   68 comparison_list: comparison_list OR $@21 comparison

   69 comparison: ID RELOP INT
   70           | ID RELOP ID
   71           | ID RELOP FUNC


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 62 69
REALNO (259) 61
ID (260) 8 28 29 51 56 60 69 70 71
FOR_EXPRESSION (261) 37
INSERT_C (262) 43
FUNC (263) 63 71
RELOP (264) 69 70 71
PRINTF (265) 42
QUOTE (266) 45 46
INCLUDE (267) 23
PROGRAM (268)
INTEGER (269) 15
REAL (270) 16
VAR (271)
BEGINT (272) 20
END (273) 20
STATE_DEC (274) 28
IF (275) 40
FOR (276) 37
THEN (277)
ELSE (278)
DO (279)
ROPAR (280) 37 40 42
RCPAR (281) 37 40 42
ROBRK (282) 28 37 40
RCBRK (283) 28 37 40
DOT (284)
SEMICOLON (285) 11 13 28 34 42 56
COMMA (286) 3 6 45 49
COLON (287)
TRANSITION (288) 28
ASSIGNOP (289) 53 56
AND (290) 66
OR (291) 68
STRING (292) 17
BANG (293)
IF_EXPRESSION (294)
MULOP (295)
ADDOP (296) 59


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
identifier_list (43)
    on left: 1 3, on right: 3 11 13
$@1 (44)
    on left: 2, on right: 3
vars_decl (45)
    on left: 4 6, on right: 1 3 6
$@2 (46)
    on left: 5, on right: 6
var_decl (47)
    on left: 8 9, on right: 4 6
$@3 (48)
    on left: 7, on right: 8
declarations (49)
    on left: 11 13 14, on right: 11 28
$@4 (50)
    on left: 10, on right: 11
$@5 (51)
    on left: 12, on right: 13
type (52)
    on left: 15 16 17, on right: 11 13
program (53)
    on left: 20, on right: 0
$@6 (54)
    on left: 18, on right: 20
$@7 (55)
    on left: 19, on right: 20
includes (56)
    on left: 21 22, on right: 20 22
include (57)
    on left: 23, on right: 21 22
states (58)
    on left: 24 25, on right: 20 25
state (59)
    on left: 28, on right: 24 25
$@8 (60)
    on left: 26, on right: 28
$@9 (61)
    on left: 27, on right: 28
trans_state (62)
    on left: 29, on right: 28
optional_statements (63)
    on left: 30 31 32, on right: 28 30 37 40
statement_list (64)
    on left: 33 34, on right: 30 31 34
statement (65)
    on left: 35 37 40 42 43, on right: 33 34
$@10 (66)
    on left: 36, on right: 37
$@11 (67)
    on left: 38, on right: 40
$@12 (68)
    on left: 39, on right: 40
$@13 (69)
    on left: 41, on right: 42
printf (70)
    on left: 45 46, on right: 42
$@14 (71)
    on left: 44, on right: 45
vars (72)
    on left: 47 49, on right: 45 49
$@15 (73)
    on left: 48, on right: 49
var (74)
    on left: 51, on right: 47 49
$@16 (75)
    on left: 50, on right: 51
assign (76)
    on left: 53 54, on right: 8 51
$@17 (77)
    on left: 52, on right: 53
operations (78)
    on left: 56, on right: 35
$@18 (79)
    on left: 55, on right: 56
math (80)
    on left: 57 59, on right: 53 56 59
$@19 (81)
    on left: 58, on right: 59
item (82)
    on left: 60 61 62 63, on right: 57 59
comparison_list (83)
    on left: 64 66 68, on right: 40 66 68
$@20 (84)
    on left: 65, on right: 66
$@21 (85)
    on left: 67, on right: 68
comparison (86)
    on left: 69 70 71, on right: 64 66 68


State 0

    0 $accept: . program $end

    $default  reduce using rule 18 ($@6)

    program  go to state 1
    $@6      go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

   20 program: $@6 . includes BEGINT $@7 states END

    INCLUDE  shift, and go to state 4

    includes  go to state 5
    include   go to state 6


State 3

    0 $accept: program $end .

    $default  accept


State 4

   23 include: INCLUDE .

    $default  reduce using rule 23 (include)


State 5

   20 program: $@6 includes . BEGINT $@7 states END
   22 includes: includes . include

    INCLUDE  shift, and go to state 4
    BEGINT   shift, and go to state 7

    include  go to state 8


State 6

   21 includes: include .

    $default  reduce using rule 21 (includes)


State 7

   20 program: $@6 includes BEGINT . $@7 states END

    $default  reduce using rule 19 ($@7)

    $@7  go to state 9


State 8

   22 includes: includes include .

    $default  reduce using rule 22 (includes)


State 9

   20 program: $@6 includes BEGINT $@7 . states END

    STATE_DEC  shift, and go to state 10

    states  go to state 11
    state   go to state 12


State 10

   28 state: STATE_DEC . ID $@8 ROBRK declarations $@9 optional_statements TRANSITION trans_state SEMICOLON RCBRK

    ID  shift, and go to state 13


State 11

   20 program: $@6 includes BEGINT $@7 states . END
   25 states: states . state

    END        shift, and go to state 14
    STATE_DEC  shift, and go to state 10

    state  go to state 15


State 12

   24 states: state .

    $default  reduce using rule 24 (states)


State 13

   28 state: STATE_DEC ID . $@8 ROBRK declarations $@9 optional_statements TRANSITION trans_state SEMICOLON RCBRK

    $default  reduce using rule 26 ($@8)

    $@8  go to state 16


State 14

   20 program: $@6 includes BEGINT $@7 states END .

    $default  reduce using rule 20 (program)


State 15

   25 states: states state .

    $default  reduce using rule 25 (states)


State 16

   28 state: STATE_DEC ID $@8 . ROBRK declarations $@9 optional_statements TRANSITION trans_state SEMICOLON RCBRK

    ROBRK  shift, and go to state 17


State 17

   28 state: STATE_DEC ID $@8 ROBRK . declarations $@9 optional_statements TRANSITION trans_state SEMICOLON RCBRK

    INTEGER  shift, and go to state 18
    REAL     shift, and go to state 19
    STRING   shift, and go to state 20

    INTEGER   [reduce using rule 14 (declarations)]
    REAL      [reduce using rule 14 (declarations)]
    STRING    [reduce using rule 14 (declarations)]
    $default  reduce using rule 14 (declarations)

    declarations  go to state 21
    type          go to state 22


State 18

   15 type: INTEGER .

    $default  reduce using rule 15 (type)


State 19

   16 type: REAL .

    $default  reduce using rule 16 (type)


State 20

   17 type: STRING .

    $default  reduce using rule 17 (type)


State 21

   11 declarations: declarations . type $@4 identifier_list SEMICOLON
   28 state: STATE_DEC ID $@8 ROBRK declarations . $@9 optional_statements TRANSITION trans_state SEMICOLON RCBRK

    INTEGER  shift, and go to state 18
    REAL     shift, and go to state 19
    STRING   shift, and go to state 20

    $default  reduce using rule 27 ($@9)

    type  go to state 23
    $@9   go to state 24


State 22

   13 declarations: type . $@5 identifier_list SEMICOLON

    $default  reduce using rule 12 ($@5)

    $@5  go to state 25


State 23

   11 declarations: declarations type . $@4 identifier_list SEMICOLON

    $default  reduce using rule 10 ($@4)

    $@4  go to state 26


State 24

   28 state: STATE_DEC ID $@8 ROBRK declarations $@9 . optional_statements TRANSITION trans_state SEMICOLON RCBRK

    ID        shift, and go to state 27
    INSERT_C  shift, and go to state 28
    PRINTF    shift, and go to state 29
    IF        shift, and go to state 30
    FOR       shift, and go to state 31

    ID        [reduce using rule 32 (optional_statements)]
    INSERT_C  [reduce using rule 32 (optional_statements)]
    PRINTF    [reduce using rule 32 (optional_statements)]
    IF        [reduce using rule 32 (optional_statements)]
    FOR       [reduce using rule 32 (optional_statements)]
    $default  reduce using rule 32 (optional_statements)

    optional_statements  go to state 32
    statement_list       go to state 33
    statement            go to state 34
    operations           go to state 35


State 25

   13 declarations: type $@5 . identifier_list SEMICOLON

    ID  shift, and go to state 36

    $default  reduce using rule 9 (var_decl)

    identifier_list  go to state 37
    vars_decl        go to state 38
    var_decl         go to state 39


State 26

   11 declarations: declarations type $@4 . identifier_list SEMICOLON

    ID  shift, and go to state 36

    $default  reduce using rule 9 (var_decl)

    identifier_list  go to state 40
    vars_decl        go to state 38
    var_decl         go to state 39


State 27

   56 operations: ID . ASSIGNOP $@18 math SEMICOLON

    ASSIGNOP  shift, and go to state 41


State 28

   43 statement: INSERT_C .

    $default  reduce using rule 43 (statement)


State 29

   42 statement: PRINTF . $@13 ROPAR printf RCPAR SEMICOLON

    $default  reduce using rule 41 ($@13)

    $@13  go to state 42


State 30

   40 statement: IF . ROPAR $@11 comparison_list RCPAR ROBRK $@12 optional_statements RCBRK

    ROPAR  shift, and go to state 43


State 31

   37 statement: FOR . ROPAR FOR_EXPRESSION $@10 RCPAR ROBRK optional_statements RCBRK

    ROPAR  shift, and go to state 44


State 32

   28 state: STATE_DEC ID $@8 ROBRK declarations $@9 optional_statements . TRANSITION trans_state SEMICOLON RCBRK
   30 optional_statements: optional_statements . statement_list

    ID          shift, and go to state 27
    INSERT_C    shift, and go to state 28
    PRINTF      shift, and go to state 29
    IF          shift, and go to state 30
    FOR         shift, and go to state 31
    TRANSITION  shift, and go to state 45

    statement_list  go to state 46
    statement       go to state 34
    operations      go to state 35


State 33

   31 optional_statements: statement_list .
   34 statement_list: statement_list . SEMICOLON statement

    SEMICOLON  shift, and go to state 47

    $default  reduce using rule 31 (optional_statements)


State 34

   33 statement_list: statement .

    $default  reduce using rule 33 (statement_list)


State 35

   35 statement: operations .

    $default  reduce using rule 35 (statement)


State 36

    8 var_decl: ID . $@3 assign

    $default  reduce using rule 7 ($@3)

    $@3  go to state 48


State 37

    3 identifier_list: identifier_list . COMMA $@1 vars_decl
   13 declarations: type $@5 identifier_list . SEMICOLON

    SEMICOLON  shift, and go to state 49
    COMMA      shift, and go to state 50


State 38

    1 identifier_list: vars_decl .
    6 vars_decl: vars_decl . COMMA $@2 var_decl

    COMMA  shift, and go to state 51

    COMMA     [reduce using rule 1 (identifier_list)]
    $default  reduce using rule 1 (identifier_list)


State 39

    4 vars_decl: var_decl .

    $default  reduce using rule 4 (vars_decl)


State 40

    3 identifier_list: identifier_list . COMMA $@1 vars_decl
   11 declarations: declarations type $@4 identifier_list . SEMICOLON

    SEMICOLON  shift, and go to state 52
    COMMA      shift, and go to state 50


State 41

   56 operations: ID ASSIGNOP . $@18 math SEMICOLON

    $default  reduce using rule 55 ($@18)

    $@18  go to state 53


State 42

   42 statement: PRINTF $@13 . ROPAR printf RCPAR SEMICOLON

    ROPAR  shift, and go to state 54


State 43

   40 statement: IF ROPAR . $@11 comparison_list RCPAR ROBRK $@12 optional_statements RCBRK

    $default  reduce using rule 38 ($@11)

    $@11  go to state 55


State 44

   37 statement: FOR ROPAR . FOR_EXPRESSION $@10 RCPAR ROBRK optional_statements RCBRK

    FOR_EXPRESSION  shift, and go to state 56


State 45

   28 state: STATE_DEC ID $@8 ROBRK declarations $@9 optional_statements TRANSITION . trans_state SEMICOLON RCBRK

    ID  shift, and go to state 57

    trans_state  go to state 58


State 46

   30 optional_statements: optional_statements statement_list .
   34 statement_list: statement_list . SEMICOLON statement

    SEMICOLON  shift, and go to state 47

    $default  reduce using rule 30 (optional_statements)


State 47

   34 statement_list: statement_list SEMICOLON . statement

    ID        shift, and go to state 27
    INSERT_C  shift, and go to state 28
    PRINTF    shift, and go to state 29
    IF        shift, and go to state 30
    FOR       shift, and go to state 31

    statement   go to state 59
    operations  go to state 35


State 48

    8 var_decl: ID $@3 . assign

    ASSIGNOP  shift, and go to state 60

    $default  reduce using rule 54 (assign)

    assign  go to state 61


State 49

   13 declarations: type $@5 identifier_list SEMICOLON .

    $default  reduce using rule 13 (declarations)


State 50

    3 identifier_list: identifier_list COMMA . $@1 vars_decl

    $default  reduce using rule 2 ($@1)

    $@1  go to state 62


State 51

    6 vars_decl: vars_decl COMMA . $@2 var_decl

    $default  reduce using rule 5 ($@2)

    $@2  go to state 63


State 52

   11 declarations: declarations type $@4 identifier_list SEMICOLON .

    $default  reduce using rule 11 (declarations)


State 53

   56 operations: ID ASSIGNOP $@18 . math SEMICOLON

    INT     shift, and go to state 64
    REALNO  shift, and go to state 65
    ID      shift, and go to state 66
    FUNC    shift, and go to state 67

    math  go to state 68
    item  go to state 69


State 54

   42 statement: PRINTF $@13 ROPAR . printf RCPAR SEMICOLON

    QUOTE  shift, and go to state 70

    printf  go to state 71


State 55

   40 statement: IF ROPAR $@11 . comparison_list RCPAR ROBRK $@12 optional_statements RCBRK

    ID  shift, and go to state 72

    comparison_list  go to state 73
    comparison       go to state 74


State 56

   37 statement: FOR ROPAR FOR_EXPRESSION . $@10 RCPAR ROBRK optional_statements RCBRK

    $default  reduce using rule 36 ($@10)

    $@10  go to state 75


State 57

   29 trans_state: ID .

    $default  reduce using rule 29 (trans_state)


State 58

   28 state: STATE_DEC ID $@8 ROBRK declarations $@9 optional_statements TRANSITION trans_state . SEMICOLON RCBRK

    SEMICOLON  shift, and go to state 76


State 59

   34 statement_list: statement_list SEMICOLON statement .

    $default  reduce using rule 34 (statement_list)


State 60

   53 assign: ASSIGNOP . $@17 math

    $default  reduce using rule 52 ($@17)

    $@17  go to state 77


State 61

    8 var_decl: ID $@3 assign .

    $default  reduce using rule 8 (var_decl)


State 62

    3 identifier_list: identifier_list COMMA $@1 . vars_decl

    ID  shift, and go to state 36

    $default  reduce using rule 9 (var_decl)

    vars_decl  go to state 78
    var_decl   go to state 39


State 63

    6 vars_decl: vars_decl COMMA $@2 . var_decl

    ID  shift, and go to state 36

    $default  reduce using rule 9 (var_decl)

    var_decl  go to state 79


State 64

   62 item: INT .

    $default  reduce using rule 62 (item)


State 65

   61 item: REALNO .

    $default  reduce using rule 61 (item)


State 66

   60 item: ID .

    $default  reduce using rule 60 (item)


State 67

   63 item: FUNC .

    $default  reduce using rule 63 (item)


State 68

   56 operations: ID ASSIGNOP $@18 math . SEMICOLON
   59 math: math . ADDOP $@19 item

    SEMICOLON  shift, and go to state 80
    ADDOP      shift, and go to state 81


State 69

   57 math: item .

    $default  reduce using rule 57 (math)


State 70

   45 printf: QUOTE . COMMA $@14 vars
   46       | QUOTE .

    COMMA  shift, and go to state 82

    $default  reduce using rule 46 (printf)


State 71

   42 statement: PRINTF $@13 ROPAR printf . RCPAR SEMICOLON

    RCPAR  shift, and go to state 83


State 72

   69 comparison: ID . RELOP INT
   70           | ID . RELOP ID
   71           | ID . RELOP FUNC

    RELOP  shift, and go to state 84


State 73

   40 statement: IF ROPAR $@11 comparison_list . RCPAR ROBRK $@12 optional_statements RCBRK
   66 comparison_list: comparison_list . AND $@20 comparison
   68                | comparison_list . OR $@21 comparison

    RCPAR  shift, and go to state 85
    AND    shift, and go to state 86
    OR     shift, and go to state 87


State 74

   64 comparison_list: comparison .

    $default  reduce using rule 64 (comparison_list)


State 75

   37 statement: FOR ROPAR FOR_EXPRESSION $@10 . RCPAR ROBRK optional_statements RCBRK

    RCPAR  shift, and go to state 88


State 76

   28 state: STATE_DEC ID $@8 ROBRK declarations $@9 optional_statements TRANSITION trans_state SEMICOLON . RCBRK

    RCBRK  shift, and go to state 89


State 77

   53 assign: ASSIGNOP $@17 . math

    INT     shift, and go to state 64
    REALNO  shift, and go to state 65
    ID      shift, and go to state 66
    FUNC    shift, and go to state 67

    math  go to state 90
    item  go to state 69


State 78

    3 identifier_list: identifier_list COMMA $@1 vars_decl .
    6 vars_decl: vars_decl . COMMA $@2 var_decl

    COMMA  shift, and go to state 51

    COMMA     [reduce using rule 3 (identifier_list)]
    $default  reduce using rule 3 (identifier_list)


State 79

    6 vars_decl: vars_decl COMMA $@2 var_decl .

    $default  reduce using rule 6 (vars_decl)


State 80

   56 operations: ID ASSIGNOP $@18 math SEMICOLON .

    $default  reduce using rule 56 (operations)


State 81

   59 math: math ADDOP . $@19 item

    $default  reduce using rule 58 ($@19)

    $@19  go to state 91


State 82

   45 printf: QUOTE COMMA . $@14 vars

    $default  reduce using rule 44 ($@14)

    $@14  go to state 92


State 83

   42 statement: PRINTF $@13 ROPAR printf RCPAR . SEMICOLON

    SEMICOLON  shift, and go to state 93


State 84

   69 comparison: ID RELOP . INT
   70           | ID RELOP . ID
   71           | ID RELOP . FUNC

    INT   shift, and go to state 94
    ID    shift, and go to state 95
    FUNC  shift, and go to state 96


State 85

   40 statement: IF ROPAR $@11 comparison_list RCPAR . ROBRK $@12 optional_statements RCBRK

    ROBRK  shift, and go to state 97


State 86

   66 comparison_list: comparison_list AND . $@20 comparison

    $default  reduce using rule 65 ($@20)

    $@20  go to state 98


State 87

   68 comparison_list: comparison_list OR . $@21 comparison

    $default  reduce using rule 67 ($@21)

    $@21  go to state 99


State 88

   37 statement: FOR ROPAR FOR_EXPRESSION $@10 RCPAR . ROBRK optional_statements RCBRK

    ROBRK  shift, and go to state 100


State 89

   28 state: STATE_DEC ID $@8 ROBRK declarations $@9 optional_statements TRANSITION trans_state SEMICOLON RCBRK .

    $default  reduce using rule 28 (state)


State 90

   53 assign: ASSIGNOP $@17 math .
   59 math: math . ADDOP $@19 item

    ADDOP  shift, and go to state 81

    $default  reduce using rule 53 (assign)


State 91

   59 math: math ADDOP $@19 . item

    INT     shift, and go to state 64
    REALNO  shift, and go to state 65
    ID      shift, and go to state 66
    FUNC    shift, and go to state 67

    item  go to state 101


State 92

   45 printf: QUOTE COMMA $@14 . vars

    ID  shift, and go to state 102

    vars  go to state 103
    var   go to state 104


State 93

   42 statement: PRINTF $@13 ROPAR printf RCPAR SEMICOLON .

    $default  reduce using rule 42 (statement)


State 94

   69 comparison: ID RELOP INT .

    $default  reduce using rule 69 (comparison)


State 95

   70 comparison: ID RELOP ID .

    $default  reduce using rule 70 (comparison)


State 96

   71 comparison: ID RELOP FUNC .

    $default  reduce using rule 71 (comparison)


State 97

   40 statement: IF ROPAR $@11 comparison_list RCPAR ROBRK . $@12 optional_statements RCBRK

    $default  reduce using rule 39 ($@12)

    $@12  go to state 105


State 98

   66 comparison_list: comparison_list AND $@20 . comparison

    ID  shift, and go to state 72

    comparison  go to state 106


State 99

   68 comparison_list: comparison_list OR $@21 . comparison

    ID  shift, and go to state 72

    comparison  go to state 107


State 100

   37 statement: FOR ROPAR FOR_EXPRESSION $@10 RCPAR ROBRK . optional_statements RCBRK

    ID        shift, and go to state 27
    INSERT_C  shift, and go to state 28
    PRINTF    shift, and go to state 29
    IF        shift, and go to state 30
    FOR       shift, and go to state 31

    ID        [reduce using rule 32 (optional_statements)]
    INSERT_C  [reduce using rule 32 (optional_statements)]
    PRINTF    [reduce using rule 32 (optional_statements)]
    IF        [reduce using rule 32 (optional_statements)]
    FOR       [reduce using rule 32 (optional_statements)]
    $default  reduce using rule 32 (optional_statements)

    optional_statements  go to state 108
    statement_list       go to state 33
    statement            go to state 34
    operations           go to state 35


State 101

   59 math: math ADDOP $@19 item .

    $default  reduce using rule 59 (math)


State 102

   51 var: ID . $@16 assign

    $default  reduce using rule 50 ($@16)

    $@16  go to state 109


State 103

   45 printf: QUOTE COMMA $@14 vars .
   49 vars: vars . COMMA $@15 var

    COMMA  shift, and go to state 110

    $default  reduce using rule 45 (printf)


State 104

   47 vars: var .

    $default  reduce using rule 47 (vars)


State 105

   40 statement: IF ROPAR $@11 comparison_list RCPAR ROBRK $@12 . optional_statements RCBRK

    ID        shift, and go to state 27
    INSERT_C  shift, and go to state 28
    PRINTF    shift, and go to state 29
    IF        shift, and go to state 30
    FOR       shift, and go to state 31

    ID        [reduce using rule 32 (optional_statements)]
    INSERT_C  [reduce using rule 32 (optional_statements)]
    PRINTF    [reduce using rule 32 (optional_statements)]
    IF        [reduce using rule 32 (optional_statements)]
    FOR       [reduce using rule 32 (optional_statements)]
    $default  reduce using rule 32 (optional_statements)

    optional_statements  go to state 111
    statement_list       go to state 33
    statement            go to state 34
    operations           go to state 35


State 106

   66 comparison_list: comparison_list AND $@20 comparison .

    $default  reduce using rule 66 (comparison_list)


State 107

   68 comparison_list: comparison_list OR $@21 comparison .

    $default  reduce using rule 68 (comparison_list)


State 108

   30 optional_statements: optional_statements . statement_list
   37 statement: FOR ROPAR FOR_EXPRESSION $@10 RCPAR ROBRK optional_statements . RCBRK

    ID        shift, and go to state 27
    INSERT_C  shift, and go to state 28
    PRINTF    shift, and go to state 29
    IF        shift, and go to state 30
    FOR       shift, and go to state 31
    RCBRK     shift, and go to state 112

    statement_list  go to state 46
    statement       go to state 34
    operations      go to state 35


State 109

   51 var: ID $@16 . assign

    ASSIGNOP  shift, and go to state 60

    $default  reduce using rule 54 (assign)

    assign  go to state 113


State 110

   49 vars: vars COMMA . $@15 var

    $default  reduce using rule 48 ($@15)

    $@15  go to state 114


State 111

   30 optional_statements: optional_statements . statement_list
   40 statement: IF ROPAR $@11 comparison_list RCPAR ROBRK $@12 optional_statements . RCBRK

    ID        shift, and go to state 27
    INSERT_C  shift, and go to state 28
    PRINTF    shift, and go to state 29
    IF        shift, and go to state 30
    FOR       shift, and go to state 31
    RCBRK     shift, and go to state 115

    statement_list  go to state 46
    statement       go to state 34
    operations      go to state 35


State 112

   37 statement: FOR ROPAR FOR_EXPRESSION $@10 RCPAR ROBRK optional_statements RCBRK .

    $default  reduce using rule 37 (statement)


State 113

   51 var: ID $@16 assign .

    $default  reduce using rule 51 (var)


State 114

   49 vars: vars COMMA $@15 . var

    ID  shift, and go to state 102

    var  go to state 116


State 115

   40 statement: IF ROPAR $@11 comparison_list RCPAR ROBRK $@12 optional_statements RCBRK .

    $default  reduce using rule 40 (statement)


State 116

   49 vars: vars COMMA $@15 var .

    $default  reduce using rule 49 (vars)
