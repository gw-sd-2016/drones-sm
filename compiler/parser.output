Nonterminals useless in grammar

   expression
   simple_expression
   term
   factor
   sign


Terminals unused in grammar

   PROGRAM
   VAR
   THEN
   ELSE
   DO
   DOT
   COLON
   BANG
   IF_EXPRESSION
   MULOP


Rules useless in grammar

   48 expression: %empty
   49           | simple_expression
   50           | simple_expression RELOP simple_expression

   51 simple_expression: term
   52                  | sign term
   53                  | simple_expression ADDOP term

   54 term: factor
   55     | term MULOP factor

   56 factor: ID
   57       | INT
   58       | ROPAR expression RCPAR

   59 sign: ADDOP


State 11 conflicts: 3 shift/reduce
State 18 conflicts: 3 shift/reduce
State 75 conflicts: 3 shift/reduce
State 77 conflicts: 3 shift/reduce


Grammar

    0 $accept: program $end

    1 identifier_list: var

    2 $@1: %empty

    3 identifier_list: identifier_list COMMA $@1 var

    4 var: ID

    5 $@2: %empty

    6 declarations: declarations type $@2 identifier_list SEMICOLON

    7 $@3: %empty

    8 declarations: type $@3 identifier_list SEMICOLON
    9             | %empty

   10 type: INTEGER
   11     | REAL
   12     | STRING

   13 $@4: %empty

   14 program: BEGINT $@4 states END

   15 states: state
   16       | states state

   17 $@5: %empty

   18 state: STATE_DEC ID ROBRK declarations $@5 optional_statements TRANSITION trans_state SEMICOLON RCBRK

   19 trans_state: ID

   20 optional_statements: optional_statements statement_list
   21                    | statement_list
   22                    | %empty

   23 statement_list: statement
   24               | statement_list SEMICOLON statement

   25 statement: operations

   26 $@6: %empty

   27 statement: FOR ROPAR FOR_EXPRESSION $@6 RCPAR ROBRK optional_statements RCBRK

   28 $@7: %empty

   29 $@8: %empty

   30 statement: IF ROPAR $@7 comparison_list RCPAR ROBRK $@8 optional_statements RCBRK

   31 $@9: %empty

   32 operations: ID ASSIGNOP $@9 math SEMICOLON

   33 math: item

   34 $@10: %empty

   35 math: math ADDOP $@10 item

   36 item: ID
   37     | REALNO
   38     | INT
   39     | FUNC

   40 comparison_list: comparison

   41 $@11: %empty

   42 comparison_list: comparison_list AND $@11 comparison

   43 $@12: %empty

   44 comparison_list: comparison_list OR $@12 comparison

   45 comparison: ID RELOP INT
   46           | ID RELOP ID
   47           | ID RELOP FUNC


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 38 45
REALNO (259) 37
ID (260) 4 18 19 32 36 45 46 47
FOR_EXPRESSION (261) 27
FUNC (262) 39 47
RELOP (263) 45 46 47
PROGRAM (264)
INTEGER (265) 10
REAL (266) 11
VAR (267)
BEGINT (268) 14
END (269) 14
STATE_DEC (270) 18
IF (271) 30
FOR (272) 27
THEN (273)
ELSE (274)
DO (275)
ROPAR (276) 27 30
RCPAR (277) 27 30
ROBRK (278) 18 27 30
RCBRK (279) 18 27 30
DOT (280)
SEMICOLON (281) 6 8 18 24 32
COMMA (282) 3
COLON (283)
TRANSITION (284) 18
ASSIGNOP (285) 32
AND (286) 42
OR (287) 44
STRING (288) 12
BANG (289)
IF_EXPRESSION (290)
MULOP (291)
ADDOP (292) 35


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
identifier_list (39)
    on left: 1 3, on right: 3 6 8
$@1 (40)
    on left: 2, on right: 3
var (41)
    on left: 4, on right: 1 3
declarations (42)
    on left: 6 8 9, on right: 6 18
$@2 (43)
    on left: 5, on right: 6
$@3 (44)
    on left: 7, on right: 8
type (45)
    on left: 10 11 12, on right: 6 8
program (46)
    on left: 14, on right: 0
$@4 (47)
    on left: 13, on right: 14
states (48)
    on left: 15 16, on right: 14 16
state (49)
    on left: 18, on right: 15 16
$@5 (50)
    on left: 17, on right: 18
trans_state (51)
    on left: 19, on right: 18
optional_statements (52)
    on left: 20 21 22, on right: 18 20 27 30
statement_list (53)
    on left: 23 24, on right: 20 21 24
statement (54)
    on left: 25 27 30, on right: 23 24
$@6 (55)
    on left: 26, on right: 27
$@7 (56)
    on left: 28, on right: 30
$@8 (57)
    on left: 29, on right: 30
operations (58)
    on left: 32, on right: 25
$@9 (59)
    on left: 31, on right: 32
math (60)
    on left: 33 35, on right: 32 35
$@10 (61)
    on left: 34, on right: 35
item (62)
    on left: 36 37 38 39, on right: 33 35
comparison_list (63)
    on left: 40 42 44, on right: 30 42 44
$@11 (64)
    on left: 41, on right: 42
$@12 (65)
    on left: 43, on right: 44
comparison (66)
    on left: 45 46 47, on right: 40 42 44


State 0

    0 $accept: . program $end

    BEGINT  shift, and go to state 1

    program  go to state 2


State 1

   14 program: BEGINT . $@4 states END

    $default  reduce using rule 13 ($@4)

    $@4  go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

   14 program: BEGINT $@4 . states END

    STATE_DEC  shift, and go to state 5

    states  go to state 6
    state   go to state 7


State 4

    0 $accept: program $end .

    $default  accept


State 5

   18 state: STATE_DEC . ID ROBRK declarations $@5 optional_statements TRANSITION trans_state SEMICOLON RCBRK

    ID  shift, and go to state 8


State 6

   14 program: BEGINT $@4 states . END
   16 states: states . state

    END        shift, and go to state 9
    STATE_DEC  shift, and go to state 5

    state  go to state 10


State 7

   15 states: state .

    $default  reduce using rule 15 (states)


State 8

   18 state: STATE_DEC ID . ROBRK declarations $@5 optional_statements TRANSITION trans_state SEMICOLON RCBRK

    ROBRK  shift, and go to state 11


State 9

   14 program: BEGINT $@4 states END .

    $default  reduce using rule 14 (program)


State 10

   16 states: states state .

    $default  reduce using rule 16 (states)


State 11

   18 state: STATE_DEC ID ROBRK . declarations $@5 optional_statements TRANSITION trans_state SEMICOLON RCBRK

    INTEGER  shift, and go to state 12
    REAL     shift, and go to state 13
    STRING   shift, and go to state 14

    INTEGER   [reduce using rule 9 (declarations)]
    REAL      [reduce using rule 9 (declarations)]
    STRING    [reduce using rule 9 (declarations)]
    $default  reduce using rule 9 (declarations)

    declarations  go to state 15
    type          go to state 16


State 12

   10 type: INTEGER .

    $default  reduce using rule 10 (type)


State 13

   11 type: REAL .

    $default  reduce using rule 11 (type)


State 14

   12 type: STRING .

    $default  reduce using rule 12 (type)


State 15

    6 declarations: declarations . type $@2 identifier_list SEMICOLON
   18 state: STATE_DEC ID ROBRK declarations . $@5 optional_statements TRANSITION trans_state SEMICOLON RCBRK

    INTEGER  shift, and go to state 12
    REAL     shift, and go to state 13
    STRING   shift, and go to state 14

    $default  reduce using rule 17 ($@5)

    type  go to state 17
    $@5   go to state 18


State 16

    8 declarations: type . $@3 identifier_list SEMICOLON

    $default  reduce using rule 7 ($@3)

    $@3  go to state 19


State 17

    6 declarations: declarations type . $@2 identifier_list SEMICOLON

    $default  reduce using rule 5 ($@2)

    $@2  go to state 20


State 18

   18 state: STATE_DEC ID ROBRK declarations $@5 . optional_statements TRANSITION trans_state SEMICOLON RCBRK

    ID   shift, and go to state 21
    IF   shift, and go to state 22
    FOR  shift, and go to state 23

    ID        [reduce using rule 22 (optional_statements)]
    IF        [reduce using rule 22 (optional_statements)]
    FOR       [reduce using rule 22 (optional_statements)]
    $default  reduce using rule 22 (optional_statements)

    optional_statements  go to state 24
    statement_list       go to state 25
    statement            go to state 26
    operations           go to state 27


State 19

    8 declarations: type $@3 . identifier_list SEMICOLON

    ID  shift, and go to state 28

    identifier_list  go to state 29
    var              go to state 30


State 20

    6 declarations: declarations type $@2 . identifier_list SEMICOLON

    ID  shift, and go to state 28

    identifier_list  go to state 31
    var              go to state 30


State 21

   32 operations: ID . ASSIGNOP $@9 math SEMICOLON

    ASSIGNOP  shift, and go to state 32


State 22

   30 statement: IF . ROPAR $@7 comparison_list RCPAR ROBRK $@8 optional_statements RCBRK

    ROPAR  shift, and go to state 33


State 23

   27 statement: FOR . ROPAR FOR_EXPRESSION $@6 RCPAR ROBRK optional_statements RCBRK

    ROPAR  shift, and go to state 34


State 24

   18 state: STATE_DEC ID ROBRK declarations $@5 optional_statements . TRANSITION trans_state SEMICOLON RCBRK
   20 optional_statements: optional_statements . statement_list

    ID          shift, and go to state 21
    IF          shift, and go to state 22
    FOR         shift, and go to state 23
    TRANSITION  shift, and go to state 35

    statement_list  go to state 36
    statement       go to state 26
    operations      go to state 27


State 25

   21 optional_statements: statement_list .
   24 statement_list: statement_list . SEMICOLON statement

    SEMICOLON  shift, and go to state 37

    $default  reduce using rule 21 (optional_statements)


State 26

   23 statement_list: statement .

    $default  reduce using rule 23 (statement_list)


State 27

   25 statement: operations .

    $default  reduce using rule 25 (statement)


State 28

    4 var: ID .

    $default  reduce using rule 4 (var)


State 29

    3 identifier_list: identifier_list . COMMA $@1 var
    8 declarations: type $@3 identifier_list . SEMICOLON

    SEMICOLON  shift, and go to state 38
    COMMA      shift, and go to state 39


State 30

    1 identifier_list: var .

    $default  reduce using rule 1 (identifier_list)


State 31

    3 identifier_list: identifier_list . COMMA $@1 var
    6 declarations: declarations type $@2 identifier_list . SEMICOLON

    SEMICOLON  shift, and go to state 40
    COMMA      shift, and go to state 39


State 32

   32 operations: ID ASSIGNOP . $@9 math SEMICOLON

    $default  reduce using rule 31 ($@9)

    $@9  go to state 41


State 33

   30 statement: IF ROPAR . $@7 comparison_list RCPAR ROBRK $@8 optional_statements RCBRK

    $default  reduce using rule 28 ($@7)

    $@7  go to state 42


State 34

   27 statement: FOR ROPAR . FOR_EXPRESSION $@6 RCPAR ROBRK optional_statements RCBRK

    FOR_EXPRESSION  shift, and go to state 43


State 35

   18 state: STATE_DEC ID ROBRK declarations $@5 optional_statements TRANSITION . trans_state SEMICOLON RCBRK

    ID  shift, and go to state 44

    trans_state  go to state 45


State 36

   20 optional_statements: optional_statements statement_list .
   24 statement_list: statement_list . SEMICOLON statement

    SEMICOLON  shift, and go to state 37

    $default  reduce using rule 20 (optional_statements)


State 37

   24 statement_list: statement_list SEMICOLON . statement

    ID   shift, and go to state 21
    IF   shift, and go to state 22
    FOR  shift, and go to state 23

    statement   go to state 46
    operations  go to state 27


State 38

    8 declarations: type $@3 identifier_list SEMICOLON .

    $default  reduce using rule 8 (declarations)


State 39

    3 identifier_list: identifier_list COMMA . $@1 var

    $default  reduce using rule 2 ($@1)

    $@1  go to state 47


State 40

    6 declarations: declarations type $@2 identifier_list SEMICOLON .

    $default  reduce using rule 6 (declarations)


State 41

   32 operations: ID ASSIGNOP $@9 . math SEMICOLON

    INT     shift, and go to state 48
    REALNO  shift, and go to state 49
    ID      shift, and go to state 50
    FUNC    shift, and go to state 51

    math  go to state 52
    item  go to state 53


State 42

   30 statement: IF ROPAR $@7 . comparison_list RCPAR ROBRK $@8 optional_statements RCBRK

    ID  shift, and go to state 54

    comparison_list  go to state 55
    comparison       go to state 56


State 43

   27 statement: FOR ROPAR FOR_EXPRESSION . $@6 RCPAR ROBRK optional_statements RCBRK

    $default  reduce using rule 26 ($@6)

    $@6  go to state 57


State 44

   19 trans_state: ID .

    $default  reduce using rule 19 (trans_state)


State 45

   18 state: STATE_DEC ID ROBRK declarations $@5 optional_statements TRANSITION trans_state . SEMICOLON RCBRK

    SEMICOLON  shift, and go to state 58


State 46

   24 statement_list: statement_list SEMICOLON statement .

    $default  reduce using rule 24 (statement_list)


State 47

    3 identifier_list: identifier_list COMMA $@1 . var

    ID  shift, and go to state 28

    var  go to state 59


State 48

   38 item: INT .

    $default  reduce using rule 38 (item)


State 49

   37 item: REALNO .

    $default  reduce using rule 37 (item)


State 50

   36 item: ID .

    $default  reduce using rule 36 (item)


State 51

   39 item: FUNC .

    $default  reduce using rule 39 (item)


State 52

   32 operations: ID ASSIGNOP $@9 math . SEMICOLON
   35 math: math . ADDOP $@10 item

    SEMICOLON  shift, and go to state 60
    ADDOP      shift, and go to state 61


State 53

   33 math: item .

    $default  reduce using rule 33 (math)


State 54

   45 comparison: ID . RELOP INT
   46           | ID . RELOP ID
   47           | ID . RELOP FUNC

    RELOP  shift, and go to state 62


State 55

   30 statement: IF ROPAR $@7 comparison_list . RCPAR ROBRK $@8 optional_statements RCBRK
   42 comparison_list: comparison_list . AND $@11 comparison
   44                | comparison_list . OR $@12 comparison

    RCPAR  shift, and go to state 63
    AND    shift, and go to state 64
    OR     shift, and go to state 65


State 56

   40 comparison_list: comparison .

    $default  reduce using rule 40 (comparison_list)


State 57

   27 statement: FOR ROPAR FOR_EXPRESSION $@6 . RCPAR ROBRK optional_statements RCBRK

    RCPAR  shift, and go to state 66


State 58

   18 state: STATE_DEC ID ROBRK declarations $@5 optional_statements TRANSITION trans_state SEMICOLON . RCBRK

    RCBRK  shift, and go to state 67


State 59

    3 identifier_list: identifier_list COMMA $@1 var .

    $default  reduce using rule 3 (identifier_list)


State 60

   32 operations: ID ASSIGNOP $@9 math SEMICOLON .

    $default  reduce using rule 32 (operations)


State 61

   35 math: math ADDOP . $@10 item

    $default  reduce using rule 34 ($@10)

    $@10  go to state 68


State 62

   45 comparison: ID RELOP . INT
   46           | ID RELOP . ID
   47           | ID RELOP . FUNC

    INT   shift, and go to state 69
    ID    shift, and go to state 70
    FUNC  shift, and go to state 71


State 63

   30 statement: IF ROPAR $@7 comparison_list RCPAR . ROBRK $@8 optional_statements RCBRK

    ROBRK  shift, and go to state 72


State 64

   42 comparison_list: comparison_list AND . $@11 comparison

    $default  reduce using rule 41 ($@11)

    $@11  go to state 73


State 65

   44 comparison_list: comparison_list OR . $@12 comparison

    $default  reduce using rule 43 ($@12)

    $@12  go to state 74


State 66

   27 statement: FOR ROPAR FOR_EXPRESSION $@6 RCPAR . ROBRK optional_statements RCBRK

    ROBRK  shift, and go to state 75


State 67

   18 state: STATE_DEC ID ROBRK declarations $@5 optional_statements TRANSITION trans_state SEMICOLON RCBRK .

    $default  reduce using rule 18 (state)


State 68

   35 math: math ADDOP $@10 . item

    INT     shift, and go to state 48
    REALNO  shift, and go to state 49
    ID      shift, and go to state 50
    FUNC    shift, and go to state 51

    item  go to state 76


State 69

   45 comparison: ID RELOP INT .

    $default  reduce using rule 45 (comparison)


State 70

   46 comparison: ID RELOP ID .

    $default  reduce using rule 46 (comparison)


State 71

   47 comparison: ID RELOP FUNC .

    $default  reduce using rule 47 (comparison)


State 72

   30 statement: IF ROPAR $@7 comparison_list RCPAR ROBRK . $@8 optional_statements RCBRK

    $default  reduce using rule 29 ($@8)

    $@8  go to state 77


State 73

   42 comparison_list: comparison_list AND $@11 . comparison

    ID  shift, and go to state 54

    comparison  go to state 78


State 74

   44 comparison_list: comparison_list OR $@12 . comparison

    ID  shift, and go to state 54

    comparison  go to state 79


State 75

   27 statement: FOR ROPAR FOR_EXPRESSION $@6 RCPAR ROBRK . optional_statements RCBRK

    ID   shift, and go to state 21
    IF   shift, and go to state 22
    FOR  shift, and go to state 23

    ID        [reduce using rule 22 (optional_statements)]
    IF        [reduce using rule 22 (optional_statements)]
    FOR       [reduce using rule 22 (optional_statements)]
    $default  reduce using rule 22 (optional_statements)

    optional_statements  go to state 80
    statement_list       go to state 25
    statement            go to state 26
    operations           go to state 27


State 76

   35 math: math ADDOP $@10 item .

    $default  reduce using rule 35 (math)


State 77

   30 statement: IF ROPAR $@7 comparison_list RCPAR ROBRK $@8 . optional_statements RCBRK

    ID   shift, and go to state 21
    IF   shift, and go to state 22
    FOR  shift, and go to state 23

    ID        [reduce using rule 22 (optional_statements)]
    IF        [reduce using rule 22 (optional_statements)]
    FOR       [reduce using rule 22 (optional_statements)]
    $default  reduce using rule 22 (optional_statements)

    optional_statements  go to state 81
    statement_list       go to state 25
    statement            go to state 26
    operations           go to state 27


State 78

   42 comparison_list: comparison_list AND $@11 comparison .

    $default  reduce using rule 42 (comparison_list)


State 79

   44 comparison_list: comparison_list OR $@12 comparison .

    $default  reduce using rule 44 (comparison_list)


State 80

   20 optional_statements: optional_statements . statement_list
   27 statement: FOR ROPAR FOR_EXPRESSION $@6 RCPAR ROBRK optional_statements . RCBRK

    ID     shift, and go to state 21
    IF     shift, and go to state 22
    FOR    shift, and go to state 23
    RCBRK  shift, and go to state 82

    statement_list  go to state 36
    statement       go to state 26
    operations      go to state 27


State 81

   20 optional_statements: optional_statements . statement_list
   30 statement: IF ROPAR $@7 comparison_list RCPAR ROBRK $@8 optional_statements . RCBRK

    ID     shift, and go to state 21
    IF     shift, and go to state 22
    FOR    shift, and go to state 23
    RCBRK  shift, and go to state 83

    statement_list  go to state 36
    statement       go to state 26
    operations      go to state 27


State 82

   27 statement: FOR ROPAR FOR_EXPRESSION $@6 RCPAR ROBRK optional_statements RCBRK .

    $default  reduce using rule 27 (statement)


State 83

   30 statement: IF ROPAR $@7 comparison_list RCPAR ROBRK $@8 optional_statements RCBRK .

    $default  reduce using rule 30 (statement)
