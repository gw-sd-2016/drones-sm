Terminals unused in grammar

   FOR_EXPRESSION
   PROGRAM
   VAR
   GLOBALD
   THEN
   ELSE
   DO
   DOT
   COLON
   BANG
   IF_EXPRESSION
   MULOP


State 11 conflicts: 5 shift/reduce
State 34 conflicts: 1 shift/reduce
State 64 conflicts: 1 shift/reduce
State 73 conflicts: 3 shift/reduce
State 79 conflicts: 5 shift/reduce, 1 reduce/reduce
State 92 conflicts: 1 shift/reduce
State 95 conflicts: 1 shift/reduce
State 139 conflicts: 1 shift/reduce
State 166 conflicts: 5 shift/reduce, 1 reduce/reduce
State 189 conflicts: 5 shift/reduce, 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 G_identifier_list: G_vars_decl

    2 $@1: %empty

    3 G_identifier_list: G_identifier_list COMMA $@1 G_vars_decl

    4 G_vars_decl: G_var_decl

    5 $@2: %empty

    6 G_vars_decl: G_vars_decl COMMA $@2 G_var_decl

    7 $@3: %empty

    8 G_var_decl: ID $@3 assign_var
    9           | %empty

   10 identifier_list: vars_decl

   11 $@4: %empty

   12 identifier_list: identifier_list COMMA $@4 vars_decl

   13 vars_decl: var_decl

   14 $@5: %empty

   15 vars_decl: vars_decl COMMA $@5 var_decl

   16 $@6: %empty

   17 var_decl: ID $@6 assign_var
   18         | %empty

   19 $@7: %empty

   20 assign_var: ASSIGNOP $@7 math_var
   21           | %empty

   22 math_var: item_var

   23 $@8: %empty

   24 math_var: math_var ADDOP $@8 item_var

   25 item_var: ID
   26         | REALNO
   27         | INT
   28         | FUNC

   29 $@9: %empty

   30 declarations: declarations type $@9 identifier_list SEMICOLON

   31 $@10: %empty

   32 declarations: type $@10 identifier_list SEMICOLON
   33             | %empty

   34 $@11: %empty

   35 G_declarations: G_declarations type $@11 G_identifier_list SEMICOLON

   36 $@12: %empty

   37 G_declarations: type $@12 G_identifier_list SEMICOLON

   38 $@13: %empty

   39 G_declarations: G_declarations VOLATILE type $@13 G_identifier_list SEMICOLON

   40 $@14: %empty

   41 G_declarations: VOLATILE type $@14 G_identifier_list SEMICOLON

   42 $@15: %empty

   43 G_declarations: G_declarations NOBACKUP type $@15 G_identifier_list SEMICOLON

   44 $@16: %empty

   45 G_declarations: NOBACKUP type $@16 G_identifier_list SEMICOLON
   46               | %empty

   47 type: INTEGER
   48     | REAL
   49     | STRING

   50 $@17: %empty

   51 $@18: %empty

   52 $@19: %empty

   53 $@20: %empty

   54 program: $@17 includes start_state $@18 G_declarations $@19 BEGINT $@20 states END

   55 start_state: START_STATE ID
   56            | %empty

   57 includes: include
   58         | includes include

   59 include: INCLUDE

   60 states: state
   61       | states state

   62 $@21: %empty

   63 $@22: %empty

   64 $@23: %empty

   65 state: STATE_DEC ID $@21 ROBRK declarations $@22 optional_statements $@23 RCBRK

   66 trans_state: ID

   67 optional_statements: optional_statements statement_list
   68                    | statement_list
   69                    | %empty

   70 statement_list: statement
   71               | statement_list SEMICOLON statement

   72 statement: operations

   73 $@24: %empty

   74 statement: $@24 transition_statement

   75 $@25: %empty

   76 $@26: %empty

   77 $@27: %empty

   78 statement: FOR ROPAR ID ASSIGNOP $@25 item SEMICOLON ID RELOP $@26 item SEMICOLON ID PPMM $@27 RCPAR ROBRK optional_statements RCBRK

   79 $@28: %empty

   80 $@29: %empty

   81 statement: IF ROPAR $@28 comparison_list RCPAR ROBRK $@29 optional_statements RCBRK

   82 $@30: %empty

   83 statement: PRINTF $@30 ROPAR printf RCPAR SEMICOLON
   84          | INSERT_C

   85 transition_statement: TRANSITION trans_state SEMICOLON

   86 $@31: %empty

   87 printf: QUOTE COMMA $@31 vars_print
   88       | QUOTE

   89 vars_print: var_print

   90 $@32: %empty

   91 vars_print: vars_print COMMA $@32 var_print

   92 $@33: %empty

   93 var_print: ID $@33 assign

   94 $@34: %empty

   95 assign: ASSIGNOP $@34 math
   96       | %empty

   97 $@35: %empty

   98 operations: ID ASSIGNOP $@35 math SEMICOLON

   99 $@36: %empty

  100 operations: operations ID ASSIGNOP $@36 math SEMICOLON

  101 math: item

  102 $@37: %empty

  103 math: math ADDOP $@37 item

  104 item: ID
  105     | REALNO
  106     | INT
  107     | FUNC

  108 comparison_list: comparison

  109 $@38: %empty

  110 comparison_list: comparison_list AND $@38 comparison

  111 $@39: %empty

  112 comparison_list: comparison_list OR $@39 comparison

  113 comparison: ID RELOP INT
  114           | ID RELOP ID
  115           | ID RELOP FUNC


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 27 106 113
REALNO (259) 26 105
ID (260) 8 17 25 55 65 66 78 93 98 100 104 113 114 115
FOR_EXPRESSION (261)
INSERT_C (262) 84
FUNC (263) 28 107 115
RELOP (264) 78 113 114 115
PRINTF (265) 83
QUOTE (266) 87 88
INCLUDE (267) 59
PPMM (268) 78
PROGRAM (269)
NOBACKUP (270) 43 45
VOLATILE (271) 39 41
INTEGER (272) 47
REAL (273) 48
VAR (274)
GLOBALD (275)
START_STATE (276) 55
BEGINT (277) 54
END (278) 54
STATE_DEC (279) 65
IF (280) 81
FOR (281) 78
THEN (282)
ELSE (283)
DO (284)
ROPAR (285) 78 81 83
RCPAR (286) 78 81 83
ROBRK (287) 65 78 81
RCBRK (288) 65 78 81
DOT (289)
SEMICOLON (290) 30 32 35 37 39 41 43 45 71 78 83 85 98 100
COMMA (291) 3 6 12 15 87 91
COLON (292)
TRANSITION (293) 85
ASSIGNOP (294) 20 78 95 98 100
AND (295) 110
OR (296) 112
STRING (297) 49
BANG (298)
IF_EXPRESSION (299)
MULOP (300)
ADDOP (301) 24 103


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
G_identifier_list (48)
    on left: 1 3, on right: 3 35 37 39 41 43 45
$@1 (49)
    on left: 2, on right: 3
G_vars_decl (50)
    on left: 4 6, on right: 1 3 6
$@2 (51)
    on left: 5, on right: 6
G_var_decl (52)
    on left: 8 9, on right: 4 6
$@3 (53)
    on left: 7, on right: 8
identifier_list (54)
    on left: 10 12, on right: 12 30 32
$@4 (55)
    on left: 11, on right: 12
vars_decl (56)
    on left: 13 15, on right: 10 12 15
$@5 (57)
    on left: 14, on right: 15
var_decl (58)
    on left: 17 18, on right: 13 15
$@6 (59)
    on left: 16, on right: 17
assign_var (60)
    on left: 20 21, on right: 8 17
$@7 (61)
    on left: 19, on right: 20
math_var (62)
    on left: 22 24, on right: 20 24
$@8 (63)
    on left: 23, on right: 24
item_var (64)
    on left: 25 26 27 28, on right: 22 24
declarations (65)
    on left: 30 32 33, on right: 30 65
$@9 (66)
    on left: 29, on right: 30
$@10 (67)
    on left: 31, on right: 32
G_declarations (68)
    on left: 35 37 39 41 43 45 46, on right: 35 39 43 54
$@11 (69)
    on left: 34, on right: 35
$@12 (70)
    on left: 36, on right: 37
$@13 (71)
    on left: 38, on right: 39
$@14 (72)
    on left: 40, on right: 41
$@15 (73)
    on left: 42, on right: 43
$@16 (74)
    on left: 44, on right: 45
type (75)
    on left: 47 48 49, on right: 30 32 35 37 39 41 43 45
program (76)
    on left: 54, on right: 0
$@17 (77)
    on left: 50, on right: 54
$@18 (78)
    on left: 51, on right: 54
$@19 (79)
    on left: 52, on right: 54
$@20 (80)
    on left: 53, on right: 54
start_state (81)
    on left: 55 56, on right: 54
includes (82)
    on left: 57 58, on right: 54 58
include (83)
    on left: 59, on right: 57 58
states (84)
    on left: 60 61, on right: 54 61
state (85)
    on left: 65, on right: 60 61
$@21 (86)
    on left: 62, on right: 65
$@22 (87)
    on left: 63, on right: 65
$@23 (88)
    on left: 64, on right: 65
trans_state (89)
    on left: 66, on right: 85
optional_statements (90)
    on left: 67 68 69, on right: 65 67 78 81
statement_list (91)
    on left: 70 71, on right: 67 68 71
statement (92)
    on left: 72 74 78 81 83 84, on right: 70 71
$@24 (93)
    on left: 73, on right: 74
$@25 (94)
    on left: 75, on right: 78
$@26 (95)
    on left: 76, on right: 78
$@27 (96)
    on left: 77, on right: 78
$@28 (97)
    on left: 79, on right: 81
$@29 (98)
    on left: 80, on right: 81
$@30 (99)
    on left: 82, on right: 83
transition_statement (100)
    on left: 85, on right: 74
printf (101)
    on left: 87 88, on right: 83
$@31 (102)
    on left: 86, on right: 87
vars_print (103)
    on left: 89 91, on right: 87 91
$@32 (104)
    on left: 90, on right: 91
var_print (105)
    on left: 93, on right: 89 91
$@33 (106)
    on left: 92, on right: 93
assign (107)
    on left: 95 96, on right: 93
$@34 (108)
    on left: 94, on right: 95
operations (109)
    on left: 98 100, on right: 72 100
$@35 (110)
    on left: 97, on right: 98
$@36 (111)
    on left: 99, on right: 100
math (112)
    on left: 101 103, on right: 95 98 100 103
$@37 (113)
    on left: 102, on right: 103
item (114)
    on left: 104 105 106 107, on right: 78 101 103
comparison_list (115)
    on left: 108 110 112, on right: 81 110 112
$@38 (116)
    on left: 109, on right: 110
$@39 (117)
    on left: 111, on right: 112
comparison (118)
    on left: 113 114 115, on right: 108 110 112


State 0

    0 $accept: . program $end

    $default  reduce using rule 50 ($@17)

    program  go to state 1
    $@17     go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

   54 program: $@17 . includes start_state $@18 G_declarations $@19 BEGINT $@20 states END

    INCLUDE  shift, and go to state 4

    includes  go to state 5
    include   go to state 6


State 3

    0 $accept: program $end .

    $default  accept


State 4

   59 include: INCLUDE .

    $default  reduce using rule 59 (include)


State 5

   54 program: $@17 includes . start_state $@18 G_declarations $@19 BEGINT $@20 states END
   58 includes: includes . include

    INCLUDE      shift, and go to state 4
    START_STATE  shift, and go to state 7

    $default  reduce using rule 56 (start_state)

    start_state  go to state 8
    include      go to state 9


State 6

   57 includes: include .

    $default  reduce using rule 57 (includes)


State 7

   55 start_state: START_STATE . ID

    ID  shift, and go to state 10


State 8

   54 program: $@17 includes start_state . $@18 G_declarations $@19 BEGINT $@20 states END

    $default  reduce using rule 51 ($@18)

    $@18  go to state 11


State 9

   58 includes: includes include .

    $default  reduce using rule 58 (includes)


State 10

   55 start_state: START_STATE ID .

    $default  reduce using rule 55 (start_state)


State 11

   54 program: $@17 includes start_state $@18 . G_declarations $@19 BEGINT $@20 states END

    NOBACKUP  shift, and go to state 12
    VOLATILE  shift, and go to state 13
    INTEGER   shift, and go to state 14
    REAL      shift, and go to state 15
    STRING    shift, and go to state 16

    NOBACKUP  [reduce using rule 46 (G_declarations)]
    VOLATILE  [reduce using rule 46 (G_declarations)]
    INTEGER   [reduce using rule 46 (G_declarations)]
    REAL      [reduce using rule 46 (G_declarations)]
    STRING    [reduce using rule 46 (G_declarations)]
    $default  reduce using rule 46 (G_declarations)

    G_declarations  go to state 17
    type            go to state 18


State 12

   45 G_declarations: NOBACKUP . type $@16 G_identifier_list SEMICOLON

    INTEGER  shift, and go to state 14
    REAL     shift, and go to state 15
    STRING   shift, and go to state 16

    type  go to state 19


State 13

   41 G_declarations: VOLATILE . type $@14 G_identifier_list SEMICOLON

    INTEGER  shift, and go to state 14
    REAL     shift, and go to state 15
    STRING   shift, and go to state 16

    type  go to state 20


State 14

   47 type: INTEGER .

    $default  reduce using rule 47 (type)


State 15

   48 type: REAL .

    $default  reduce using rule 48 (type)


State 16

   49 type: STRING .

    $default  reduce using rule 49 (type)


State 17

   35 G_declarations: G_declarations . type $@11 G_identifier_list SEMICOLON
   39               | G_declarations . VOLATILE type $@13 G_identifier_list SEMICOLON
   43               | G_declarations . NOBACKUP type $@15 G_identifier_list SEMICOLON
   54 program: $@17 includes start_state $@18 G_declarations . $@19 BEGINT $@20 states END

    NOBACKUP  shift, and go to state 21
    VOLATILE  shift, and go to state 22
    INTEGER   shift, and go to state 14
    REAL      shift, and go to state 15
    STRING    shift, and go to state 16

    $default  reduce using rule 52 ($@19)

    type  go to state 23
    $@19  go to state 24


State 18

   37 G_declarations: type . $@12 G_identifier_list SEMICOLON

    $default  reduce using rule 36 ($@12)

    $@12  go to state 25


State 19

   45 G_declarations: NOBACKUP type . $@16 G_identifier_list SEMICOLON

    $default  reduce using rule 44 ($@16)

    $@16  go to state 26


State 20

   41 G_declarations: VOLATILE type . $@14 G_identifier_list SEMICOLON

    $default  reduce using rule 40 ($@14)

    $@14  go to state 27


State 21

   43 G_declarations: G_declarations NOBACKUP . type $@15 G_identifier_list SEMICOLON

    INTEGER  shift, and go to state 14
    REAL     shift, and go to state 15
    STRING   shift, and go to state 16

    type  go to state 28


State 22

   39 G_declarations: G_declarations VOLATILE . type $@13 G_identifier_list SEMICOLON

    INTEGER  shift, and go to state 14
    REAL     shift, and go to state 15
    STRING   shift, and go to state 16

    type  go to state 29


State 23

   35 G_declarations: G_declarations type . $@11 G_identifier_list SEMICOLON

    $default  reduce using rule 34 ($@11)

    $@11  go to state 30


State 24

   54 program: $@17 includes start_state $@18 G_declarations $@19 . BEGINT $@20 states END

    BEGINT  shift, and go to state 31


State 25

   37 G_declarations: type $@12 . G_identifier_list SEMICOLON

    ID  shift, and go to state 32

    $default  reduce using rule 9 (G_var_decl)

    G_identifier_list  go to state 33
    G_vars_decl        go to state 34
    G_var_decl         go to state 35


State 26

   45 G_declarations: NOBACKUP type $@16 . G_identifier_list SEMICOLON

    ID  shift, and go to state 32

    $default  reduce using rule 9 (G_var_decl)

    G_identifier_list  go to state 36
    G_vars_decl        go to state 34
    G_var_decl         go to state 35


State 27

   41 G_declarations: VOLATILE type $@14 . G_identifier_list SEMICOLON

    ID  shift, and go to state 32

    $default  reduce using rule 9 (G_var_decl)

    G_identifier_list  go to state 37
    G_vars_decl        go to state 34
    G_var_decl         go to state 35


State 28

   43 G_declarations: G_declarations NOBACKUP type . $@15 G_identifier_list SEMICOLON

    $default  reduce using rule 42 ($@15)

    $@15  go to state 38


State 29

   39 G_declarations: G_declarations VOLATILE type . $@13 G_identifier_list SEMICOLON

    $default  reduce using rule 38 ($@13)

    $@13  go to state 39


State 30

   35 G_declarations: G_declarations type $@11 . G_identifier_list SEMICOLON

    ID  shift, and go to state 32

    $default  reduce using rule 9 (G_var_decl)

    G_identifier_list  go to state 40
    G_vars_decl        go to state 34
    G_var_decl         go to state 35


State 31

   54 program: $@17 includes start_state $@18 G_declarations $@19 BEGINT . $@20 states END

    $default  reduce using rule 53 ($@20)

    $@20  go to state 41


State 32

    8 G_var_decl: ID . $@3 assign_var

    $default  reduce using rule 7 ($@3)

    $@3  go to state 42


State 33

    3 G_identifier_list: G_identifier_list . COMMA $@1 G_vars_decl
   37 G_declarations: type $@12 G_identifier_list . SEMICOLON

    SEMICOLON  shift, and go to state 43
    COMMA      shift, and go to state 44


State 34

    1 G_identifier_list: G_vars_decl .
    6 G_vars_decl: G_vars_decl . COMMA $@2 G_var_decl

    COMMA  shift, and go to state 45

    COMMA     [reduce using rule 1 (G_identifier_list)]
    $default  reduce using rule 1 (G_identifier_list)


State 35

    4 G_vars_decl: G_var_decl .

    $default  reduce using rule 4 (G_vars_decl)


State 36

    3 G_identifier_list: G_identifier_list . COMMA $@1 G_vars_decl
   45 G_declarations: NOBACKUP type $@16 G_identifier_list . SEMICOLON

    SEMICOLON  shift, and go to state 46
    COMMA      shift, and go to state 44


State 37

    3 G_identifier_list: G_identifier_list . COMMA $@1 G_vars_decl
   41 G_declarations: VOLATILE type $@14 G_identifier_list . SEMICOLON

    SEMICOLON  shift, and go to state 47
    COMMA      shift, and go to state 44


State 38

   43 G_declarations: G_declarations NOBACKUP type $@15 . G_identifier_list SEMICOLON

    ID  shift, and go to state 32

    $default  reduce using rule 9 (G_var_decl)

    G_identifier_list  go to state 48
    G_vars_decl        go to state 34
    G_var_decl         go to state 35


State 39

   39 G_declarations: G_declarations VOLATILE type $@13 . G_identifier_list SEMICOLON

    ID  shift, and go to state 32

    $default  reduce using rule 9 (G_var_decl)

    G_identifier_list  go to state 49
    G_vars_decl        go to state 34
    G_var_decl         go to state 35


State 40

    3 G_identifier_list: G_identifier_list . COMMA $@1 G_vars_decl
   35 G_declarations: G_declarations type $@11 G_identifier_list . SEMICOLON

    SEMICOLON  shift, and go to state 50
    COMMA      shift, and go to state 44


State 41

   54 program: $@17 includes start_state $@18 G_declarations $@19 BEGINT $@20 . states END

    STATE_DEC  shift, and go to state 51

    states  go to state 52
    state   go to state 53


State 42

    8 G_var_decl: ID $@3 . assign_var

    ASSIGNOP  shift, and go to state 54

    $default  reduce using rule 21 (assign_var)

    assign_var  go to state 55


State 43

   37 G_declarations: type $@12 G_identifier_list SEMICOLON .

    $default  reduce using rule 37 (G_declarations)


State 44

    3 G_identifier_list: G_identifier_list COMMA . $@1 G_vars_decl

    $default  reduce using rule 2 ($@1)

    $@1  go to state 56


State 45

    6 G_vars_decl: G_vars_decl COMMA . $@2 G_var_decl

    $default  reduce using rule 5 ($@2)

    $@2  go to state 57


State 46

   45 G_declarations: NOBACKUP type $@16 G_identifier_list SEMICOLON .

    $default  reduce using rule 45 (G_declarations)


State 47

   41 G_declarations: VOLATILE type $@14 G_identifier_list SEMICOLON .

    $default  reduce using rule 41 (G_declarations)


State 48

    3 G_identifier_list: G_identifier_list . COMMA $@1 G_vars_decl
   43 G_declarations: G_declarations NOBACKUP type $@15 G_identifier_list . SEMICOLON

    SEMICOLON  shift, and go to state 58
    COMMA      shift, and go to state 44


State 49

    3 G_identifier_list: G_identifier_list . COMMA $@1 G_vars_decl
   39 G_declarations: G_declarations VOLATILE type $@13 G_identifier_list . SEMICOLON

    SEMICOLON  shift, and go to state 59
    COMMA      shift, and go to state 44


State 50

   35 G_declarations: G_declarations type $@11 G_identifier_list SEMICOLON .

    $default  reduce using rule 35 (G_declarations)


State 51

   65 state: STATE_DEC . ID $@21 ROBRK declarations $@22 optional_statements $@23 RCBRK

    ID  shift, and go to state 60


State 52

   54 program: $@17 includes start_state $@18 G_declarations $@19 BEGINT $@20 states . END
   61 states: states . state

    END        shift, and go to state 61
    STATE_DEC  shift, and go to state 51

    state  go to state 62


State 53

   60 states: state .

    $default  reduce using rule 60 (states)


State 54

   20 assign_var: ASSIGNOP . $@7 math_var

    $default  reduce using rule 19 ($@7)

    $@7  go to state 63


State 55

    8 G_var_decl: ID $@3 assign_var .

    $default  reduce using rule 8 (G_var_decl)


State 56

    3 G_identifier_list: G_identifier_list COMMA $@1 . G_vars_decl

    ID  shift, and go to state 32

    $default  reduce using rule 9 (G_var_decl)

    G_vars_decl  go to state 64
    G_var_decl   go to state 35


State 57

    6 G_vars_decl: G_vars_decl COMMA $@2 . G_var_decl

    ID  shift, and go to state 32

    $default  reduce using rule 9 (G_var_decl)

    G_var_decl  go to state 65


State 58

   43 G_declarations: G_declarations NOBACKUP type $@15 G_identifier_list SEMICOLON .

    $default  reduce using rule 43 (G_declarations)


State 59

   39 G_declarations: G_declarations VOLATILE type $@13 G_identifier_list SEMICOLON .

    $default  reduce using rule 39 (G_declarations)


State 60

   65 state: STATE_DEC ID . $@21 ROBRK declarations $@22 optional_statements $@23 RCBRK

    $default  reduce using rule 62 ($@21)

    $@21  go to state 66


State 61

   54 program: $@17 includes start_state $@18 G_declarations $@19 BEGINT $@20 states END .

    $default  reduce using rule 54 (program)


State 62

   61 states: states state .

    $default  reduce using rule 61 (states)


State 63

   20 assign_var: ASSIGNOP $@7 . math_var

    INT     shift, and go to state 67
    REALNO  shift, and go to state 68
    ID      shift, and go to state 69
    FUNC    shift, and go to state 70

    math_var  go to state 71
    item_var  go to state 72


State 64

    3 G_identifier_list: G_identifier_list COMMA $@1 G_vars_decl .
    6 G_vars_decl: G_vars_decl . COMMA $@2 G_var_decl

    COMMA  shift, and go to state 45

    COMMA     [reduce using rule 3 (G_identifier_list)]
    $default  reduce using rule 3 (G_identifier_list)


State 65

    6 G_vars_decl: G_vars_decl COMMA $@2 G_var_decl .

    $default  reduce using rule 6 (G_vars_decl)


State 66

   65 state: STATE_DEC ID $@21 . ROBRK declarations $@22 optional_statements $@23 RCBRK

    ROBRK  shift, and go to state 73


State 67

   27 item_var: INT .

    $default  reduce using rule 27 (item_var)


State 68

   26 item_var: REALNO .

    $default  reduce using rule 26 (item_var)


State 69

   25 item_var: ID .

    $default  reduce using rule 25 (item_var)


State 70

   28 item_var: FUNC .

    $default  reduce using rule 28 (item_var)


State 71

   20 assign_var: ASSIGNOP $@7 math_var .
   24 math_var: math_var . ADDOP $@8 item_var

    ADDOP  shift, and go to state 74

    $default  reduce using rule 20 (assign_var)


State 72

   22 math_var: item_var .

    $default  reduce using rule 22 (math_var)


State 73

   65 state: STATE_DEC ID $@21 ROBRK . declarations $@22 optional_statements $@23 RCBRK

    INTEGER  shift, and go to state 14
    REAL     shift, and go to state 15
    STRING   shift, and go to state 16

    INTEGER   [reduce using rule 33 (declarations)]
    REAL      [reduce using rule 33 (declarations)]
    STRING    [reduce using rule 33 (declarations)]
    $default  reduce using rule 33 (declarations)

    declarations  go to state 75
    type          go to state 76


State 74

   24 math_var: math_var ADDOP . $@8 item_var

    $default  reduce using rule 23 ($@8)

    $@8  go to state 77


State 75

   30 declarations: declarations . type $@9 identifier_list SEMICOLON
   65 state: STATE_DEC ID $@21 ROBRK declarations . $@22 optional_statements $@23 RCBRK

    INTEGER  shift, and go to state 14
    REAL     shift, and go to state 15
    STRING   shift, and go to state 16

    $default  reduce using rule 63 ($@22)

    type  go to state 78
    $@22  go to state 79


State 76

   32 declarations: type . $@10 identifier_list SEMICOLON

    $default  reduce using rule 31 ($@10)

    $@10  go to state 80


State 77

   24 math_var: math_var ADDOP $@8 . item_var

    INT     shift, and go to state 67
    REALNO  shift, and go to state 68
    ID      shift, and go to state 69
    FUNC    shift, and go to state 70

    item_var  go to state 81


State 78

   30 declarations: declarations type . $@9 identifier_list SEMICOLON

    $default  reduce using rule 29 ($@9)

    $@9  go to state 82


State 79

   65 state: STATE_DEC ID $@21 ROBRK declarations $@22 . optional_statements $@23 RCBRK

    ID        shift, and go to state 83
    INSERT_C  shift, and go to state 84
    PRINTF    shift, and go to state 85
    IF        shift, and go to state 86
    FOR       shift, and go to state 87

    ID          [reduce using rule 69 (optional_statements)]
    INSERT_C    [reduce using rule 69 (optional_statements)]
    PRINTF      [reduce using rule 69 (optional_statements)]
    IF          [reduce using rule 69 (optional_statements)]
    FOR         [reduce using rule 69 (optional_statements)]
    TRANSITION  reduce using rule 69 (optional_statements)
    TRANSITION  [reduce using rule 73 ($@24)]
    $default    reduce using rule 69 (optional_statements)

    optional_statements  go to state 88
    statement_list       go to state 89
    statement            go to state 90
    $@24                 go to state 91
    operations           go to state 92


State 80

   32 declarations: type $@10 . identifier_list SEMICOLON

    ID  shift, and go to state 93

    $default  reduce using rule 18 (var_decl)

    identifier_list  go to state 94
    vars_decl        go to state 95
    var_decl         go to state 96


State 81

   24 math_var: math_var ADDOP $@8 item_var .

    $default  reduce using rule 24 (math_var)


State 82

   30 declarations: declarations type $@9 . identifier_list SEMICOLON

    ID  shift, and go to state 93

    $default  reduce using rule 18 (var_decl)

    identifier_list  go to state 97
    vars_decl        go to state 95
    var_decl         go to state 96


State 83

   98 operations: ID . ASSIGNOP $@35 math SEMICOLON

    ASSIGNOP  shift, and go to state 98


State 84

   84 statement: INSERT_C .

    $default  reduce using rule 84 (statement)


State 85

   83 statement: PRINTF . $@30 ROPAR printf RCPAR SEMICOLON

    $default  reduce using rule 82 ($@30)

    $@30  go to state 99


State 86

   81 statement: IF . ROPAR $@28 comparison_list RCPAR ROBRK $@29 optional_statements RCBRK

    ROPAR  shift, and go to state 100


State 87

   78 statement: FOR . ROPAR ID ASSIGNOP $@25 item SEMICOLON ID RELOP $@26 item SEMICOLON ID PPMM $@27 RCPAR ROBRK optional_statements RCBRK

    ROPAR  shift, and go to state 101


State 88

   65 state: STATE_DEC ID $@21 ROBRK declarations $@22 optional_statements . $@23 RCBRK
   67 optional_statements: optional_statements . statement_list

    ID        shift, and go to state 83
    INSERT_C  shift, and go to state 84
    PRINTF    shift, and go to state 85
    IF        shift, and go to state 86
    FOR       shift, and go to state 87

    TRANSITION  reduce using rule 73 ($@24)
    $default    reduce using rule 64 ($@23)

    $@23            go to state 102
    statement_list  go to state 103
    statement       go to state 90
    $@24            go to state 91
    operations      go to state 92


State 89

   68 optional_statements: statement_list .
   71 statement_list: statement_list . SEMICOLON statement

    SEMICOLON  shift, and go to state 104

    $default  reduce using rule 68 (optional_statements)


State 90

   70 statement_list: statement .

    $default  reduce using rule 70 (statement_list)


State 91

   74 statement: $@24 . transition_statement

    TRANSITION  shift, and go to state 105

    transition_statement  go to state 106


State 92

   72 statement: operations .
  100 operations: operations . ID ASSIGNOP $@36 math SEMICOLON

    ID  shift, and go to state 107

    ID        [reduce using rule 72 (statement)]
    $default  reduce using rule 72 (statement)


State 93

   17 var_decl: ID . $@6 assign_var

    $default  reduce using rule 16 ($@6)

    $@6  go to state 108


State 94

   12 identifier_list: identifier_list . COMMA $@4 vars_decl
   32 declarations: type $@10 identifier_list . SEMICOLON

    SEMICOLON  shift, and go to state 109
    COMMA      shift, and go to state 110


State 95

   10 identifier_list: vars_decl .
   15 vars_decl: vars_decl . COMMA $@5 var_decl

    COMMA  shift, and go to state 111

    COMMA     [reduce using rule 10 (identifier_list)]
    $default  reduce using rule 10 (identifier_list)


State 96

   13 vars_decl: var_decl .

    $default  reduce using rule 13 (vars_decl)


State 97

   12 identifier_list: identifier_list . COMMA $@4 vars_decl
   30 declarations: declarations type $@9 identifier_list . SEMICOLON

    SEMICOLON  shift, and go to state 112
    COMMA      shift, and go to state 110


State 98

   98 operations: ID ASSIGNOP . $@35 math SEMICOLON

    $default  reduce using rule 97 ($@35)

    $@35  go to state 113


State 99

   83 statement: PRINTF $@30 . ROPAR printf RCPAR SEMICOLON

    ROPAR  shift, and go to state 114


State 100

   81 statement: IF ROPAR . $@28 comparison_list RCPAR ROBRK $@29 optional_statements RCBRK

    $default  reduce using rule 79 ($@28)

    $@28  go to state 115


State 101

   78 statement: FOR ROPAR . ID ASSIGNOP $@25 item SEMICOLON ID RELOP $@26 item SEMICOLON ID PPMM $@27 RCPAR ROBRK optional_statements RCBRK

    ID  shift, and go to state 116


State 102

   65 state: STATE_DEC ID $@21 ROBRK declarations $@22 optional_statements $@23 . RCBRK

    RCBRK  shift, and go to state 117


State 103

   67 optional_statements: optional_statements statement_list .
   71 statement_list: statement_list . SEMICOLON statement

    SEMICOLON  shift, and go to state 104

    $default  reduce using rule 67 (optional_statements)


State 104

   71 statement_list: statement_list SEMICOLON . statement

    ID        shift, and go to state 83
    INSERT_C  shift, and go to state 84
    PRINTF    shift, and go to state 85
    IF        shift, and go to state 86
    FOR       shift, and go to state 87

    $default  reduce using rule 73 ($@24)

    statement   go to state 118
    $@24        go to state 91
    operations  go to state 92


State 105

   85 transition_statement: TRANSITION . trans_state SEMICOLON

    ID  shift, and go to state 119

    trans_state  go to state 120


State 106

   74 statement: $@24 transition_statement .

    $default  reduce using rule 74 (statement)


State 107

  100 operations: operations ID . ASSIGNOP $@36 math SEMICOLON

    ASSIGNOP  shift, and go to state 121


State 108

   17 var_decl: ID $@6 . assign_var

    ASSIGNOP  shift, and go to state 54

    $default  reduce using rule 21 (assign_var)

    assign_var  go to state 122


State 109

   32 declarations: type $@10 identifier_list SEMICOLON .

    $default  reduce using rule 32 (declarations)


State 110

   12 identifier_list: identifier_list COMMA . $@4 vars_decl

    $default  reduce using rule 11 ($@4)

    $@4  go to state 123


State 111

   15 vars_decl: vars_decl COMMA . $@5 var_decl

    $default  reduce using rule 14 ($@5)

    $@5  go to state 124


State 112

   30 declarations: declarations type $@9 identifier_list SEMICOLON .

    $default  reduce using rule 30 (declarations)


State 113

   98 operations: ID ASSIGNOP $@35 . math SEMICOLON

    INT     shift, and go to state 125
    REALNO  shift, and go to state 126
    ID      shift, and go to state 127
    FUNC    shift, and go to state 128

    math  go to state 129
    item  go to state 130


State 114

   83 statement: PRINTF $@30 ROPAR . printf RCPAR SEMICOLON

    QUOTE  shift, and go to state 131

    printf  go to state 132


State 115

   81 statement: IF ROPAR $@28 . comparison_list RCPAR ROBRK $@29 optional_statements RCBRK

    ID  shift, and go to state 133

    comparison_list  go to state 134
    comparison       go to state 135


State 116

   78 statement: FOR ROPAR ID . ASSIGNOP $@25 item SEMICOLON ID RELOP $@26 item SEMICOLON ID PPMM $@27 RCPAR ROBRK optional_statements RCBRK

    ASSIGNOP  shift, and go to state 136


State 117

   65 state: STATE_DEC ID $@21 ROBRK declarations $@22 optional_statements $@23 RCBRK .

    $default  reduce using rule 65 (state)


State 118

   71 statement_list: statement_list SEMICOLON statement .

    $default  reduce using rule 71 (statement_list)


State 119

   66 trans_state: ID .

    $default  reduce using rule 66 (trans_state)


State 120

   85 transition_statement: TRANSITION trans_state . SEMICOLON

    SEMICOLON  shift, and go to state 137


State 121

  100 operations: operations ID ASSIGNOP . $@36 math SEMICOLON

    $default  reduce using rule 99 ($@36)

    $@36  go to state 138


State 122

   17 var_decl: ID $@6 assign_var .

    $default  reduce using rule 17 (var_decl)


State 123

   12 identifier_list: identifier_list COMMA $@4 . vars_decl

    ID  shift, and go to state 93

    $default  reduce using rule 18 (var_decl)

    vars_decl  go to state 139
    var_decl   go to state 96


State 124

   15 vars_decl: vars_decl COMMA $@5 . var_decl

    ID  shift, and go to state 93

    $default  reduce using rule 18 (var_decl)

    var_decl  go to state 140


State 125

  106 item: INT .

    $default  reduce using rule 106 (item)


State 126

  105 item: REALNO .

    $default  reduce using rule 105 (item)


State 127

  104 item: ID .

    $default  reduce using rule 104 (item)


State 128

  107 item: FUNC .

    $default  reduce using rule 107 (item)


State 129

   98 operations: ID ASSIGNOP $@35 math . SEMICOLON
  103 math: math . ADDOP $@37 item

    SEMICOLON  shift, and go to state 141
    ADDOP      shift, and go to state 142


State 130

  101 math: item .

    $default  reduce using rule 101 (math)


State 131

   87 printf: QUOTE . COMMA $@31 vars_print
   88       | QUOTE .

    COMMA  shift, and go to state 143

    $default  reduce using rule 88 (printf)


State 132

   83 statement: PRINTF $@30 ROPAR printf . RCPAR SEMICOLON

    RCPAR  shift, and go to state 144


State 133

  113 comparison: ID . RELOP INT
  114           | ID . RELOP ID
  115           | ID . RELOP FUNC

    RELOP  shift, and go to state 145


State 134

   81 statement: IF ROPAR $@28 comparison_list . RCPAR ROBRK $@29 optional_statements RCBRK
  110 comparison_list: comparison_list . AND $@38 comparison
  112                | comparison_list . OR $@39 comparison

    RCPAR  shift, and go to state 146
    AND    shift, and go to state 147
    OR     shift, and go to state 148


State 135

  108 comparison_list: comparison .

    $default  reduce using rule 108 (comparison_list)


State 136

   78 statement: FOR ROPAR ID ASSIGNOP . $@25 item SEMICOLON ID RELOP $@26 item SEMICOLON ID PPMM $@27 RCPAR ROBRK optional_statements RCBRK

    $default  reduce using rule 75 ($@25)

    $@25  go to state 149


State 137

   85 transition_statement: TRANSITION trans_state SEMICOLON .

    $default  reduce using rule 85 (transition_statement)


State 138

  100 operations: operations ID ASSIGNOP $@36 . math SEMICOLON

    INT     shift, and go to state 125
    REALNO  shift, and go to state 126
    ID      shift, and go to state 127
    FUNC    shift, and go to state 128

    math  go to state 150
    item  go to state 130


State 139

   12 identifier_list: identifier_list COMMA $@4 vars_decl .
   15 vars_decl: vars_decl . COMMA $@5 var_decl

    COMMA  shift, and go to state 111

    COMMA     [reduce using rule 12 (identifier_list)]
    $default  reduce using rule 12 (identifier_list)


State 140

   15 vars_decl: vars_decl COMMA $@5 var_decl .

    $default  reduce using rule 15 (vars_decl)


State 141

   98 operations: ID ASSIGNOP $@35 math SEMICOLON .

    $default  reduce using rule 98 (operations)


State 142

  103 math: math ADDOP . $@37 item

    $default  reduce using rule 102 ($@37)

    $@37  go to state 151


State 143

   87 printf: QUOTE COMMA . $@31 vars_print

    $default  reduce using rule 86 ($@31)

    $@31  go to state 152


State 144

   83 statement: PRINTF $@30 ROPAR printf RCPAR . SEMICOLON

    SEMICOLON  shift, and go to state 153


State 145

  113 comparison: ID RELOP . INT
  114           | ID RELOP . ID
  115           | ID RELOP . FUNC

    INT   shift, and go to state 154
    ID    shift, and go to state 155
    FUNC  shift, and go to state 156


State 146

   81 statement: IF ROPAR $@28 comparison_list RCPAR . ROBRK $@29 optional_statements RCBRK

    ROBRK  shift, and go to state 157


State 147

  110 comparison_list: comparison_list AND . $@38 comparison

    $default  reduce using rule 109 ($@38)

    $@38  go to state 158


State 148

  112 comparison_list: comparison_list OR . $@39 comparison

    $default  reduce using rule 111 ($@39)

    $@39  go to state 159


State 149

   78 statement: FOR ROPAR ID ASSIGNOP $@25 . item SEMICOLON ID RELOP $@26 item SEMICOLON ID PPMM $@27 RCPAR ROBRK optional_statements RCBRK

    INT     shift, and go to state 125
    REALNO  shift, and go to state 126
    ID      shift, and go to state 127
    FUNC    shift, and go to state 128

    item  go to state 160


State 150

  100 operations: operations ID ASSIGNOP $@36 math . SEMICOLON
  103 math: math . ADDOP $@37 item

    SEMICOLON  shift, and go to state 161
    ADDOP      shift, and go to state 142


State 151

  103 math: math ADDOP $@37 . item

    INT     shift, and go to state 125
    REALNO  shift, and go to state 126
    ID      shift, and go to state 127
    FUNC    shift, and go to state 128

    item  go to state 162


State 152

   87 printf: QUOTE COMMA $@31 . vars_print

    ID  shift, and go to state 163

    vars_print  go to state 164
    var_print   go to state 165


State 153

   83 statement: PRINTF $@30 ROPAR printf RCPAR SEMICOLON .

    $default  reduce using rule 83 (statement)


State 154

  113 comparison: ID RELOP INT .

    $default  reduce using rule 113 (comparison)


State 155

  114 comparison: ID RELOP ID .

    $default  reduce using rule 114 (comparison)


State 156

  115 comparison: ID RELOP FUNC .

    $default  reduce using rule 115 (comparison)


State 157

   81 statement: IF ROPAR $@28 comparison_list RCPAR ROBRK . $@29 optional_statements RCBRK

    $default  reduce using rule 80 ($@29)

    $@29  go to state 166


State 158

  110 comparison_list: comparison_list AND $@38 . comparison

    ID  shift, and go to state 133

    comparison  go to state 167


State 159

  112 comparison_list: comparison_list OR $@39 . comparison

    ID  shift, and go to state 133

    comparison  go to state 168


State 160

   78 statement: FOR ROPAR ID ASSIGNOP $@25 item . SEMICOLON ID RELOP $@26 item SEMICOLON ID PPMM $@27 RCPAR ROBRK optional_statements RCBRK

    SEMICOLON  shift, and go to state 169


State 161

  100 operations: operations ID ASSIGNOP $@36 math SEMICOLON .

    $default  reduce using rule 100 (operations)


State 162

  103 math: math ADDOP $@37 item .

    $default  reduce using rule 103 (math)


State 163

   93 var_print: ID . $@33 assign

    $default  reduce using rule 92 ($@33)

    $@33  go to state 170


State 164

   87 printf: QUOTE COMMA $@31 vars_print .
   91 vars_print: vars_print . COMMA $@32 var_print

    COMMA  shift, and go to state 171

    $default  reduce using rule 87 (printf)


State 165

   89 vars_print: var_print .

    $default  reduce using rule 89 (vars_print)


State 166

   81 statement: IF ROPAR $@28 comparison_list RCPAR ROBRK $@29 . optional_statements RCBRK

    ID        shift, and go to state 83
    INSERT_C  shift, and go to state 84
    PRINTF    shift, and go to state 85
    IF        shift, and go to state 86
    FOR       shift, and go to state 87

    ID          [reduce using rule 69 (optional_statements)]
    INSERT_C    [reduce using rule 69 (optional_statements)]
    PRINTF      [reduce using rule 69 (optional_statements)]
    IF          [reduce using rule 69 (optional_statements)]
    FOR         [reduce using rule 69 (optional_statements)]
    TRANSITION  reduce using rule 69 (optional_statements)
    TRANSITION  [reduce using rule 73 ($@24)]
    $default    reduce using rule 69 (optional_statements)

    optional_statements  go to state 172
    statement_list       go to state 89
    statement            go to state 90
    $@24                 go to state 91
    operations           go to state 92


State 167

  110 comparison_list: comparison_list AND $@38 comparison .

    $default  reduce using rule 110 (comparison_list)


State 168

  112 comparison_list: comparison_list OR $@39 comparison .

    $default  reduce using rule 112 (comparison_list)


State 169

   78 statement: FOR ROPAR ID ASSIGNOP $@25 item SEMICOLON . ID RELOP $@26 item SEMICOLON ID PPMM $@27 RCPAR ROBRK optional_statements RCBRK

    ID  shift, and go to state 173


State 170

   93 var_print: ID $@33 . assign

    ASSIGNOP  shift, and go to state 174

    $default  reduce using rule 96 (assign)

    assign  go to state 175


State 171

   91 vars_print: vars_print COMMA . $@32 var_print

    $default  reduce using rule 90 ($@32)

    $@32  go to state 176


State 172

   67 optional_statements: optional_statements . statement_list
   81 statement: IF ROPAR $@28 comparison_list RCPAR ROBRK $@29 optional_statements . RCBRK

    ID        shift, and go to state 83
    INSERT_C  shift, and go to state 84
    PRINTF    shift, and go to state 85
    IF        shift, and go to state 86
    FOR       shift, and go to state 87
    RCBRK     shift, and go to state 177

    $default  reduce using rule 73 ($@24)

    statement_list  go to state 103
    statement       go to state 90
    $@24            go to state 91
    operations      go to state 92


State 173

   78 statement: FOR ROPAR ID ASSIGNOP $@25 item SEMICOLON ID . RELOP $@26 item SEMICOLON ID PPMM $@27 RCPAR ROBRK optional_statements RCBRK

    RELOP  shift, and go to state 178


State 174

   95 assign: ASSIGNOP . $@34 math

    $default  reduce using rule 94 ($@34)

    $@34  go to state 179


State 175

   93 var_print: ID $@33 assign .

    $default  reduce using rule 93 (var_print)


State 176

   91 vars_print: vars_print COMMA $@32 . var_print

    ID  shift, and go to state 163

    var_print  go to state 180


State 177

   81 statement: IF ROPAR $@28 comparison_list RCPAR ROBRK $@29 optional_statements RCBRK .

    $default  reduce using rule 81 (statement)


State 178

   78 statement: FOR ROPAR ID ASSIGNOP $@25 item SEMICOLON ID RELOP . $@26 item SEMICOLON ID PPMM $@27 RCPAR ROBRK optional_statements RCBRK

    $default  reduce using rule 76 ($@26)

    $@26  go to state 181


State 179

   95 assign: ASSIGNOP $@34 . math

    INT     shift, and go to state 125
    REALNO  shift, and go to state 126
    ID      shift, and go to state 127
    FUNC    shift, and go to state 128

    math  go to state 182
    item  go to state 130


State 180

   91 vars_print: vars_print COMMA $@32 var_print .

    $default  reduce using rule 91 (vars_print)


State 181

   78 statement: FOR ROPAR ID ASSIGNOP $@25 item SEMICOLON ID RELOP $@26 . item SEMICOLON ID PPMM $@27 RCPAR ROBRK optional_statements RCBRK

    INT     shift, and go to state 125
    REALNO  shift, and go to state 126
    ID      shift, and go to state 127
    FUNC    shift, and go to state 128

    item  go to state 183


State 182

   95 assign: ASSIGNOP $@34 math .
  103 math: math . ADDOP $@37 item

    ADDOP  shift, and go to state 142

    $default  reduce using rule 95 (assign)


State 183

   78 statement: FOR ROPAR ID ASSIGNOP $@25 item SEMICOLON ID RELOP $@26 item . SEMICOLON ID PPMM $@27 RCPAR ROBRK optional_statements RCBRK

    SEMICOLON  shift, and go to state 184


State 184

   78 statement: FOR ROPAR ID ASSIGNOP $@25 item SEMICOLON ID RELOP $@26 item SEMICOLON . ID PPMM $@27 RCPAR ROBRK optional_statements RCBRK

    ID  shift, and go to state 185


State 185

   78 statement: FOR ROPAR ID ASSIGNOP $@25 item SEMICOLON ID RELOP $@26 item SEMICOLON ID . PPMM $@27 RCPAR ROBRK optional_statements RCBRK

    PPMM  shift, and go to state 186


State 186

   78 statement: FOR ROPAR ID ASSIGNOP $@25 item SEMICOLON ID RELOP $@26 item SEMICOLON ID PPMM . $@27 RCPAR ROBRK optional_statements RCBRK

    $default  reduce using rule 77 ($@27)

    $@27  go to state 187


State 187

   78 statement: FOR ROPAR ID ASSIGNOP $@25 item SEMICOLON ID RELOP $@26 item SEMICOLON ID PPMM $@27 . RCPAR ROBRK optional_statements RCBRK

    RCPAR  shift, and go to state 188


State 188

   78 statement: FOR ROPAR ID ASSIGNOP $@25 item SEMICOLON ID RELOP $@26 item SEMICOLON ID PPMM $@27 RCPAR . ROBRK optional_statements RCBRK

    ROBRK  shift, and go to state 189


State 189

   78 statement: FOR ROPAR ID ASSIGNOP $@25 item SEMICOLON ID RELOP $@26 item SEMICOLON ID PPMM $@27 RCPAR ROBRK . optional_statements RCBRK

    ID        shift, and go to state 83
    INSERT_C  shift, and go to state 84
    PRINTF    shift, and go to state 85
    IF        shift, and go to state 86
    FOR       shift, and go to state 87

    ID          [reduce using rule 69 (optional_statements)]
    INSERT_C    [reduce using rule 69 (optional_statements)]
    PRINTF      [reduce using rule 69 (optional_statements)]
    IF          [reduce using rule 69 (optional_statements)]
    FOR         [reduce using rule 69 (optional_statements)]
    TRANSITION  reduce using rule 69 (optional_statements)
    TRANSITION  [reduce using rule 73 ($@24)]
    $default    reduce using rule 69 (optional_statements)

    optional_statements  go to state 190
    statement_list       go to state 89
    statement            go to state 90
    $@24                 go to state 91
    operations           go to state 92


State 190

   67 optional_statements: optional_statements . statement_list
   78 statement: FOR ROPAR ID ASSIGNOP $@25 item SEMICOLON ID RELOP $@26 item SEMICOLON ID PPMM $@27 RCPAR ROBRK optional_statements . RCBRK

    ID        shift, and go to state 83
    INSERT_C  shift, and go to state 84
    PRINTF    shift, and go to state 85
    IF        shift, and go to state 86
    FOR       shift, and go to state 87
    RCBRK     shift, and go to state 191

    $default  reduce using rule 73 ($@24)

    statement_list  go to state 103
    statement       go to state 90
    $@24            go to state 91
    operations      go to state 92


State 191

   78 statement: FOR ROPAR ID ASSIGNOP $@25 item SEMICOLON ID RELOP $@26 item SEMICOLON ID PPMM $@27 RCPAR ROBRK optional_statements RCBRK .

    $default  reduce using rule 78 (statement)
